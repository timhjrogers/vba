
Attribute VB_Name = "XZXZXZ_word_normal"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub A2_FORM1()
zzbuttons_highlands.Show
buttons.Show
ListCommentsFrm.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PrintScreen()
WordBasic.SendKeys "{prtsc}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub f3()
SendKeys "{f3}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub f9()
SendKeys "{f9}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub af8()
SendKeys "%{f8}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_list()
For c = 1 To ActiveDocument.Comments.Count
        Z = Z & vbCrLf & c & " " & ActiveDocument.Comments(c).Scope
        https://social.msdn.microsoft.com/Forums/en-US/9a109c23-e29d-49a2-a563-a4d4ea50659e/vba-word-get-line-number-of-comment-object?forum=isvvba
        
        p = "Page" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdActiveEndPageNumber)
        l = "Line" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdFirstCharacterLineNumber)
        
        x = x & vbCrLf & c & " " & ActiveDocument.Comments(c).Range.Text
        q = q & vbCrLf & vbCrLf & "Your text: '..." & ActiveDocument.Comments(c).Scope & "...' [" & p & l & "] Feedback: " & ActiveDocument.Comments(c).Range.Text
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_quote()
For c = 1 To ActiveDocument.Comments.Count
        Z = Z & vbCrLf & c & " " & ActiveDocument.Comments(c).Scope
        https://social.msdn.microsoft.com/Forums/en-US/9a109c23-e29d-49a2-a563-a4d4ea50659e/vba-word-get-line-number-of-comment-object?forum=isvvba
        
        p = "Page" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdActiveEndPageNumber)
        l = "Line" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdFirstCharacterLineNumber)
        
        x = x & vbCrLf & c & " " & ActiveDocument.Comments(c).Range.Text
        q = q & vbCrLf & vbCrLf & "Your text: '..." & ActiveDocument.Comments(c).Scope & "...' [" & p & l & "] Feedback: " & ActiveDocument.Comments(c).Range.Text
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RemoveAllComments()
Dim n As Long
Dim oComments As Comments
Set oComments = ActiveDocument.Comments
For n = oComments.Count To 1 Step -1
        oComments(n).Delete
Next 'n
Set oComments = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Commentslist()
Dim n As Long
Dim oComments As Comments
Set oComments = ActiveDocument.Comments
For n = oComments.Count To 1 Step -1
        If oComments(n).Date > #2/29/2016# Then
                xc = xc + 1
                Debug.Print xc & " " & oComments(n).Range.Text & " (" & oComments(n).Author & " " & oComments(n).Date & ")"
                
        End If
        
Next 'n
Set oComments = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1()
x = "1=UserFormOutlookXZXZXZ, 2=UserFormInputOutput"
x = InputBox(x, x, x)
If x = 1 Then UserFormOutlookXZXZXZ.Show
        If x = 2 Then UserFormInputOutput.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub CreateAppt()
Dim myItem As Object
Dim myRequiredAttendee, myOptionalAttendee, myResourceAttendee As Outlook.Recipient
xtext1 = "DIARY: Meeting at location at time with person re subject"
xtext2 = "Regards, XZXZXZ0XZXZXZXZXZXZ051 Email XZXZXZ@XZXZXZXZXZXZXZXZXZ.com"
xtext3 = "(Copied to my other diaries)"
xtext4 = "T.XZXZXZ@HEALTH.GOV.JE; t.XZXZXZ@gov.je; XZXZXZ@XZXZXZXZXZXZXZXZXZ.com; tim.XZXZXZ@XZXZXZi.co; XZXZXZ@XZXZXZ.com"
Dim appOL As Object
Dim objReminder As Object
Set appOL = GetObject(, "Outlook.application")
Set myItem = appOL.CreateItem(olAppointmentItem)
myItem.MeetingStatus = olMeeting
myItem.Subject = xtext1
myItem.Body = xtext1 & vbCrLf & xtext2 & vbCrLf & xtext3
myItem.Location = ""
myItem.Start = #9/24/2009 1:30:00 PM#
myItem.Start = Now()
myItem.Duration = 90
Set myRequiredAttendee = myItem.Recipients.Add("Nate Sun")
Set myRequiredAttendee = myItem.Recipients.Add(xtext4)
myRequiredAttendee.Type = olRequired
Set myOptionalAttendee = myItem.Recipients.Add("Kevin Kennedy")
Set myOptionalAttendee = myItem.Recipients.Add(xtext3)
myOptionalAttendee.Type = olOptional
Set myResourceAttendee = myItem.Recipients.Add(xtext3)
myResourceAttendee.Type = olResource
myItem.Display
myItem.Send
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xsaveas()
fname1 = ActiveDocument.Path & "\" & ActiveDocument.Name
xdate = Format(Now, "yymmdd")
fname2 = Replace(fname1, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=fname2, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
ActiveDocument.SaveAs FileName:=fname1, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST()
Debug.Print ActiveDocument.Path & "\" & ActiveDocument.Name
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub saveas_float()
xpath = ActiveDocument.Path & "\"
xdate = Format(Now, "yyyymmdd")
xname = xpath & ActiveDocument.Name
xname2 = Replace(xname, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=xname2
ActiveDocument.SaveAs FileName:=xname
x = xpath
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub saveas_timed()
xpath = ActiveDocument.Path & "\"
xdate = Format(Now, "yyyymmdd HHMM")
xname = xpath & ActiveDocument.Name
xname2 = Replace(xname, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=xname2
ActiveDocument.SaveAs FileName:=xname
x = xpath
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_resize()
Dim i As Long
With ActiveDocument
For i = 1 To .InlineShapes.Count
        With .InlineShapes(i)
        .ScaleHeight = 50
        .ScaleWidth = 50
        End With
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ScalePictures40()
Dim i As Long
With ActiveDocument
For i = 1 To .InlineShapes.Count
        With .InlineShapes(i)
        .ScaleHeight = 40
        .ScaleWidth = 40
        End With
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AA_addautotext()
http://msdn.microsoft.com/en-us/library/office/ff195437.aspx
NormalTemplate.AutoTextEntries("#test1").Value = "The Johnson Company"
Dim XAUTOTEXT_HANDLE As String
Dim p As Integer
XAUTOTEXT_HANDLE = "#zz" 'Left(Trim(Selection.Range), 4)
p = InStr(1, Selection.Range, ".")
XAUTOTEXT_HANDLE = Left(Trim(Selection.Range), p)
MsgBox XAUTOTEXT_HANDLE
NormalTemplate.AutoTextEntries.Add Name:=XAUTOTEXT_HANDLE, Range:=Selection.Range
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub vba_export_modules_V()
#http://www.cpearson.com/Excel/VBE.aspx
 reference to extensibility library
xprefix = "V:\Data2017\VBA\VBAWord\vba_"
Dim objMyProj As VBProject
Dim objVBComp As VBComponent
Set objMyProj = Application.VBE.ActiveVBProject
For Each objVBComp In objMyProj.VBComponents
        If objVBComp.Type = vbext_ct_StdModule Then
                
                
                'xprefix = "V:\Data2016\VBA\VBAWord\word_"
                objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".bas"
                objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
                'xprefix = "V:\Data2016\VBA\VBAWord\word_"
                objVBComp.Export xprefix & objVBComp.Name & ".bas"
                objVBComp.Export xprefix & objVBComp.Name & ".txt"
                
                Debug.Print xprefix
                
        End If
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ListAutoText()
Dim oAutoText   As Word.AutoTextEntry
With Application
 \\ Turn screenupdating off
.ScreenUpdating = False
 \\ Add new document
.Documents.Add
 \\ Loop through all Autotext entries in Normal.dot
For Each oAutoText In NormalTemplate.AutoTextEntries
        ' \\ Work with selection
        With .Selection
        ' \\ Make all Autotext names Bold
        .Font.Bold = True
        .TypeText Text:=oAutoText.Name
        .TypeParagraph ' \\ Insert Para
        
        ' \\ Turn of Bold for the Autotext entries
        .Font.Bold = False
        ' \\ Insert entry
        oAutoText.Insert Where:=.Range, RichText:=True
        
        ' \\ Insert two paragraphs
        .TypeParagraph
        .TypeText Text:="==============================================="
        .TypeParagraph
        End With
        Next
        
        ' \\ Turn screenupdating back on
        .ScreenUpdating = True
        End With
        xdate = Format(Now, "yyyymmdd")
        fname = "V:\Data2016\VBA\VBAWord\word_autotext_backup" & xdate & ".docx"
        ActiveDocument.SaveAs FileName:=fname
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_old()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = xtext & ActiveDocument.Paragraphs(p).Range.Text & vbCrLf
Next p
fname = ActiveDocument.Path & "\temptext.txt"
Call PRINT_INFO(xtext, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_Blog_Word_Linked()
x = "[B]logger or [W]ordpress or [L]linked_in"
x = InputBox(x, x, x)
x = LCase(x)
xnewline = vbCrLf ' for blogger
If x = "w" Then xnewline = Chr(10) ' for wordpress
        If x = "b" Then xnewline = vbCrLf & "<br/>" ' for blogger
                If x = "l" Then xnewline = "" ' for linkedin
                        
                        For p = 1 To ActiveDocument.Paragraphs.Count
                                line2add = ActiveDocument.Paragraphs(p).Range.Text
                                
                                If ActiveDocument.Paragraphs(p).Range.Font.Italic = True Then
                                        If (x = "b" And Len(line2add) > 2) Then line2add = "<i>" & line2add & "</i>"
                                        End If
                                        
                                        If line2add = UCase(line2add) Then
                                                If (x = "b" And Len(line2add) > 2) Then line2add = "<b>" & line2add & "</b>"
                                                End If
                                                
                                                xtext = xtext & line2add & xnewline
                                        Next p
                                        
                                        
                                        If x = "l" Then
                                                xtext = Replace(xtext, Chr(10), vbCrLf)
                                                xtext = Replace(xtext, Chr(12), vbCrLf)
                                                xtext = Replace(xtext, Chr(13), vbCrLf)
                                                xtext = Replace(xtext, vbCrLf & vbCrLf, vbCrLf)
                                        End If
                                        fname = ActiveDocument.Path & "\temptext.txt"
                                        Call PRINT_INFO(xtext, fname)
                                        FileCopy fname, Replace(fname, ".txt", ".html")
                                        Debug.Print ActiveDocument.Path
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_html_XZXZXZwebpage()
b1 = "<b style='color: #008080;'>"
b2 = "</b>"
h11 = "<h1 style='color: #008080;'>"
h12 = "</h1>"
For p = 1 To ActiveDocument.Paragraphs.Count
        XLINE = ActiveDocument.Paragraphs(p).Range.Text
        XLINE = Trim(XLINE)
        XLINE = Replace(XLINE, Chr(13), "")
        
        If p = 1 Then xtext = xtext & h11 & XLINE & h12 & vbCrLf
                
                
                If UCase(XLINE) = XLINE And Len(XLINE) > 3 Then
                        xtext = xtext & b1 & XLINE & b2 & vbCrLf
                        ElseIf InStr(1, XLINE, "Case Study") Then
                        xtext = xtext & h11 & XLINE & h12 & vbCrLf
                        Else
                        xtext = xtext & XLINE & "<BR>" & vbCrLf
                End If
                
                
                
                
                
        Next p
        fname = ActiveDocument.Path & "\temptext.txt"
        Call PRINT_INFO(xtext, fname)
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_html()
b1 = "<b style='color: red;'>"
b2 = "</b>"
h11 = "<h1 style='color: red;'>"
h12 = "</h1>"
For p = 1 To ActiveDocument.Paragraphs.Count
        XLINE = ActiveDocument.Paragraphs(p).Range.Text
        XLINE = Trim(XLINE)
        XLINE = Replace(XLINE, Chr(13), "")
        
        If p = 1 Then xtext = xtext & h11 & XLINE & h12 & vbCrLf
                
                If UCase(XLINE) = XLINE And Len(XLINE) > 3 Then
                        xtext = xtext & b1 & XLINE & b2 & vbCrLf
                        Else
                        xtext = xtext & XLINE & "<BR>" & vbCrLf
                End If
                
                
                
                
                
        Next p
        fname = ActiveDocument.Path & "\temptext.txt"
        Call PRINT_INFO(xtext, fname)
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function halfdays(x)
halfdays = Int(x)
If x > Int(x) + 0.49 Then halfdays = Int(x) + 0.5
        
End Function
Call ports2013_headings_multi_function("Normal", "Calibri", 11, "", wdBlue)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub bold_2hyphen()
Dim oPara As Paragraph
Dim xpos As Integer
For Each oPara In ActiveDocument.Paragraphs
For Each oPara In Selection.Paragraphs
        Debug.Print oPara.Range.Text
        '      If oPara.Range.Words(2).Characters(1) = ":" Then
        oPara.Range.Words(1).Font.Bold = True
        xpos = InStr(1, oPara.Range.Text, "-")
        For c = 1 To xpos
                oPara.Range.Characters(c).Font.Bold = True
        Next c
        '     End If
Next oPara
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub bold_firstword()
Dim oPara As Paragraph
For Each oPara In ActiveDocument.Paragraphs
For Each oPara In Selection.Paragraphs
        
        '      If oPara.Range.Words(2).Characters(1) = ":" Then
        oPara.Range.Words(1).Font.Bold = True
        oPara.Range.Characters(2).Font.Bold = False
        '     End If
Next oPara
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_XZXZXZd()
xfont = "Arial"
XSIZE = 10
fnormal = 11
Call set2016_headings("Heading 1", xfont, 14, "bold", wdBlack)
Call set2016_headings("Heading 2", xfont, 12, "bold", wdBlue)
Call set2016_headings("Heading 3", xfont, 12, "", wdBlack)
Call set2016_headings("Heading 4", xfont, fnormal, "", wdBlack)
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_XZXZXZ()
xfont = "Calibri"
XSIZE = 11
fnormal = 11
Call set2016_headings("Heading 1", xfont, 14, "bold", wdTeal)
Call set2016_headings("Heading 2", xfont, 13, "bold", wdTeal)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_jcsl()
xfont = "Century Gothic"
XSIZE = 10
fnormal = 10
Call set2016_headings("Heading 1", xfont, 14, "bold", wdTeal)
Call set2016_headings("Heading 2", xfont, 13, "bold", wdTeal)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_XZXZXZ()
xfont = "Calibri"
XSIZE = 11
fnormal = 11
xcolor = RGB(214, 0, 147)
XCOLOR = RGB(214, 0, 1)
Call set2016_headings("Heading 1", xfont, 14, "bold", xcolor)
Call set2016_headings("Heading 2", xfont, 12, "bold", xcolor)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_tbs()
xfont = "Calibri"
XSIZE = 11
fnormal = 11
Call set2016_headings("Heading 1", xfont, 14, "bold", wdViolet)
Call set2016_headings("Heading 2", xfont, 12, "bold", wdViolet)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD()
For p = 1 To ActiveDocument.Paragraphs.Count
        If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                xtext = ActiveDocument.Paragraphs(p).Range.Text
                If UCase(xtext) = xtext Then
                        ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                        ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 128, 128)
                        
                        If InStr(1, UCase(xtext), UCase("Appendix")) Then
                                ActiveDocument.Paragraphs(p).Range.Font.Size = 14
                        End If
                        
                        
                        Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                End If
        End If
        
        
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub upper_banner()
For p = 1 To ActiveDocument.Paragraphs.Count
        If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                        If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 80, 80) ' RGB(255, 0, 0)
                                ' Selection.Shading.ForegroundPatternColor = wdColorAutomatic
                                ActiveDocument.Paragraphs(p).Range.Shading.BackgroundPatternColor = -671023258 '-671023207
                                
                                
                                Else
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                End If
        End If
        
        
Next p
 Selection.Shading.Texture = wdTextureNone
 Selection.Shading.ForegroundPatternColor = wdColorAutomatic
 Selection.Shading.BackgroundPatternColor = -671023207
 Selection.Shading.Texture = wdTextureNone
 Selection.Shading.ForegroundPatternColor = wdColorAutomatic
 Selection.Shading.BackgroundPatternColor = -671023258
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD_red()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range.Text
        If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                        
                        
                        If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
                                Else
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 80, 80)
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                        
                        If InStr(1, UCase(xtext), UCase("APPENDIX")) Then ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                        End If
                End If
                
                
        Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_format_text()
text_to_find = "1234567890"
For p = 1 To ActiveDocument.Paragraphs.Count
        found_text = Left(ActiveDocument.Paragraphs(p).Range.Text, 1)
        If InStr(1, text_to_find, found_text) Then
                
                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
                ActiveDocument.Paragraphs(p).Range.Font.Size = 16
                
        End If
        
        
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_legal_para()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range.Text
        
        For q = 1 To 9
                If Left(xtext, 1) = CStr(q) Then
                        ActiveDocument.Paragraphs(p).Range.Text = "~" & ActiveDocument.Paragraphs(p).Range.Text
                End If
        Next q
        x = 0
        looktext = Left(Trim(xtext), 6)
        x = count_find(looktext, ".")
        
        If x = 2 Then
                ActiveDocument.Paragraphs(p).Range.Text = "~" & vbTab & ActiveDocument.Paragraphs(p).Range.Text
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 200, 0)
                Debug.Print looktext, x, ActiveDocument.Paragraphs(p).Range.Text
        End If
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function count_find(xtext, thingtofind)
Dim xc As Integer
xc = 0
For c = 1 To Len(xtext)
        If Mid(xtext, c, 1) = thingtofind Then xc = xc + 1
        Next c
        count_find = xc
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_extract_text()
text_to_find = "V:\"
For p = 1 To ActiveDocument.Paragraphs.Count
        If InStr(1, ActiveDocument.Paragraphs(p).Range.Text, text_to_find) Then
                xc = xc + 1
                x = x & "Doc No." & xc & ". " & vbCrLf & ActiveDocument.Paragraphs(p).Range.Text
                '' ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
        End If
        
        
        
Next p
Z = Replace(x, Chr(13), "")
Z = Replace(Z, text_to_find, ",  ")
Debug.Print x
Debug.Print LCase(Z)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_JRC()
xfont = "Calibri"
fnormal = 11
Call set2016_headings("Heading 1", xfont, 14, "bold", wdRed)
Call set2016_headings("Heading 2", xfont, 12, "bold", "")
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function set2016_headings(xstyle, xfont, XSIZE, xbold, xcolor)
With ActiveDocument.Styles(xstyle).Font
.Name = xfont
.Size = XSIZE
.Bold = False
.Italic = False
If Len(xbold) > 1 Then .Bold = True
        
        'http://dmcritchie.mvps.org/excel/colors.htm
        .ColorIndex = wdBlack
        .ColorIndex = wdBlack
        
        
        If Len(xcolor) > 0 Then
                If xcolor > 10 Then
                        .Color = xcolor
                        Else
                        .ColorIndex = xcolor
                End If
        End If
        
        
        End With
        xindent = 0
        If xstyle = "Heading 1" Then xindent = 0
                If xstyle = "Heading 2" Then xindent = 1
                        If xstyle = "Heading 3" Then xindent = 2
                                If xstyle = "Heading 4" Then xindent = 3
                                        
                                        With ActiveDocument.Styles(xstyle).ParagraphFormat
                                        .LeftIndent = CentimetersToPoints(xindent)
                                        .RightIndent = CentimetersToPoints(0)
                                        .FirstLineIndent = CentimetersToPoints(1.5)
                                        
                                        .TabStops.ClearAll
                                        
                                        .SpaceBefore = 0
                                        .SpaceBeforeAuto = False
                                        .SpaceAfter = 0
                                        .SpaceAfterAuto = False
                                        .LineSpacingRule = wdLineSpace0pt0
                                        .Alignment = wdAlignParagraphLeft
                                        .WidowControl = True
                                        .KeepWithNext = False
                                        .KeepTogether = False
                                        .PageBreakBefore = False
                                        .NoLineNumber = False
                                        .Hyphenation = True
                                        .FirstLineIndent = CentimetersToPoints(0)
                                        .OutlineLevel = wdOutlineLevelBodyText
                                        .CharacterUnitLeftIndent = 0
                                        .CharacterUnitRightIndent = 0
                                        
                                        .LineUnitBefore = 0
                                        .LineUnitAfter = 0
                                        .MirrorIndents = False
                                        .TextboxTightWrap = wdTightNone
                                        End With
                                        
                                        
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test01()
Call attach_word_file
Call attach_excel_file
Call attach_ppt_file
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_word_file()
fname = "H:\XZXZXZD_ReOrg\Updates\XZXZXZD_ReDesign_Update No001.docx"
xlabel = "XZXZXZD_ReDesign_Update No001.docx"
Selection.InlineShapes.AddOLEObject ClassType:="Word.Document.12", _
FileName:=fname, _
LinkToFile:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\PROGRA~1\MICROS~2\Office12\Moc.exe", IconIndex:=7, IconLabel:= _
xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_excel_file()
fname = "H:\XZXZXZD_ReOrg\Initiation\XZXZXZD Governance Stakeholder Map v1.xlsm"
xlabel = "XZXZXZD Governance Stakeholder Map v1.xlsm"
Selection.InlineShapes.AddOLEObject ClassType:= _
"Excel.SheetMacroEnabled.12", FileName:= _
fname, _
LinkToFile:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\PROGRA~1\MICROS~2\Office12\Moc.exe", IconIndex:=10, IconLabel:= _
xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_ppt_file()
fname = "H:\XZXZXZD_ReOrg\Initiation\XZXZXZD_Initiation_Presentation.pptm"
xlabel = "XZXZXZD_Initiation_Presentation.pptm"
Selection.InlineShapes.AddOLEObject ClassType:= _
"PowerPoint.ShowMacroEnabled.12", FileName:= _
fname, LinkToFile _
:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\WINDOWS\Installer\{90120000-0011-0000-0000-0000000FF1CE}\pptico.exe", _
IconIndex:=19, IconLabel:=xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF2PRINT()
ppath = "z:\print" & "\" & ActiveDocument.Name
ppath = Replace(ppath, ".docx", ".pdf")
ppath = Replace(ppath, ".doc", ".pdf")
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
Call DeleteFile(FName)
ActiveDocument.ExportAsFixedFormat OutputFileName:= _
fname _
, ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
wdExportOptimizeForOnScreen, Range:=wdExportAllDocument, From:=1, To:=1, _
Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
BitmapMissingFonts:=True, UseISO19005_1:=False
 ChangeFileOpenDirectory "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\"
 MsgBox "DONE"
x = fname
FileCopy fname, ppath
x = InputBox(x, x, x)
x = InputBox(ppath, ppath, ppath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF2parent_dir()
newpath = getParentFolder2(ActiveDocument.Path & "\") & "\"
oldpath = ActiveDocument.Path & "\"
Call PDF
fname = ActiveDocument.Name
fname = Replace(fname, ".docm", ".pdf")
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
FileCopy oldpath & fname, newpath & fname
ReturnValue = Shell("explorer.EXE " & newpath, 1)  ' Run Calculator.
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function getParentFolder2(ByVal strFolder0)
Dim strFolder
strFolder = Left(strFolder0, InStrRev(strFolder0, "\") - 1)
getParentFolder2 = Left(strFolder, InStrRev(strFolder, "\") - 1)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF()
fname = "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\Contract Committment Trail (KPMG).pdf"
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
fname = Replace(fname, ".docm", ".pdf")
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
Call DeleteFile(FName)
ActiveDocument.ExportAsFixedFormat OutputFileName:= _
fname _
, ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
wdExportOptimizeForOnScreen, Range:=wdExportAllDocument, From:=1, To:=1, _
Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
BitmapMissingFonts:=True, UseISO19005_1:=False
 ChangeFileOpenDirectory "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\"
 MsgBox "DONE"
x = fname
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function FileExists(ByVal FileToTest As String) As Boolean
FileExists = (Dir(FileToTest) <> "")
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub DeleteFile(ByVal FileToDelete As String)
If FileExists(FileToDelete) Then 'See above
        SetAttr FileToDelete, vbNormal
        Kill FileToDelete
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp()
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
Debug.Print fname
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub zzdir_html()
Dim MyFile As String
Dim Counter As Long
xpath = ActiveDocument.Path & "\"
xpath = InputBox(xpath, xpath, xpath)
Dim DirectoryListArray() As String
ReDim DirectoryListArray(1000)
website = "http://www.XZXZXZXZXZXZcompany.com/JIBS/"
website = InputBox(website, website, website)
website = ""
Counter = 1
MyFile = Dir$("c:\temp\*.*")
MyFile = Dir$(xpath & "*.*")
MyFile = Dir$(xpath & "app*.*")
Do While MyFile <> ""
        DirectoryListArray(Counter) = MyFile
        
        
        
        xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
        'xtext2 = xtext2 & xpath & MyFile & vbCrLf
        Debug.Print MyFile
        MyFile = Dir$
        Counter = Counter + 1
        Loop
        xtext3 = xtext1 & vbCrLf & xtext2
        fname = xpath & "display.html"
        Call PRINT_INFO(xtext3, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub zzdir_pdf()
Dim MyFile As String
Dim Counter As Long
xpath = ActiveDocument.Path & "\"
xpath = InputBox(xpath, xpath, xpath)
Dim DirectoryListArray() As String
ReDim DirectoryListArray(10000)
website = "http://www.XZXZXZXZXZXZcompany.com/JIBS/"
website = InputBox(website, website, website)
website = ""
Counter = 1
MyFile = Dir$("c:\temp\*.*")
MyFile = Dir$(xpath & "*.*")
MyFile = Dir$(xpath & "app*.*")
Do While MyFile <> ""
        DirectoryListArray(Counter) = MyFile
        
        If InStr(1, UCase(MyFile), UCase("PDF")) Then
                'xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
                'xtext2 = xtext2 & xpath & MyFile & vbCrLf
                xtext2 = xtext2 & MyFile & vbCrLf
        End If
        
        If InStr(1, UCase(MyFile), UCase("DOC")) Then
                'xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
                'xtext2 = xtext2 & xpath & MyFile & vbCrLf
                xtext3 = xtext3 & MyFile & vbCrLf
        End If
        
        Debug.Print MyFile
        MyFile = Dir$
        Counter = Counter + 1
        Loop
        xtext3 = xtext1 & vbCrLf & xtext2 & vbCrLf & xtext3
        fname = xpath & "zzdir.txt"
        Call PRINT_INFO(xtext3, fname)
End Sub
Attribute VB_Name = "XZXZXZ_word_normal"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub A2_FORM1()
zzbuttons_highlands.Show
buttons.Show
ListCommentsFrm.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PrintScreen()
WordBasic.SendKeys "{prtsc}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub f3()
SendKeys "{f3}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub f9()
SendKeys "{f9}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub af8()
SendKeys "%{f8}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_infuse_font()
Selection.Font.Color = RGB(73, 23, 109)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_infuse_back()
Selection.Interior.Color = RGB(73, 23, 109)
Selection.Font.Color = RGB(0, 0, 0)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_list()
For c = 1 To ActiveDocument.Comments.Count
        Z = Z & vbCrLf & c & " " & ActiveDocument.Comments(c).Scope
        https://social.msdn.microsoft.com/Forums/en-US/9a109c23-e29d-49a2-a563-a4d4ea50659e/vba-word-get-line-number-of-comment-object?forum=isvvba
        
        p = "Page" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdActiveEndPageNumber)
        l = "Line" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdFirstCharacterLineNumber)
        
        x = x & vbCrLf & c & " " & ActiveDocument.Comments(c).Range.Text
        q = q & vbCrLf & vbCrLf & "Your text: '..." & ActiveDocument.Comments(c).Scope & "...' [" & p & l & "] Feedback: " & ActiveDocument.Comments(c).Range.Text
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_zap()
For c = ActiveDocument.Comments.Count To 1 Step -1
        ActiveDocument.Comments(c).Delete
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_quote()
For c = 1 To ActiveDocument.Comments.Count
        Z = Z & vbCrLf & c & " " & ActiveDocument.Comments(c).Scope
        https://social.msdn.microsoft.com/Forums/en-US/9a109c23-e29d-49a2-a563-a4d4ea50659e/vba-word-get-line-number-of-comment-object?forum=isvvba
        
        p = "Page" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdActiveEndPageNumber)
        l = "Line" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdFirstCharacterLineNumber)
        
        x = x & vbCrLf & c & " " & ActiveDocument.Comments(c).Range.Text
        q = q & vbCrLf & vbCrLf & "Your text: '..." & ActiveDocument.Comments(c).Scope & "...' [" & p & l & "] Feedback: " & ActiveDocument.Comments(c).Range.Text
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RemoveAllComments()
Dim n As Long
Dim oComments As Comments
Set oComments = ActiveDocument.Comments
For n = oComments.Count To 1 Step -1
        oComments(n).Delete
Next 'n
Set oComments = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Commentslist()
Dim n As Long
Dim oComments As Comments
Set oComments = ActiveDocument.Comments
For n = oComments.Count To 1 Step -1
        If oComments(n).Date > #2/29/2016# Then
                xc = xc + 1
                Debug.Print xc & " " & oComments(n).Range.Text & " (" & oComments(n).Author & " " & oComments(n).Date & ")"
                
        End If
        
Next 'n
Set oComments = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1()
x = "1=UserFormOutlookXZXZXZ, 2=UserFormInputOutput"
x = InputBox(x, x, x)
If x = 1 Then UserFormOutlookXZXZXZ.Show
        If x = 2 Then UserFormInputOutput.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub CreateAppt()
Dim myItem As Object
Dim myRequiredAttendee, myOptionalAttendee, myResourceAttendee As Outlook.Recipient
xtext1 = "DIARY: Meeting at location at time with person re subject"
xtext2 = "Regards, XZXZXZ0XZXZXZXZXZXZ051 Email XZXZXZ@XZXZXZXZXZXZXZXZXZ.com"
xtext3 = "(Copied to my other diaries)"
xtext4 = "T.XZXZXZ@HEALTH.GOV.JE; t.XZXZXZ@gov.je; XZXZXZ@XZXZXZXZXZXZXZXZXZ.com; tim.XZXZXZ@XZXZXZi.co; XZXZXZ@XZXZXZ.com"
Dim appOL As Object
Dim objReminder As Object
Set appOL = GetObject(, "Outlook.application")
Set myItem = appOL.CreateItem(olAppointmentItem)
myItem.MeetingStatus = olMeeting
myItem.Subject = xtext1
myItem.Body = xtext1 & vbCrLf & xtext2 & vbCrLf & xtext3
myItem.Location = ""
myItem.Start = #9/24/2009 1:30:00 PM#
myItem.Start = Now()
myItem.Duration = 90
Set myRequiredAttendee = myItem.Recipients.Add("Nate Sun")
Set myRequiredAttendee = myItem.Recipients.Add(xtext4)
myRequiredAttendee.Type = olRequired
Set myOptionalAttendee = myItem.Recipients.Add("Kevin Kennedy")
Set myOptionalAttendee = myItem.Recipients.Add(xtext3)
myOptionalAttendee.Type = olOptional
Set myResourceAttendee = myItem.Recipients.Add(xtext3)
myResourceAttendee.Type = olResource
myItem.Display
myItem.Send
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xsaveas()
fname1 = ActiveDocument.Path & "\" & ActiveDocument.Name
xdate = Format(Now, "yymmdd")
fname2 = Replace(fname1, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=fname2, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
ActiveDocument.SaveAs FileName:=fname1, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST()
Debug.Print ActiveDocument.Path & "\" & ActiveDocument.Name
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub saveas_float()
xpath = ActiveDocument.Path & "\"
xdate = Format(Now, "yyyymmdd")
xname = xpath & ActiveDocument.Name
xname2 = Replace(xname, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=xname2
ActiveDocument.SaveAs FileName:=xname
x = xpath
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub saveas_timed()
xpath = ActiveDocument.Path & "\"
xdate = Format(Now, "yyyymmdd HHMM")
xname = xpath & ActiveDocument.Name
xname2 = Replace(xname, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=xname2
ActiveDocument.SaveAs FileName:=xname
x = xpath
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_resize()
Dim i As Long
With ActiveDocument
For i = 1 To .InlineShapes.Count
        With .InlineShapes(i)
        .ScaleHeight = 50
        .ScaleWidth = 50
        End With
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ScalePictures40()
Dim i As Long
With ActiveDocument
For i = 1 To .InlineShapes.Count
        With .InlineShapes(i)
        .ScaleHeight = 40
        .ScaleWidth = 40
        End With
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AA_addautotext()
http://msdn.microsoft.com/en-us/library/office/ff195437.aspx
NormalTemplate.AutoTextEntries("#test1").Value = "The Johnson Company"
Dim XAUTOTEXT_HANDLE As String
Dim p As Integer
XAUTOTEXT_HANDLE = "#zz" 'Left(Trim(Selection.Range), 4)
p = InStr(1, Selection.Range, ".")
XAUTOTEXT_HANDLE = Left(Trim(Selection.Range), p)
MsgBox XAUTOTEXT_HANDLE
NormalTemplate.AutoTextEntries.Add Name:=XAUTOTEXT_HANDLE, Range:=Selection.Range
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub vba_export_modules_V()
#http://www.cpearson.com/Excel/VBE.aspx
 reference to extensibility library
xprefix = "V:\Data2017\VBA\VBAWord\vba_"
Dim objMyProj As VBProject
Dim objVBComp As VBComponent
Set objMyProj = Application.VBE.ActiveVBProject
For Each objVBComp In objMyProj.VBComponents
        If objVBComp.Type = vbext_ct_StdModule Then
                
                
                'xprefix = "V:\Data2016\VBA\VBAWord\word_"
                objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".bas"
                objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
                'xprefix = "V:\Data2016\VBA\VBAWord\word_"
                objVBComp.Export xprefix & objVBComp.Name & ".bas"
                objVBComp.Export xprefix & objVBComp.Name & ".txt"
                
                Debug.Print xprefix
                
        End If
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ListAutoText()
Dim oAutoText   As Word.AutoTextEntry
With Application
 \\ Turn screenupdating off
.ScreenUpdating = False
 \\ Add new document
.Documents.Add
 \\ Loop through all Autotext entries in Normal.dot
For Each oAutoText In NormalTemplate.AutoTextEntries
        ' \\ Work with selection
        With .Selection
        ' \\ Make all Autotext names Bold
        .Font.Bold = True
        .TypeText Text:=oAutoText.Name
        .TypeParagraph ' \\ Insert Para
        
        ' \\ Turn of Bold for the Autotext entries
        .Font.Bold = False
        ' \\ Insert entry
        oAutoText.Insert Where:=.Range, RichText:=True
        
        ' \\ Insert two paragraphs
        .TypeParagraph
        .TypeText Text:="==============================================="
        .TypeParagraph
        End With
        Next
        
        ' \\ Turn screenupdating back on
        .ScreenUpdating = True
        End With
        xdate = Format(Now, "yyyymmdd")
        fname = "V:\Data2017\VBA\VBAWord\word_autotext_backup" & xdate & ".docx"
        ActiveDocument.SaveAs FileName:=fname
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function halfdays(x)
halfdays = Int(x)
If x > Int(x) + 0.49 Then halfdays = Int(x) + 0.5
        
End Function
Call ports2013_headings_multi_function("Normal", "Calibri", 11, "", wdBlue)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub bold_2hyphen()
Dim oPara As Paragraph
Dim xpos As Integer
For Each oPara In ActiveDocument.Paragraphs
For Each oPara In Selection.Paragraphs
        Debug.Print oPara.Range.Text
        '      If oPara.Range.Words(2).Characters(1) = ":" Then
        oPara.Range.Words(1).Font.Bold = True
        xpos = InStr(1, oPara.Range.Text, "-")
        For c = 1 To xpos
                oPara.Range.Characters(c).Font.Bold = True
        Next c
        '     End If
Next oPara
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub bold_firstword()
Dim oPara As Paragraph
For Each oPara In ActiveDocument.Paragraphs
For Each oPara In Selection.Paragraphs
        
        '      If oPara.Range.Words(2).Characters(1) = ":" Then
        oPara.Range.Words(1).Font.Bold = True
        oPara.Range.Characters(2).Font.Bold = False
        '     End If
Next oPara
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_XZXZXZd()
xfont = "Arial"
XSIZE = 10
fnormal = 11
Call set2016_headings("Heading 1", xfont, 14, "bold", wdBlack)
Call set2016_headings("Heading 2", xfont, 12, "bold", wdBlue)
Call set2016_headings("Heading 3", xfont, 12, "", wdBlack)
Call set2016_headings("Heading 4", xfont, fnormal, "", wdBlack)
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_XZXZXZ()
xfont = "Calibri"
XSIZE = 11
fnormal = 11
Call set2016_headings("Heading 1", xfont, 16, "bold", wdTeal)
Call set2016_headings("Heading 2", xfont, 13, "bold", wdTeal)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_jcsl()
xfont = "Century Gothic"
XSIZE = 10
fnormal = 10
Call set2016_headings("Heading 1", xfont, 14, "bold", wdTeal)
Call set2016_headings("Heading 2", xfont, 13, "bold", wdTeal)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_XZXZXZ()
xfont = "Calibri"
XSIZE = 11
fnormal = 11
xcolor = RGB(214, 0, 147)
XCOLOR = RGB(214, 0, 1)
Call set2016_headings("Heading 1", xfont, 14, "bold", xcolor)
Call set2016_headings("Heading 2", xfont, 12, "bold", xcolor)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_tbs()
xfont = "Calibri"
XSIZE = 11
fnormal = 11
Call set2016_headings("Heading 1", xfont, 14, "bold", wdViolet)
Call set2016_headings("Heading 2", xfont, 12, "bold", wdViolet)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD()
For p = 1 To ActiveDocument.Paragraphs.Count
        
        If ActiveDocument.Paragraphs(p).Range.Information(wdWithInTable) Then
                'What ever you'd like to do
                'skip
                Else
                
                
                If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                        xtext = ActiveDocument.Paragraphs(p).Range.Text
                        If UCase(xtext) = xtext Then
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 128, 128)
                                
                                If InStr(1, UCase(xtext), UCase("Appendix")) Then
                                        ActiveDocument.Paragraphs(p).Range.Font.Size = 14
                                End If
                                
                                
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                End If
                
        End If
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub upper_banner()
For p = 1 To ActiveDocument.Paragraphs.Count
        If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                        If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 80, 80) ' RGB(255, 0, 0)
                                ' Selection.Shading.ForegroundPatternColor = wdColorAutomatic
                                ActiveDocument.Paragraphs(p).Range.Shading.BackgroundPatternColor = -671023258 '-671023207
                                
                                
                                Else
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                End If
        End If
        
        
Next p
 Selection.Shading.Texture = wdTextureNone
 Selection.Shading.ForegroundPatternColor = wdColorAutomatic
 Selection.Shading.BackgroundPatternColor = -671023207
 Selection.Shading.Texture = wdTextureNone
 Selection.Shading.ForegroundPatternColor = wdColorAutomatic
 Selection.Shading.BackgroundPatternColor = -671023258
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD_red()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range.Text
        If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                        
                        
                        If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
                                Else
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 80, 80)
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                        
                        If InStr(1, UCase(xtext), UCase("APPENDIX")) Then ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                        End If
                End If
                
                
        Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD_infuse()
infuse = RGB(73, 23, 109)
For p = 1 To ActiveDocument.Paragraphs.Count
        
        
        If ActiveDocument.Paragraphs(p).Range.Information(wdWithInTable) Then
                'What ever you'd like to do
                'skip
                Else
                xtext = ActiveDocument.Paragraphs(p).Range.Text
                If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                        If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                                
                                
                                If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                        ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                        ActiveDocument.Paragraphs(p).Range.Font.Color = infuse
                                        ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                                        
                                        Else
                                        ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                        ActiveDocument.Paragraphs(p).Range.Font.Color = infuse
                                        Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                                End If
                                
                                If InStr(1, UCase(xtext), UCase("APPENDIX")) Then ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                                End If
                        End If
                        
                End If
        Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_format_text()
text_to_find = "1234567890"
For p = 1 To ActiveDocument.Paragraphs.Count
        found_text = Left(ActiveDocument.Paragraphs(p).Range.Text, 1)
        If InStr(1, text_to_find, found_text) Then
                
                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
                ActiveDocument.Paragraphs(p).Range.Font.Size = 16
                
        End If
        
        
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_legal_para()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range.Text
        
        For q = 1 To 9
                If Left(xtext, 1) = CStr(q) Then
                        ActiveDocument.Paragraphs(p).Range.Text = "~" & ActiveDocument.Paragraphs(p).Range.Text
                End If
        Next q
        x = 0
        looktext = Left(Trim(xtext), 6)
        x = count_find(looktext, ".")
        
        If x = 2 Then
                ActiveDocument.Paragraphs(p).Range.Text = "~" & vbTab & ActiveDocument.Paragraphs(p).Range.Text
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 200, 0)
                Debug.Print looktext, x, ActiveDocument.Paragraphs(p).Range.Text
        End If
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function count_find(xtext, thingtofind)
Dim xc As Integer
xc = 0
For c = 1 To Len(xtext)
        If Mid(xtext, c, 1) = thingtofind Then xc = xc + 1
        Next c
        count_find = xc
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_extract_text()
text_to_find = "Appendix"
For p = 1 To ActiveDocument.Paragraphs.Count
        If InStr(1, ActiveDocument.Paragraphs(p).Range.Text, text_to_find) Then
                xc = xc + 1
                x = x & " " & xc & ". " & ActiveDocument.Paragraphs(p).Range.Text & vbCrLf
                '' ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
        End If
        
        
        
Next p
Z = Replace(x, Chr(13), "")
Z = Replace(Z, text_to_find, ",  ")
Debug.Print x
Debug.Print LCase(Z)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_JRC()
xfont = "Calibri"
fnormal = 11
Call set2016_headings("Heading 1", xfont, 14, "bold", wdRed)
Call set2016_headings("Heading 2", xfont, 12, "bold", "")
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function set2016_headings(xstyle, xfont, XSIZE, xbold, xcolor)
With ActiveDocument.Styles(xstyle).Font
.Name = xfont
.Size = XSIZE
.Bold = False
.Italic = False
If Len(xbold) > 1 Then .Bold = True
        
        'http://dmcritchie.mvps.org/excel/colors.htm
        .ColorIndex = wdBlack
        .ColorIndex = wdBlack
        
        
        If Len(xcolor) > 0 Then
                If xcolor > 10 Then
                        .Color = xcolor
                        Else
                        .ColorIndex = xcolor
                End If
        End If
        
        
        End With
        xindent = 0
        If xstyle = "Heading 1" Then xindent = 0
                If xstyle = "Heading 2" Then xindent = 0
                        If xstyle = "Heading 3" Then xindent = 2
                                If xstyle = "Heading 4" Then xindent = 3
                                        
                                        With ActiveDocument.Styles(xstyle).ParagraphFormat
                                        .LeftIndent = CentimetersToPoints(xindent)
                                        .RightIndent = CentimetersToPoints(0)
                                        .FirstLineIndent = CentimetersToPoints(1.5)
                                        
                                        .TabStops.ClearAll
                                        
                                        .SpaceBefore = 0
                                        .SpaceBeforeAuto = False
                                        .SpaceAfter = 0
                                        .SpaceAfterAuto = False
                                        .LineSpacingRule = wdLineSpace0pt0
                                        .Alignment = wdAlignParagraphLeft
                                        .WidowControl = True
                                        .KeepWithNext = False
                                        .KeepTogether = False
                                        .PageBreakBefore = False
                                        .NoLineNumber = False
                                        .Hyphenation = True
                                        .FirstLineIndent = CentimetersToPoints(0)
                                        .OutlineLevel = wdOutlineLevelBodyText
                                        .CharacterUnitLeftIndent = 0
                                        .CharacterUnitRightIndent = 0
                                        
                                        .LineUnitBefore = 0
                                        .LineUnitAfter = 0
                                        .MirrorIndents = False
                                        .TextboxTightWrap = wdTightNone
                                        End With
                                        
                                        
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test01()
Call attach_word_file
Call attach_excel_file
Call attach_ppt_file
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_word_file()
fname = "H:\XZXZXZD_ReOrg\Updates\XZXZXZD_ReDesign_Update No001.docx"
xlabel = "XZXZXZD_ReDesign_Update No001.docx"
Selection.InlineShapes.AddOLEObject ClassType:="Word.Document.12", _
FileName:=fname, _
LinkToFile:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\PROGRA~1\MICROS~2\Office12\Moc.exe", IconIndex:=7, IconLabel:= _
xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_excel_file()
fname = "H:\XZXZXZD_ReOrg\Initiation\XZXZXZD Governance Stakeholder Map v1.xlsm"
xlabel = "XZXZXZD Governance Stakeholder Map v1.xlsm"
Selection.InlineShapes.AddOLEObject ClassType:= _
"Excel.SheetMacroEnabled.12", FileName:= _
fname, _
LinkToFile:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\PROGRA~1\MICROS~2\Office12\Moc.exe", IconIndex:=10, IconLabel:= _
xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_ppt_file()
fname = "H:\XZXZXZD_ReOrg\Initiation\XZXZXZD_Initiation_Presentation.pptm"
xlabel = "XZXZXZD_Initiation_Presentation.pptm"
Selection.InlineShapes.AddOLEObject ClassType:= _
"PowerPoint.ShowMacroEnabled.12", FileName:= _
fname, LinkToFile _
:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\WINDOWS\Installer\{90120000-0011-0000-0000-0000000FF1CE}\pptico.exe", _
IconIndex:=19, IconLabel:=xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF2PRINT()
ppath = "z:\print" & "\" & ActiveDocument.Name
ppath = Replace(ppath, ".docx", ".pdf")
ppath = Replace(ppath, ".doc", ".pdf")
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
Call DeleteFile(FName)
ActiveDocument.ExportAsFixedFormat OutputFileName:= _
fname _
, ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
wdExportOptimizeForOnScreen, Range:=wdExportAllDocument, From:=1, To:=1, _
Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
BitmapMissingFonts:=True, UseISO19005_1:=False
 ChangeFileOpenDirectory "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\"
 MsgBox "DONE"
x = fname
FileCopy fname, ppath
x = InputBox(x, x, x)
x = InputBox(ppath, ppath, ppath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF2parent_dir()
newpath = getParentFolder2(ActiveDocument.Path & "\") & "\"
oldpath = ActiveDocument.Path & "\"
Call PDF
fname = ActiveDocument.Name
fname = Replace(fname, ".docm", ".pdf")
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
FileCopy oldpath & fname, newpath & fname
ReturnValue = Shell("explorer.EXE " & newpath, 1)  ' Run Calculator.
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function getParentFolder2(ByVal strFolder0)
Dim strFolder
strFolder = Left(strFolder0, InStrRev(strFolder0, "\") - 1)
getParentFolder2 = Left(strFolder, InStrRev(strFolder, "\") - 1)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF()
fname = "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\Contract Committment Trail (KPMG).pdf"
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
fname = Replace(fname, ".docm", ".pdf")
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
Call DeleteFile(FName)
ActiveDocument.ExportAsFixedFormat OutputFileName:= _
fname _
, ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
wdExportOptimizeForOnScreen, Range:=wdExportAllDocument, From:=1, To:=1, _
Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
BitmapMissingFonts:=True, UseISO19005_1:=False
 ChangeFileOpenDirectory "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\"
 MsgBox "DONE"
x = fname
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function FileExists(ByVal FileToTest As String) As Boolean
FileExists = (Dir(FileToTest) <> "")
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub DeleteFile(ByVal FileToDelete As String)
If FileExists(FileToDelete) Then 'See above
        SetAttr FileToDelete, vbNormal
        Kill FileToDelete
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp()
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
Debug.Print fname
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub zzdir_html()
Dim MyFile As String
Dim Counter As Long
xpath = ActiveDocument.Path & "\"
xpath = InputBox(xpath, xpath, xpath)
Dim DirectoryListArray() As String
ReDim DirectoryListArray(1000)
website = "http://www.XZXZXZXZXZXZcompany.com/JIBS/"
website = InputBox(website, website, website)
website = ""
Counter = 1
MyFile = Dir$("c:\temp\*.*")
MyFile = Dir$(xpath & "*.*")
MyFile = Dir$(xpath & "app*.*")
Do While MyFile <> ""
        DirectoryListArray(Counter) = MyFile
        
        
        
        xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
        'xtext2 = xtext2 & xpath & MyFile & vbCrLf
        Debug.Print MyFile
        MyFile = Dir$
        Counter = Counter + 1
        Loop
        xtext3 = xtext1 & vbCrLf & xtext2
        fname = xpath & "display.html"
        Call PRINT_INFO(xtext3, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub zzdir_pdf()
Dim MyFile As String
Dim Counter As Long
xpath = ActiveDocument.Path & "\"
xpath = InputBox(xpath, xpath, xpath)
Dim DirectoryListArray() As String
ReDim DirectoryListArray(10000)
website = "http://www.XZXZXZXZXZXZcompany.com/JIBS/"
website = InputBox(website, website, website)
website = ""
Counter = 1
MyFile = Dir$("c:\temp\*.*")
MyFile = Dir$(xpath & "*.*")
MyFile = Dir$(xpath & "app*.*")
Do While MyFile <> ""
        DirectoryListArray(Counter) = MyFile
        
        If InStr(1, UCase(MyFile), UCase("PDF")) Then
                'xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
                'xtext2 = xtext2 & xpath & MyFile & vbCrLf
                xtext2 = xtext2 & MyFile & vbCrLf
        End If
        
        If InStr(1, UCase(MyFile), UCase("DOC")) Then
                'xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
                'xtext2 = xtext2 & xpath & MyFile & vbCrLf
                xtext3 = xtext3 & MyFile & vbCrLf
        End If
        
        Debug.Print MyFile
        MyFile = Dir$
        Counter = Counter + 1
        Loop
        xtext3 = xtext1 & vbCrLf & xtext2 & vbCrLf & xtext3
        fname = xpath & "zzdir.txt"
        Call PRINT_INFO(xtext3, fname)
End Sub
Attribute VB_Name = "WORD2BLOG"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub WORD2BLOG()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range
        
        xtext = TRFMT(xtext)
        
        x = x & vbCrLf & "<BR/>" & xtext
        
        Next
        xtext = Replace(ActiveDocument.Name, ".docx", "")
        
        fname = ActiveDocument.Path & "\zz_wrd2html_" & xtext & ".HTML"
        Call PRINT_html(x, fname)
        fname = InputBox(fname, fname, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub WORD2HTML()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range
        
        xtext = TRFMT(xtext)
        
        x = x & vbCrLf & "" & xtext
        Next
        xtext = Replace(ActiveDocument.Name, ".docx", "")
        
        fname = ActiveDocument.Path & "\zz_wrd2html_" & xtext & ".txt"
        Call PRINT_INFO(x, fname)
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function TRFMT(x)
xx = ""
x = tr_regex(x)
x = Replace(x, Chr(13), xx)
x = Replace(x, Chr(10), xx)
x = Replace(x, Chr(12), xx)
x = Replace(x, Chr(11), xx)
X = Replace(X, Chr(13), "!13!")
X = Replace(X, Chr(10), "!10!")
X = Replace(X, Chr(12), "!12!")
X = Replace(X, Chr(11), "!11!")
If InStr(1, UCase(Trim(x)), UCase("http")) Then
        X = "<a href=" & X & ">" & Trim(X) & "</a>" '/// using regex instead
End If
If x = UCase(x) Then
        If Len(x) > 2 Then
                x = "<b>" & Trim(x) & "</b>"
        End If
End If
TRFMT = Trim(x)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_html(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_html(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_html(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("explorer.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub tr_regex_URLtest()
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex_url(x)
Debug.Print y
Debug.Print "======================================"
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex_email(x)
Debug.Print y
Debug.Print "======================================"
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex(x)
Debug.Print y
Debug.Print "======================================"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex(xinput_string)
x = xinput_string
x = tr_regex_url(x)
x = tr_regex_email(x)
tr_regex = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex_url(xinput_string)
Dim reg
Dim rng As Range, i As Long, j As Long
Dim mtch, mt, tmpStr As String
Set reg = CreateObject("vbscript.regexp")
With reg
.IgnoreCase = True
.MultiLine = False
http://regexlib.com/Search.aspx?k=url&AspxAutoDetectCookieSupport=1
.Pattern = "(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?"
 .Pattern = "[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}"
.Global = True
End With
Set mtch = reg.Execute(xinput_string)
xoutput_string = xinput_string
For Each mt In mtch ' what you want to change
        now change the output string by find and replace stuff for each match of what you want to change
        xoutput_string = Replace(xoutput_string, mt, "<a href=" & mt & ">" & mt & "</a>" & vbCrLf)
Next mt
tr_regex_url = xoutput_string
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex_email(xinput_string)
Dim reg
Dim rng As Range, i As Long, j As Long
Dim mtch, mt, tmpStr As String
Set reg = CreateObject("vbscript.regexp")
With reg
.IgnoreCase = True
.MultiLine = False
http://regexlib.com/Search.aspx?k=url&AspxAutoDetectCookieSupport=1
.Pattern = "(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?"
.Pattern = "[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}"
.Global = True
End With
Set mtch = reg.Execute(xinput_string)
xoutput_string = xinput_string
For Each mt In mtch ' what you want to change
        now change the output string by find and replace stuff for each match of what you want to change
        xoutput_string = Replace(xoutput_string, mt, "<a href=mailto:" & mt & ">" & mt & "</a>" & vbCrLf)
Next mt
tr_regex_email = xoutput_string
End Function
Attribute VB_Name = "WORD2BLOG"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_old()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = xtext & ActiveDocument.Paragraphs(p).Range.Text & vbCrLf
Next p
fname = ActiveDocument.Path & "\temptext.txt"
Call PRINT_INFO(xtext, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_Blog_Word_Linked()
x = "[B]logger or [W]ordpress or [L]linked_in"
x = InputBox(x, x, x)
x = LCase(x)
xnewline = vbCrLf ' for blogger
If x = "w" Then xnewline = Chr(10) ' for wordpress
        If x = "b" Then xnewline = vbCrLf & "<br/>" ' for blogger
                If x = "l" Then xnewline = "" ' for linkedin
                        
                        For p = 1 To ActiveDocument.Paragraphs.Count
                                line2add = ActiveDocument.Paragraphs(p).Range.ListStyle
                                
                                line2add = ActiveDocument.Paragraphs(p).Range.ListFormat.ListString
                                line2add = line2add & ActiveDocument.Paragraphs(p).Range.Text
                                
                                If ActiveDocument.Paragraphs(p).Range.Font.Italic = True Then
                                        If (x = "b" And Len(line2add) > 2) Then line2add = "<i>" & line2add & "</i>"
                                        End If
                                        
                                        If line2add = UCase(line2add) Then
                                                If (x = "b" And Len(line2add) > 2) Then line2add = "<b>" & line2add & "</b>"
                                                End If
                                                
                                                xtext = xtext & line2add & xnewline
                                        Next p
                                        
                                        
                                        If x = "l" Then
                                                xtext = Replace(xtext, Chr(10), vbCrLf)
                                                xtext = Replace(xtext, Chr(12), vbCrLf)
                                                xtext = Replace(xtext, Chr(13), vbCrLf)
                                                xtext = Replace(xtext, vbCrLf & vbCrLf, vbCrLf)
                                        End If
                                        fname = ActiveDocument.Path & "\temptext.txt"
                                        Call PRINT_INFO(xtext, fname)
                                        FileCopy fname, Replace(fname, ".txt", ".html")
                                        Debug.Print ActiveDocument.Path
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_html_XZXZXZwebpage()
b1 = "<b style='color: #008080;'>"
b2 = "</b>"
h11 = "<h1 style='color: #008080;'>"
h12 = "</h1>"
For p = 1 To ActiveDocument.Paragraphs.Count
        XLINE = ActiveDocument.Paragraphs(p).Range.Text
        XLINE = Trim(XLINE)
        XLINE = Replace(XLINE, Chr(13), "")
        
        If p = 1 Then xtext = xtext & h11 & XLINE & h12 & vbCrLf
                
                
                If UCase(XLINE) = XLINE And Len(XLINE) > 3 Then
                        xtext = xtext & b1 & XLINE & b2 & vbCrLf
                        ElseIf InStr(1, XLINE, "Case Study") Then
                        xtext = xtext & h11 & XLINE & h12 & vbCrLf
                        Else
                        xtext = xtext & XLINE & "<BR>" & vbCrLf
                End If
                
                
                
                
                
        Next p
        fname = ActiveDocument.Path & "\temptext.txt"
        Call PRINT_INFO(xtext, fname)
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_html()
b1 = "<b style='color: red;'>"
b2 = "</b>"
h11 = "<h1 style='color: red;'>"
h12 = "</h1>"
For p = 1 To ActiveDocument.Paragraphs.Count
        XLINE = ActiveDocument.Paragraphs(p).Range.Text
        XLINE = Trim(XLINE)
        XLINE = Replace(XLINE, Chr(13), "")
        
        If p = 1 Then xtext = xtext & h11 & XLINE & h12 & vbCrLf
                
                If UCase(XLINE) = XLINE And Len(XLINE) > 3 Then
                        xtext = xtext & b1 & XLINE & b2 & vbCrLf
                        Else
                        xtext = xtext & XLINE & "<BR>" & vbCrLf
                End If
                
                
                
                
                
        Next p
        fname = ActiveDocument.Path & "\temptext.txt"
        Call PRINT_INFO(xtext, fname)
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function TRFMT(x)
xx = ""
x = tr_regex(x)
x = Replace(x, Chr(13), xx)
x = Replace(x, Chr(10), xx)
x = Replace(x, Chr(12), xx)
x = Replace(x, Chr(11), xx)
X = Replace(X, Chr(13), "!13!")
X = Replace(X, Chr(10), "!10!")
X = Replace(X, Chr(12), "!12!")
X = Replace(X, Chr(11), "!11!")
If InStr(1, UCase(Trim(x)), UCase("http")) Then
        X = "<a href=" & X & ">" & Trim(X) & "</a>" '/// using regex instead
End If
If x = UCase(x) Then
        If Len(x) > 2 Then
                x = "<b>" & Trim(x) & "</b>"
        End If
End If
TRFMT = Trim(x)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_html(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_html(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_html(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("explorer.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub tr_regex_URLtest()
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex_url(x)
Debug.Print y
Debug.Print "======================================"
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex_email(x)
Debug.Print y
Debug.Print "======================================"
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex(x)
Debug.Print y
Debug.Print "======================================"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex(xinput_string)
x = xinput_string
x = tr_regex_url(x)
x = tr_regex_email(x)
tr_regex = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex_url(xinput_string)
Dim reg
Dim rng As Range, i As Long, j As Long
Dim mtch, mt, tmpStr As String
Set reg = CreateObject("vbscript.regexp")
With reg
.IgnoreCase = True
.MultiLine = False
http://regexlib.com/Search.aspx?k=url&AspxAutoDetectCookieSupport=1
.Pattern = "(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?"
 .Pattern = "[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}"
.Global = True
End With
Set mtch = reg.Execute(xinput_string)
xoutput_string = xinput_string
For Each mt In mtch ' what you want to change
        now change the output string by find and replace stuff for each match of what you want to change
        xoutput_string = Replace(xoutput_string, mt, "<a href=" & mt & ">" & mt & "</a>" & vbCrLf)
Next mt
tr_regex_url = xoutput_string
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex_email(xinput_string)
Dim reg
Dim rng As Range, i As Long, j As Long
Dim mtch, mt, tmpStr As String
Set reg = CreateObject("vbscript.regexp")
With reg
.IgnoreCase = True
.MultiLine = False
http://regexlib.com/Search.aspx?k=url&AspxAutoDetectCookieSupport=1
.Pattern = "(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?"
.Pattern = "[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}"
.Global = True
End With
Set mtch = reg.Execute(xinput_string)
xoutput_string = xinput_string
For Each mt In mtch ' what you want to change
        now change the output string by find and replace stuff for each match of what you want to change
        xoutput_string = Replace(xoutput_string, mt, "<a href=mailto:" & mt & ">" & mt & "</a>" & vbCrLf)
Next mt
tr_regex_email = xoutput_string
End Function
Attribute VB_Name = "xfit_tables"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AutoFitToWind()
Selection.WholeStory
Selection.Font.Size = 9
Dim tbl As Table
Dim tbl2 As Table
For Each tbl In ActiveDocument.Tables
        tbl.AutoFitBehavior wdAutoFitWindow
        For Each tbl2 In ActiveDocument.Tables
                tbl2.AutoFitBehavior wdAutoFitWindow
                
                
        Next tbl2
        
Next tbl
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub VBA_WORD_FORMAT_SUBTABLES()
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(t).AutoFitBehavior wdAutoFitWindow
        
        
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                
                Next
                
                
                Next
                
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST_movewithtext()
For t = 1 To ActiveDocument.Tables.Count
        With ActiveDocument.Tables(t).Rows
        .WrapAroundText = True
        .HorizontalPosition = wdTableLeft
        .RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
        .DistanceLeft = CentimetersToPoints(0.32)
        .DistanceRight = CentimetersToPoints(0.32)
        .VerticalPosition = CentimetersToPoints(0)
        .RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
        .DistanceTop = CentimetersToPoints(0)
        .DistanceBottom = CentimetersToPoints(0)
        .AllowOverlap = False
        End With
        
Next t
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TESTt2()
With Selection.Tables(1).Rows
.WrapAroundText = True
.HorizontalPosition = wdTableLeft
.RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
.DistanceLeft = CentimetersToPoints(0.32)
.DistanceRight = CentimetersToPoints(0.32)
.VerticalPosition = CentimetersToPoints(0)
.RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
.DistanceTop = CentimetersToPoints(0)
.DistanceBottom = CentimetersToPoints(0)
.AllowOverlap = False
End With
End Sub
Attribute VB_Name = "xfit_tables"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AutoFitToWind()
Selection.WholeStory
Selection.Font.Size = 9
Dim tbl As Table
Dim tbl2 As Table
For Each tbl In ActiveDocument.Tables
        tbl.AutoFitBehavior wdAutoFitWindow
        For Each tbl2 In ActiveDocument.Tables
                tbl2.AutoFitBehavior wdAutoFitWindow
                
                
        Next tbl2
        
Next tbl
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub VBA_WORD_FORMAT_SUBTABLES()
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(t).AutoFitBehavior wdAutoFitWindow
        
        
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                
                Next
                
                
                Next
                
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST_movewithtext()
For t = 1 To ActiveDocument.Tables.Count
        With ActiveDocument.Tables(t).Rows
        .WrapAroundText = True
        .HorizontalPosition = wdTableLeft
        .RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
        .DistanceLeft = CentimetersToPoints(0.32)
        .DistanceRight = CentimetersToPoints(0.32)
        .VerticalPosition = CentimetersToPoints(0)
        .RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
        .DistanceTop = CentimetersToPoints(0)
        .DistanceBottom = CentimetersToPoints(0)
        .AllowOverlap = False
        End With
        
Next t
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TESTt2()
With Selection.Tables(1).Rows
.WrapAroundText = True
.HorizontalPosition = wdTableLeft
.RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
.DistanceLeft = CentimetersToPoints(0.32)
.DistanceRight = CentimetersToPoints(0.32)
.VerticalPosition = CentimetersToPoints(0)
.RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
.DistanceTop = CentimetersToPoints(0)
.DistanceBottom = CentimetersToPoints(0)
.AllowOverlap = False
End With
End Sub
Attribute VB_Name = "TABLE_FONT_HTML"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub STEP3_A3FORMAT_SUBTABLES_a4()
Z = 260
ActiveDocument.Tables(1).Columns(1).Width = Z ' COL1
ActiveDocument.Tables(1).Columns(2).Width = Z ' COL2
ActiveDocument.Tables(1).Columns(3).Width = Z ' COL3
On Error Resume Next
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                '    ActiveDocument.Tables(T).Tables(Z).AutoFitBehavior wdAutoFitContent
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                
                
                Next
                
                ' ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitWindow
                'ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitContent
                
                
                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub STEP3_A3FORMAT_SUBTABLES_a3()
Z = 370
ActiveDocument.Tables(1).Columns(1).Width = Z ' COL1
ActiveDocument.Tables(1).Columns(2).Width = Z ' COL2
ActiveDocument.Tables(1).Columns(3).Width = Z ' COL3
On Error Resume Next
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                '    ActiveDocument.Tables(T).Tables(Z).AutoFitBehavior wdAutoFitContent
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                '######
                ' Loop through each row in the table.
                For Each oRow In ActiveDocument.Tables(t).Tables(Z).Rows
                        
                        ' Loop through each cell in the current row.
                        For Each oCell In oRow.Cells
                                ' Set sCellText equal to text of the cell.
                                ' Note: This section can be modified to suit
                                ' your programming purposes.
                                sCellText = oCell.Range
                                If Left(sCellText, 5) = "GREEN" Then oCell.Range.Shading.ForegroundPatternColor = RGB(0, 222, 0)
                                        If Left(sCellText, 5) = "GREEN" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                
                                                If Left(sCellText, 5) = "AMBER" Then oCell.Range.Shading.ForegroundPatternColor = RGB(255, 102, 0)
                                                        If Left(sCellText, 5) = "AMBER" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                                
                                                                
                                                                If Left(sCellText, 3) = "RED" Then oCell.Range.Shading.ForegroundPatternColor = RGB(222, 0, 0)
                                                                        If Left(sCellText, 3) = "RED" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                                                
                                                                                ' Remove table cell markers from the text.
                                                                                'sCellText = Left$(sCellText, Len(sCellText) - 2)
                                                                                'MsgBox sCellText
                                                                                
                                                                        Next oCell
                                                                        
                                                                Next oRow
                                                                '######
                                                                
                                                                Next
                                                                
                                                                ' ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitWindow
                                                                'ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitContent
                                                                
                                                                
                                                                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RetrieveTableItems()
Dim oRow As Row
Dim oCell As Cell
Dim sCellText As String
 Turn on error checking.
On Error GoTo ErrorHandler
For Each tbl In ActiveDocument.Tables
        x = x + 1
        ' Loop through each row in the table.
        For Each oRow In ActiveDocument.Tables(x).Rows
                
                ' Loop through each cell in the current row.
                For Each oCell In oRow.Cells
                        ' Set sCellText equal to text of the cell.
                        ' Note: This section can be modified to suit
                        ' your programming purposes.
                        sCellText = oCell.Range
                        ' Debug.Print sCellText
                        oCell.Range.Font.Size = 10
                        
                        oCell.Range.Font.ColorIndex = 1
                        ' Remove table cell markers from the text.
                        ' sCellText = Left$(sCellText, Len(sCellText) - 2)
                        'MsgBox sCellText
                        
                Next oCell
                
        Next oRow
Next ' TABLE
ErrorHandler:
If Err <> 0 Then
        Dim Msg As String
        Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description _
        & Chr(13) & "Make sure there is a table in the current document."
        MsgBox Msg, , "Error"
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub color_cells()
Dim oRow As Row
Dim oCell As Cell
Dim sCellText As String
 Turn on error checking.
On Error GoTo ErrorHandler
For Each tbl In ActiveDocument.Tables
        x = x + 1
        ' Loop through each row in the table.
        For Each oRow In ActiveDocument.Tables(x).Rows
                
                ' Loop through each cell in the current row.
                For Each oCell In oRow.Cells
                        ' Set sCellText equal to text of the cell.
                        ' Note: This section can be modified to suit
                        ' your programming purposes.
                        sCellText = oCell.Range
                        ' Debug.Print sCellText
                        ' oCell.Range.Font.ColorIndex = 1
                        If Left(sCellText, 5) = "AMBER" Then oCell.Range.Font.TextColor = RGB(222, 0, 0)
                                
                                If InStr(1, sCellText, "AMBER") Then oCell.Range.Shading.ForegroundPatternColor = RGB(5, 55, 880)
                                        If InStr(1, sCellText, "AMBER") Then oCell.Range.Font.TextColor = RGB(222, 0, 0)
                                                
                                                
                                                
                                                oCell.Range.Font.Size = 10
                                                
                                                
                                                
                                                ' Remove table cell markers from the text.
                                                ' sCellText = Left$(sCellText, Len(sCellText) - 2)
                                                'MsgBox sCellText
                                                
                                        Next oCell
                                        
                                Next oRow
                        Next ' TABLE
                        ErrorHandler:
                        If Err <> 0 Then
                                Dim Msg As String
                                Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description _
                                & Chr(13) & "Make sure there is a table in the current document."
                                MsgBox Msg, , "Error"
                        End If
                        
End Sub
Attribute VB_Name = "TABLE_FONT_HTML"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub STEP3_A3FORMAT_SUBTABLES_a4()
Z = 260
ActiveDocument.Tables(1).Columns(1).Width = Z ' COL1
ActiveDocument.Tables(1).Columns(2).Width = Z ' COL2
ActiveDocument.Tables(1).Columns(3).Width = Z ' COL3
On Error Resume Next
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                '    ActiveDocument.Tables(T).Tables(Z).AutoFitBehavior wdAutoFitContent
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                
                
                Next
                
                ' ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitWindow
                'ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitContent
                
                
                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub STEP3_A3FORMAT_SUBTABLES_a3()
Z = 370
ActiveDocument.Tables(1).Columns(1).Width = Z ' COL1
ActiveDocument.Tables(1).Columns(2).Width = Z ' COL2
ActiveDocument.Tables(1).Columns(3).Width = Z ' COL3
On Error Resume Next
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                '    ActiveDocument.Tables(T).Tables(Z).AutoFitBehavior wdAutoFitContent
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                '######
                ' Loop through each row in the table.
                For Each oRow In ActiveDocument.Tables(t).Tables(Z).Rows
                        
                        ' Loop through each cell in the current row.
                        For Each oCell In oRow.Cells
                                ' Set sCellText equal to text of the cell.
                                ' Note: This section can be modified to suit
                                ' your programming purposes.
                                sCellText = oCell.Range
                                If Left(sCellText, 5) = "GREEN" Then oCell.Range.Shading.ForegroundPatternColor = RGB(0, 222, 0)
                                        If Left(sCellText, 5) = "GREEN" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                
                                                If Left(sCellText, 5) = "AMBER" Then oCell.Range.Shading.ForegroundPatternColor = RGB(255, 102, 0)
                                                        If Left(sCellText, 5) = "AMBER" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                                
                                                                
                                                                If Left(sCellText, 3) = "RED" Then oCell.Range.Shading.ForegroundPatternColor = RGB(222, 0, 0)
                                                                        If Left(sCellText, 3) = "RED" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                                                
                                                                                ' Remove table cell markers from the text.
                                                                                'sCellText = Left$(sCellText, Len(sCellText) - 2)
                                                                                'MsgBox sCellText
                                                                                
                                                                        Next oCell
                                                                        
                                                                Next oRow
                                                                '######
                                                                
                                                                Next
                                                                
                                                                ' ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitWindow
                                                                'ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitContent
                                                                
                                                                
                                                                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RetrieveTableItems()
Dim oRow As Row
Dim oCell As Cell
Dim sCellText As String
 Turn on error checking.
On Error GoTo ErrorHandler
For Each tbl In ActiveDocument.Tables
        x = x + 1
        ' Loop through each row in the table.
        For Each oRow In ActiveDocument.Tables(x).Rows
                
                ' Loop through each cell in the current row.
                For Each oCell In oRow.Cells
                        ' Set sCellText equal to text of the cell.
                        ' Note: This section can be modified to suit
                        ' your programming purposes.
                        sCellText = oCell.Range
                        ' Debug.Print sCellText
                        oCell.Range.Font.Size = 10
                        
                        oCell.Range.Font.ColorIndex = 1
                        ' Remove table cell markers from the text.
                        ' sCellText = Left$(sCellText, Len(sCellText) - 2)
                        'MsgBox sCellText
                        
                Next oCell
                
        Next oRow
Next ' TABLE
ErrorHandler:
If Err <> 0 Then
        Dim Msg As String
        Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description _
        & Chr(13) & "Make sure there is a table in the current document."
        MsgBox Msg, , "Error"
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub color_cells()
Dim oRow As Row
Dim oCell As Cell
Dim sCellText As String
 Turn on error checking.
On Error GoTo ErrorHandler
For Each tbl In ActiveDocument.Tables
        x = x + 1
        ' Loop through each row in the table.
        For Each oRow In ActiveDocument.Tables(x).Rows
                
                ' Loop through each cell in the current row.
                For Each oCell In oRow.Cells
                        ' Set sCellText equal to text of the cell.
                        ' Note: This section can be modified to suit
                        ' your programming purposes.
                        sCellText = oCell.Range
                        ' Debug.Print sCellText
                        ' oCell.Range.Font.ColorIndex = 1
                        If Left(sCellText, 5) = "AMBER" Then oCell.Range.Font.TextColor = RGB(222, 0, 0)
                                
                                If InStr(1, sCellText, "AMBER") Then oCell.Range.Shading.ForegroundPatternColor = RGB(5, 55, 880)
                                        If InStr(1, sCellText, "AMBER") Then oCell.Range.Font.TextColor = RGB(222, 0, 0)
                                                
                                                
                                                
                                                oCell.Range.Font.Size = 10
                                                
                                                
                                                
                                                ' Remove table cell markers from the text.
                                                ' sCellText = Left$(sCellText, Len(sCellText) - 2)
                                                'MsgBox sCellText
                                                
                                        Next oCell
                                        
                                Next oRow
                        Next ' TABLE
                        ErrorHandler:
                        If Err <> 0 Then
                                Dim Msg As String
                                Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description _
                                & Chr(13) & "Make sure there is a table in the current document."
                                MsgBox Msg, , "Error"
                        End If
                        
End Sub
Attribute VB_Name = "NewMacros"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xlist()
Attribute xlist.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.xlist"
xlist Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
.Text = ";"
.Replacement.Text = ";^p"
.Forward = True
.Wrap = wdFindAsk
.Format = False
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
Selection.Sort ExcludeHeader:=False, FieldNumber:="Paragraphs", _
SortFieldType:=wdSortFieldAlphanumeric, SortOrder:=wdSortOrderAscending, _
FieldNumber2:="", SortFieldType2:=wdSortFieldAlphanumeric, SortOrder2:= _
wdSortOrderAscending, FieldNumber3:="", SortFieldType3:= _
wdSortFieldAlphanumeric, SortOrder3:=wdSortOrderAscending, Separator:= _
wdSortSeparateByTabs, SortColumn:=False, CaseSensitive:=False, LanguageID _
:=wdEnglishUK, SubFieldNumber:="Paragraphs", SubFieldNumber2:= _
"Paragraphs", SubFieldNumber3:="Paragraphs"
With ListGalleries(wdBulletGallery).ListTemplates(1).ListLevels(1)
.NumberFormat = ChrW(61623)
.TrailingCharacter = wdTrailingTab
.NumberStyle = wdListNumberStyleBullet
.NumberPosition = CentimetersToPoints(0.63)
.Alignment = wdListLevelAlignLeft
.TextPosition = CentimetersToPoints(1.27)
.TabPosition = wdUndefined
.ResetOnHigher = 0
.StartAt = 1
With .Font
.Bold = wdUndefined
.Italic = wdUndefined
.StrikeThrough = wdUndefined
.Subscript = wdUndefined
.Superscript = wdUndefined
.Shadow = wdUndefined
.Outline = wdUndefined
.Emboss = wdUndefined
.Engrave = wdUndefined
.AllCaps = wdUndefined
.Hidden = wdUndefined
.Underline = wdUndefined
.Color = wdUndefined
.Size = wdUndefined
.Animation = wdUndefined
.DoubleStrikeThrough = wdUndefined
.Name = "Symbol"
End With
.LinkedStyle = ""
End With
ListGalleries(wdBulletGallery).ListTemplates(1).Name = ""
Selection.Range.ListFormat.ApplyListTemplateWithLevel ListTemplate:= _
ListGalleries(wdBulletGallery).ListTemplates(1), ContinuePreviousList:= _
False, ApplyTo:=wdListApplyToWholeList, DefaultListBehavior:= _
wdWord10ListBehavior
Selection.Range.ListFormat.RemoveNumbers NumberType:=wdNumberParagraph
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub draft()
Attribute draft.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.draft"
draft Macro
ActiveDocument.Sections(1).Range.Select
ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
Selection.HeaderFooter.Shapes.AddTextEffect( _
PowerPlusWaterMarkObject4559526, "DISCUSSION DRAFT ", "Calibri", 1, False _
, False, 0, 0).Select
 Selection.ShapeRange.Name = "PowerPlusWaterMarkObject4559526"
Selection.ShapeRange.TextEffect.NormalizedHeight = False
Selection.ShapeRange.Line.Visible = False
Selection.ShapeRange.Fill.Visible = True
Selection.ShapeRange.Fill.Solid
Selection.ShapeRange.Fill.ForeColor.RGB = RGB(192, 192, 192)
Selection.ShapeRange.Fill.Transparency = 0.5
Selection.ShapeRange.Rotation = 315
Selection.ShapeRange.LockAspectRatio = True
Selection.ShapeRange.Height = CentimetersToPoints(3.74)
Selection.ShapeRange.Width = CentimetersToPoints(18.7)
Selection.ShapeRange.WrapFormat.AllowOverlap = True
Selection.ShapeRange.WrapFormat.Side = wdWrapNone
Selection.ShapeRange.WrapFormat.Type = 3
Selection.ShapeRange.RelativeHorizontalPosition = _
wdRelativeVerticalPositionMargin
Selection.ShapeRange.RelativeVerticalPosition = _
wdRelativeVerticalPositionMargin
Selection.ShapeRange.Left = wdShapeCenter
Selection.ShapeRange.Top = wdShapeCenter
ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_fmt()
Attribute table_fmt.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.table_fmt"
On Error Resume Next
For x = 1 To ActiveDocument.Tables.Count
        
        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
        
        ActiveDocument.Tables(x).Rows.Height = InchesToPoints(0)
        
        
        
        
        
        
        For Row = 1 To ActiveDocument.Tables(x).Rows.Count
                
                For Col = 1 To ActiveDocument.Tables(x).Columns.Count
                        
                        'ActiveDocument.Tables(X).Cell(Row, Col).Range.Text
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Size = 9
                        ' .Font.Size = 8
                        
                        
                        Next
                        
                        Next
                        
                        
                Next x
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_agenct_12_blue()
Attribute quote_agenct_12_blue.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.quote"
Selection.Font.Name = "Agency FB"
Selection.Font.Size = 10
Selection.Font.Size = 12
Selection.Font.ColorIndex = wdDarkBlue
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_cal_11_teal()
Selection.Font.Name = "CAlibri"
Selection.Font.Size = 10
Selection.Font.Size = 11
Selection.Font.Color = RGB(0, 128, 128)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_cal_12_blk()
Selection.Font.Name = "CAlibri"
Selection.Font.Size = 10
Selection.Font.Size = 12
Selection.Font.Color = RGB(0, 0, 0)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AA_addautotext()
AA_addautotext Macro
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_XZXZXZ()
aa_headings2016_XZXZXZ Macro
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub fandr()
Attribute fandr.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.fandr"
For xnumber = 1 To 9
        
        
        Selection.Find.ClearFormatting
        Selection.Find.Replacement.ClearFormatting
        With Selection.Find
        .Text = xnumber
        .Replacement.Text = "^p"
        .Forward = True
        .Wrap = wdFindAsk
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
        End With
        Selection.Find.Execute Replace:=wdReplaceAll
        Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub WHOAMI()
x = ActiveDocument.Name
y = ActiveDocument.Path & "\" & x
Z = InputBox(x, x, x)
Z = InputBox(y, y, y)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_extract()
xtext = Selection.Range.Text
xtext = Replace(xtext, vbCrLf, " ")
xtext = Replace(xtext, vbCr, " ")
xtext = Replace(xtext, vbLf, " ")
For q = 1 To 32
        xtext = Replace(xtext, Chr(q), " ")
Next q
xpage = Selection.Information(wdActiveEndPageNumber)
x = " '..." & xtext & "..' [Line: " & GetLineNum(Selection.Range) & " on page " & xpage & " ]"
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub WhereAmI()
MsgBox "Paragraph number: " & GetParNum(Selection.Range) & vbCrLf & _
"Absolute line number: " & GetAbsoluteLineNum(Selection.Range) & vbCrLf & _
"Relative line number: " & GetLineNum(Selection.Range)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetParNum(r As Range) As Integer
Dim rParagraphs As Range
Dim CurPos As Long
r.Select
CurPos = ActiveDocument.Bookmarks("\startOfSel").Start
Set rParagraphs = ActiveDocument.Range(Start:=0, End:=CurPos)
GetParNum = rParagraphs.Paragraphs.Count
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetLineNum(r As Range) As Integer
relative to current page
GetLineNum = r.Information(wdFirstCharacterLineNumber)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetAbsoluteLineNum(r As Range) As Integer
Dim i1 As Integer, i2 As Integer, Count As Integer, rTemp As Range
r.Select
Do
i1 = Selection.Information(wdFirstCharacterLineNumber)
Selection.GoTo what:=wdGoToLine, which:=wdGoToPrevious, Count:=1, Name:=""
Count = Count + 1
i2 = Selection.Information(wdFirstCharacterLineNumber)
Loop Until i1 = i2
r.Select
GetAbsoluteLineNum = Count
End Function
Attribute VB_Name = "NewMacros"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Macro1()
Attribute Macro1.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Macro1"
Macro1 Macro
Selection.Tables(1).Style = "Light Shading - Accent 5"
End Sub
Attribute VB_Name = "header_footer_imagex"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub header_footer_image()
Call EditHeadersAndFooters
Call Insert_SqWrap_Image ' InsertImage
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub EditHeadersAndFooters()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = "ISO 14001 2015 ENVIRONMENTAL MANAGEMENT"
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 22
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub EditHeadersAndFooters_tri()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZ.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub EditHeadersAndFooters_XZXZXZ()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImage()
Dim imagePath As String
imagePath = "C:\\picture.jpg"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, _
LinkToFile:=False, _
SaveWithDocument:=True, _
Left:=370, _
Top:=-30, _
Anchor:=Selection.Range, _
Width:=60, _
Height:=60
Anchor:=Selection.Range, _
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Insert_SqWrap_Image()
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
With shp
.WrapFormat.Type = wdWrapSquare
.Left = 380
.Top = -50
.Width = 70
.Height = 70
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AddImageToHeader()
PURPOSE: Insert an image into a Word document heading
SOURCE: www.TheSpreadsheetGuru.com
Dim SrcePath As String
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\x1i-GEQY.png"
ThisDocument.Sections.Item(1).Headers(wdHeaderFooterPrimary) _
.Range.InlineShapes.AddPicture (SrcePath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Word_Insert_Image_in_Header()
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim oWD As Word.Document
Set oWD = ActiveDocument
With oWD.Sections(1)
.Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
.Headers(wdHeaderFooterPrimary).Range.Text = "Text as Header"
 .Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphRight
 .Headers(wdHeaderFooterPrimary).Range.InlineShapes.AddPicture SrcePath
End With
End Sub
Public Function ChangeHeadersAndFooters()
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .Headers(wdHeaderFooterPrimary).LinkToPrevious = True
        .Headers(wdHeaderFooterPrimary).Range.Text = "Koptekst vanaf pagina 2"
        .Footers(wdHeaderFooterPrimary).Range.Text = "Voettekst vanaf pagina 2"
        End With
Next i
ActiveDocument.Sections(1).PageSetup.DifferentFirstPageHeaderFooter = True
ActiveDocument.Sections(1).Headers(wdHeaderFooterFirstPage).Range.Text = "test"
With ActiveDocument.Sections(1)
.PageSetup.DifferentFirstPageHeaderFooter = True
.Headers(wdHeaderFooterFirstPage).LinkToPrevious = False
.Headers(wdHeaderFooterFirstPage).Range.Text = "eerste pagina koptekst"
.Footers(wdHeaderFooterFirstPage).Range.Text = "eerste pagina voettekst"
End With
Attribute VB_Name = "header_footer_imagex"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub header_footer_image()
Call EditHeadersAndFooters
Call Insert_SqWrap_Image ' InsertImage
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub EditHeadersAndFooters()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = "ISO 14001 2015 ENVIRONMENTAL MANAGEMENT"
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 22
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub EditHeadersAndFooters_tri()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZ.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub EditHeadersAndFooters_XZXZXZ()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImage()
Dim imagePath As String
imagePath = "C:\\picture.jpg"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, _
LinkToFile:=False, _
SaveWithDocument:=True, _
Left:=370, _
Top:=-30, _
Anchor:=Selection.Range, _
Width:=60, _
Height:=60
Anchor:=Selection.Range, _
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Insert_SqWrap_Image()
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
With shp
.WrapFormat.Type = wdWrapSquare
.Left = 380
.Top = -50
.Width = 70
.Height = 70
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AddImageToHeader()
PURPOSE: Insert an image into a Word document heading
SOURCE: www.TheSpreadsheetGuru.com
Dim SrcePath As String
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\x1i-GEQY.png"
ThisDocument.Sections.Item(1).Headers(wdHeaderFooterPrimary) _
.Range.InlineShapes.AddPicture (SrcePath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Word_Insert_Image_in_Header()
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim oWD As Word.Document
Set oWD = ActiveDocument
With oWD.Sections(1)
.Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
.Headers(wdHeaderFooterPrimary).Range.Text = "Text as Header"
 .Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphRight
 .Headers(wdHeaderFooterPrimary).Range.InlineShapes.AddPicture SrcePath
End With
End Sub
Public Function ChangeHeadersAndFooters()
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .Headers(wdHeaderFooterPrimary).LinkToPrevious = True
        .Headers(wdHeaderFooterPrimary).Range.Text = "Koptekst vanaf pagina 2"
        .Footers(wdHeaderFooterPrimary).Range.Text = "Voettekst vanaf pagina 2"
        End With
Next i
ActiveDocument.Sections(1).PageSetup.DifferentFirstPageHeaderFooter = True
ActiveDocument.Sections(1).Headers(wdHeaderFooterFirstPage).Range.Text = "test"
With ActiveDocument.Sections(1)
.PageSetup.DifferentFirstPageHeaderFooter = True
.Headers(wdHeaderFooterFirstPage).LinkToPrevious = False
.Headers(wdHeaderFooterFirstPage).Range.Text = "eerste pagina koptekst"
.Footers(wdHeaderFooterFirstPage).Range.Text = "eerste pagina voettekst"
End With
Attribute VB_Name = "temp_buttons"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button1()
Call name_doc
Call EditHeadersAndFooters_tri
Call PDF
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button2()
Call quote_cal_12_blk
Call EditHeadersAndFooters_XZXZXZ
Call PDF
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button3()
Call header_footer_image
Selection.Font.Size = 10
Selection.Font.Name = "Calibri"
Selection.Font.ColorIndex = wdBlack
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button4()
Call header_footer_image
Call PDFtext.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button8()
With Selection.Tables(1).Rows
.WrapAroundText = True
.HorizontalPosition = wdTableLeft
.RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
.DistanceLeft = CentimetersToPoints(0.32)
.DistanceRight = CentimetersToPoints(0.32)
.VerticalPosition = CentimetersToPoints(0)
.RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
.DistanceTop = CentimetersToPoints(0)
.DistanceBottom = CentimetersToPoints(0)
.AllowOverlap = False
End With
End Sub
Attribute VB_Name = "temp_buttons"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button1()
Call name_doc
Call EditHeadersAndFooters_tri
Call PDF
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button2()
Call quote_cal_12_blk
Call EditHeadersAndFooters_XZXZXZ
Call PDF
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button3()
Call header_footer_image
Selection.Font.Size = 10
Selection.Font.Name = "Calibri"
Selection.Font.ColorIndex = wdBlack
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button4()
Call header_footer_image
Call PDFtext.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button8()
With Selection.Tables(1).Rows
.WrapAroundText = True
.HorizontalPosition = wdTableLeft
.RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
.DistanceLeft = CentimetersToPoints(0.32)
.DistanceRight = CentimetersToPoints(0.32)
.VerticalPosition = CentimetersToPoints(0)
.RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
.DistanceTop = CentimetersToPoints(0)
.DistanceBottom = CentimetersToPoints(0)
.AllowOverlap = False
End With
End Sub
Attribute VB_Name = "word_templates_opath"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ChangeAttachedTemplate()
Dim oDoc As Document  'make sure you're getting info on the right document
Set oDoc = ActiveDocument
If oDoc.Type = wdTypeTemplate Then Exit Sub
        Dim oTemplate As Template
        Dim strTemplatePath
        Set oTemplate = oDoc.AttachedTemplate
        If InStr(UCase(oTemplate.FullName), "OLDPATH") > 0 Then
                oDoc.AttachedTemplate = "FULLNEWPATH" & oTemplate.Name
        End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub FindTemplate()
MsgBox ThisDocument.AttachedTemplate.FullName
MsgBox ActiveDocument.AttachedTemplate.FullName
x = ActiveDocument.AttachedTemplate.FullName
Debug.Print x
End Sub
Attribute VB_Name = "word_templates_opath"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ChangeAttachedTemplate()
Dim oDoc As Document  'make sure you're getting info on the right document
Set oDoc = ActiveDocument
If oDoc.Type = wdTypeTemplate Then Exit Sub
        Dim oTemplate As Template
        Dim strTemplatePath
        Set oTemplate = oDoc.AttachedTemplate
        If InStr(UCase(oTemplate.FullName), "OLDPATH") > 0 Then
                oDoc.AttachedTemplate = "FULLNEWPATH" & oTemplate.Name
        End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub FindTemplate()
MsgBox ThisDocument.AttachedTemplate.FullName
MsgBox ActiveDocument.AttachedTemplate.FullName
x = ActiveDocument.AttachedTemplate.FullName
Debug.Print x
End Sub
Attribute VB_Name = "temp_nameword"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub name_doc()
For p = 1 To ActiveDocument.Paragraphs.Count
        
        
        x = x & ActiveDocument.Paragraphs(p).Range.Text
        
        If Len(x) > 50 Then Exit For
                
        Next p
        For q = 1 To 47
                x = Replace(x, Chr(q), " ")
                x = Replace(x, "  ", " ")
        Next q
        For q = 58 To 64
                x = Replace(x, Chr(q), " ")
                x = Replace(x, "  ", " ")
        Next q
        fname = ActiveDocument.Path & "\CMI_" & Trim(x)
        Debug.Print fname
        
        ActiveDocument.SaveAs FileName:=fname
End Sub
Attribute VB_Name = "temp_nameword"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub name_doc()
For p = 1 To ActiveDocument.Paragraphs.Count
        
        
        x = x & ActiveDocument.Paragraphs(p).Range.Text
        
        If Len(x) > 50 Then Exit For
                
        Next p
        For q = 1 To 47
                x = Replace(x, Chr(q), " ")
                x = Replace(x, "  ", " ")
        Next q
        For q = 58 To 64
                x = Replace(x, Chr(q), " ")
                x = Replace(x, "  ", " ")
        Next q
        fname = ActiveDocument.Path & "\CMI_" & Trim(x)
        Debug.Print fname
        
        ActiveDocument.SaveAs FileName:=fname
End Sub
Attribute VB_Name = "XFINDANDREPLACE"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST()
XFIND = "(yes)"
XREPLACE = "(YES)"
Call XFINDANDREPLACE(XFIND, XREPLACE)
Call XFINDANDREPLACE("(PARTIALLY)", "(PARTIALLY)")
Call XFINDANDREPLACE("(NO)", "(NO)")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function XFINDANDREPLACE(XFIND, XREPLACE)
Macro1 Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
Selection.Find.Replacement.Font.Bold = True
With Selection.Find
.Text = XFIND
.Replacement.Text = XREPLACE
.Forward = True
.Wrap = wdFindContinue
.Format = True
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
End Function
Attribute VB_Name = "XFINDANDREPLACE"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST()
XFIND = "(yes)"
XREPLACE = "(YES)"
Call XFINDANDREPLACE(XFIND, XREPLACE)
Call XFINDANDREPLACE("(PARTIALLY)", "(PARTIALLY)")
Call XFINDANDREPLACE("(NO)", "(NO)")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function XFINDANDREPLACE(XFIND, XREPLACE)
Macro1 Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
Selection.Find.Replacement.Font.Bold = True
With Selection.Find
.Text = XFIND
.Replacement.Text = XREPLACE
.Forward = True
.Wrap = wdFindContinue
.Format = True
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
End Function
Attribute VB_Name = "Module2"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test876()
xtext = "The cat sat on the mat and did "
x = reverse_string(6, xtext, " ")
Debug.Print Right(xtext, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function reverse_string(xno, xtext, XFIND)
xlen = Len(xtext)
For Z = xlen To 1 Step -1 ' go backwards
        If Mid(xtext, Z, 1) = XFIND Then xqty = xqty + 1
                If xqty = xno Then Exit For
                        
                Next Z
                xresult = xlen - Z
                reverse_string = xresult
                
End Function
Attribute VB_Name = "Module2"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test876()
xtext = "The cat sat on the mat and did "
x = reverse_string(6, xtext, " ")
Debug.Print Right(xtext, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function reverse_string(xno, xtext, XFIND)
xlen = Len(xtext)
For Z = xlen To 1 Step -1 ' go backwards
        If Mid(xtext, Z, 1) = XFIND Then xqty = xqty + 1
                If xqty = xno Then Exit For
                        
                Next Z
                xresult = xlen - Z
                reverse_string = xresult
                
End Function
Attribute VB_Name = "ScreenPrintx"
Declare Windows API Functions
Private Declare Sub keybd_event Lib "user32" (ByVal bVk As Byte, ByVal _
bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
Declare Virtual Key Codes
Private Const VK_SNAPSHOT = &H2C
Private Const VK_KEYUP = &H2
Private Const VK_MENU = &H12
Public Const VK_TAB = &H9
Public Const VK_ENTER = &HD
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ScreenPrint()
Press Alt + TAB Keys -- Step1
Alt_Tab
Press Print Screen key using Windows API -- Step2.
keybd_event VK_SNAPSHOT, 1, 0, 0 'Print Screen key down
keybd_event VK_SNAPSHOT, 1, VK_KEYUP, 0 'Print key Up - Screenshot to Clipboard
Paste Image in Chart and Export it to Image file. -- Step3
Charts.Add
ThisWorkbook.Charts(1).AutoScaling = True
ThisWorkbook.Charts(1).Paste
ThisWorkbook.Charts(1).Export FileName:="E:\ClipBoardToPic.jpg", FilterName:="jpg"
Supress warning message and Delete the Chart
Application.DisplayAlerts = False
ThisWorkbook.Charts(1).Delete
Application.DisplayAlerts = True
Attach the file to Excel -- Step4
Attach_File
ThisWorkbook.Activate
ThisWorkbook.Sheets(1).Select
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Alt_Tab()
DoEvents
keybd_event VK_MENU, 1, 0, 0 'Alt key down
DoEvents
keybd_event VK_TAB, 0, 0, 0 'Tab key down
DoEvents
keybd_event VK_TAB, 1, VK_KEYUP, 0 'Tab key up
DoEvents
keybd_event VK_ENTER, 1, 0, 0 'Tab key down
DoEvents
keybd_event VK_ENTER, 1, VK_KEYUP, 0 'Tab key up
DoEvents
keybd_event VK_MENU, 1, VK_KEYUP, 0 'Alt key up
DoEvents
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Attach_File()
ActiveCell.Select
ActiveSheet.OLEObjects.Add(FileName:="E:\ClipBoardToPic.jpg", Link:=False, _
DisplayAsIcon:=True, IconFileName:= _
"C:\Program Files\Internet Explorer\iexplore.exe", IconIndex:=10, IconLabel _
:="ClipBoardToPic.jpg").Select
End Sub
Attribute VB_Name = "ScreenPrintx"
Declare Windows API Functions
Private Declare Sub keybd_event Lib "user32" (ByVal bVk As Byte, ByVal _
bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
Declare Virtual Key Codes
Private Const VK_SNAPSHOT = &H2C
Private Const VK_KEYUP = &H2
Private Const VK_MENU = &H12
Public Const VK_TAB = &H9
Public Const VK_ENTER = &HD
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ScreenPrint()
Press Alt + TAB Keys -- Step1
Alt_Tab
Press Print Screen key using Windows API -- Step2.
keybd_event VK_SNAPSHOT, 1, 0, 0 'Print Screen key down
keybd_event VK_SNAPSHOT, 1, VK_KEYUP, 0 'Print key Up - Screenshot to Clipboard
Paste Image in Chart and Export it to Image file. -- Step3
Charts.Add
ThisWorkbook.Charts(1).AutoScaling = True
ThisWorkbook.Charts(1).Paste
ThisWorkbook.Charts(1).Export FileName:="E:\ClipBoardToPic.jpg", FilterName:="jpg"
Supress warning message and Delete the Chart
Application.DisplayAlerts = False
ThisWorkbook.Charts(1).Delete
Application.DisplayAlerts = True
Attach the file to Excel -- Step4
Attach_File
ThisWorkbook.Activate
ThisWorkbook.Sheets(1).Select
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Alt_Tab()
DoEvents
keybd_event VK_MENU, 1, 0, 0 'Alt key down
DoEvents
keybd_event VK_TAB, 0, 0, 0 'Tab key down
DoEvents
keybd_event VK_TAB, 1, VK_KEYUP, 0 'Tab key up
DoEvents
keybd_event VK_ENTER, 1, 0, 0 'Tab key down
DoEvents
keybd_event VK_ENTER, 1, VK_KEYUP, 0 'Tab key up
DoEvents
keybd_event VK_MENU, 1, VK_KEYUP, 0 'Alt key up
DoEvents
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Attach_File()
ActiveCell.Select
ActiveSheet.OLEObjects.Add(FileName:="E:\ClipBoardToPic.jpg", Link:=False, _
DisplayAsIcon:=True, IconFileName:= _
"C:\Program Files\Internet Explorer\iexplore.exe", IconIndex:=10, IconLabel _
:="ClipBoardToPic.jpg").Select
End Sub
Attribute VB_Name = "images_word_pictures"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImages()
http://word.tips.net/T010726_Inserting_Multiple_Graphics_in_a_Document.html
Dim doc As Word.Document
Dim fd As FileDialog
Dim vItem As Variant
Dim mg1 As Range
Dim mg2 As Range
Set fd = Application.FileDialog(msoFileDialogFilePicker)
Set doc = ActiveDocument
With fd
.Filters.Add "Images", "*.gif; *.jpg; *.jpeg", 1
.FilterIndex = 1
If .Show = -1 Then
        For Each vItem In .SelectedItems
                Set mg2 = ActiveDocument.Range
                mg2.Collapse wdCollapseEnd
                doc.InlineShapes.AddPicture _
                FileName:=vItem, _
                LinkToFile:=False, SaveWithDocument:=True, Range:=mg2
                Set mg1 = ActiveDocument.Range
                mg1.Collapse wdCollapseEnd
                
                mg1.Text = vbCrLf & vbCrLf
        Next vItem
End If
End With
Set fd = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub GetPictures()
Dim sPic As String
Dim sPath As String
sPath = "V:\Data2016\RichardRolfe\XZXZXZ_LeanPM (Film)\" 'c:\myfolder\"
sPic = Dir(sPath & "*.png")
Do While sPic <> ""
        Selection.InlineShapes.AddPicture _
        FileName:=sPath & sPic, _
        LinkToFile:=False, SaveWithDocument:=True
        sPic = Dir
        Selection.TypeParagraph
        Selection.TypeParagraph
        Loop
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_resize_tim()
x = ActiveDocument.InlineShapes.Count
For i = 1 To x
        ActiveDocument.InlineShapes(i).Height = 400
        
        ActiveDocument.InlineShapes(i).Width = 600
        
Next i
MsgBox x
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ResizePics()
Dim shp As Word.Shape
Dim ishp As Word.InlineShape
If Word.Selection.Type <> wdSelectionInlineShape And _
        Word.Selection.Type <> wdSelectionShape Then
        Exit Sub
End If
If Word.Selection.Type = wdSelectionInlineShape Then
        Set ishp = Word.Selection.Range.InlineShapes(1)
        ishp.LockAspectRatio = False
        ishp.Height = InchesToPoints(1.78)
        ishp.Width = InchesToPoints(3.17)
        Else
        If Word.Selection.Type = wdSelectionShape Then
                Set shp = Word.Selection.ShapeRange(1)
                shp.LockAspectRatio = False
                shp.Height = InchesToPoints(1.78)
                shp.Width = InchesToPoints(3.17)
        End If
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImage()
Dim imagePath As String
imagePath = "C:\\picture.jpg"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, _
LinkToFile:=False, _
SaveWithDocument:=True, _
Left:=370, _
Top:=-30, _
Anchor:=Selection.Range, _
Width:=60, _
Height:=60
Anchor:=Selection.Range, _
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function Insert_bunch_images(fname)
imagePath = fname ' "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
 Selection.TypeParagraph
  Selection.TypeText Text:="Title" & fname
 Selection.TypeParagraph
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
  Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True)
With shp
 .WrapFormat.Type = 4  'wdWrapSquare
.WrapFormat.Type = wdWrapInline
.Width = 500
.Height = 500
End With
Selection.TypeParagraph
Selection.TypeText Text:="Title" & fname
Selection.TypeParagraph
End Function
Private Sub cmdFileDialog_Click()
Requires reference to Microsoft Office 12.0 Object Library.
Dim fDialog As Office.FileDialog
Dim varFile As Variant
Set up the File Dialog.
Set fDialog = Application.FileDialog(msoFileDialogFilePicker)
With fDialog
Allow user to make multiple selections in dialog box.
.AllowMultiSelect = True
Set the title of the dialog box.
.Title = "Please select one or more files"
Clear out the current filters, and add our own.
.Filters.Clear
.Filters.Add "Access Databases", "*.MDB; *.ACCDB"
.Filters.Add "Access Projects", "*.ADP"
.Filters.Add "All Files", "*.png"
Show the dialog box. If the .Show method returns True, the
user picked at least one file. If the .Show method returns
False, the user clicked Cancel.
If .Show = True Then
        'Loop through each file selected and add it to the list box.
        For Each varFile In .SelectedItems
                'Me.FileList.AddItem varFile
                Debug.Print varFile
                Call Insert_bunch_images(varFile)
                Next
                Else
                MsgBox "You clicked Cancel in the file dialog box."
        End If
        End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Insert_SqWrap_Image()
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
With shp
.WrapFormat.Type = wdWrapSquare
.Left = 380
.Top = -50
.Width = 70
.Height = 70
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AddImageToHeader()
PURPOSE: Insert an image into a Word document heading
SOURCE: www.TheSpreadsheetGuru.com
Dim SrcePath As String
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\x1i-GEQY.png"
ThisDocument.Sections.Item(1).Headers(wdHeaderFooterPrimary) _
.Range.InlineShapes.AddPicture (SrcePath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Word_Insert_Image_in_Header()
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim oWD As Word.Document
Set oWD = ActiveDocument
With oWD.Sections(1)
.Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
.Headers(wdHeaderFooterPrimary).Range.Text = "Text as Header"
 .Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphRight
 .Headers(wdHeaderFooterPrimary).Range.InlineShapes.AddPicture SrcePath
End With
End Sub
Attribute VB_Name = "images_word_pictures"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImages()
http://word.tips.net/T010726_Inserting_Multiple_Graphics_in_a_Document.html
Dim doc As Word.Document
Dim fd As FileDialog
Dim vItem As Variant
Dim mg1 As Range
Dim mg2 As Range
Set fd = Application.FileDialog(msoFileDialogFilePicker)
Set doc = ActiveDocument
With fd
.Filters.Add "Images", "*.gif; *.jpg; *.jpeg", 1
.FilterIndex = 1
If .Show = -1 Then
        For Each vItem In .SelectedItems
                Set mg2 = ActiveDocument.Range
                mg2.Collapse wdCollapseEnd
                doc.InlineShapes.AddPicture _
                FileName:=vItem, _
                LinkToFile:=False, SaveWithDocument:=True, Range:=mg2
                Set mg1 = ActiveDocument.Range
                mg1.Collapse wdCollapseEnd
                
                mg1.Text = vbCrLf & vbCrLf
        Next vItem
End If
End With
Set fd = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub GetPictures()
Dim sPic As String
Dim sPath As String
sPath = "V:\Data2016\RichardRolfe\XZXZXZ_LeanPM (Film)\" 'c:\myfolder\"
sPic = Dir(sPath & "*.png")
Do While sPic <> ""
        Selection.InlineShapes.AddPicture _
        FileName:=sPath & sPic, _
        LinkToFile:=False, SaveWithDocument:=True
        sPic = Dir
        Selection.TypeParagraph
        Selection.TypeParagraph
        Loop
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_resize_tim()
x = ActiveDocument.InlineShapes.Count
For i = 1 To x
        ActiveDocument.InlineShapes(i).Height = 200 ' * 1.2
        ActiveDocument.InlineShapes(i).Width = 300 '* 1.2
        
        
        
        
Next i
MsgBox x
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ResizePics()
Dim shp As Word.Shape
Dim ishp As Word.InlineShape
If Word.Selection.Type <> wdSelectionInlineShape And _
        Word.Selection.Type <> wdSelectionShape Then
        Exit Sub
End If
If Word.Selection.Type = wdSelectionInlineShape Then
        Set ishp = Word.Selection.Range.InlineShapes(1)
        ishp.LockAspectRatio = False
        ishp.Height = 55 'InchesToPoints(1.78)
        ishp.Width = 44 'InchesToPoints(3.17)
        Else
        If Word.Selection.Type = wdSelectionShape Then
                Set shp = Word.Selection.ShapeRange(1)
                shp.LockAspectRatio = False
                shp.Height = 33 'InchesToPoints(1.78)
                shp.Width = 22 'InchesToPoints(3.17)
        End If
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ResizePics_all()
Dim shp As Word.Shape
Dim ishp As Word.InlineShape
If Word.Selection.Type <> wdSelectionInlineShape And _
        Word.Selection.Type <> wdSelectionShape Then
        Exit Sub
End If
If Word.Selection.Type = wdSelectionInlineShape Then
        Set ishp = Word.Selection.Range.InlineShapes(1)
        ishp.LockAspectRatio = False
        ishp.Height = 55 'InchesToPoints(1.78)
        ishp.Width = 44 'InchesToPoints(3.17)
        Else
        If Word.Selection.Type = wdSelectionShape Then
                Set shp = Word.Selection.ShapeRange(1)
                shp.LockAspectRatio = False
                shp.Height = 33 'InchesToPoints(1.78)
                shp.Width = 22 'InchesToPoints(3.17)
        End If
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImage()
Dim imagePath As String
imagePath = "C:\\picture.jpg"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, _
LinkToFile:=False, _
SaveWithDocument:=True, _
Left:=370, _
Top:=-30, _
Anchor:=Selection.Range, _
Width:=60, _
Height:=60
Anchor:=Selection.Range, _
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function Insert_bunch_images(fname)
imagePath = fname ' "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
 Selection.TypeParagraph
  Selection.TypeText Text:="Title" & fname
 Selection.TypeParagraph
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
  Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True)
With shp
 .WrapFormat.Type = 4  'wdWrapSquare
.WrapFormat.Type = wdWrapInline
.Width = 500
.Height = 500
End With
Selection.TypeParagraph
Selection.TypeText Text:="Title" & fname
Selection.TypeParagraph
End Function
Private Sub cmdFileDialog_Click()
Requires reference to Microsoft Office 12.0 Object Library.
Dim fDialog As Office.FileDialog
Dim varFile As Variant
Set up the File Dialog.
Set fDialog = Application.FileDialog(msoFileDialogFilePicker)
With fDialog
Allow user to make multiple selections in dialog box.
.AllowMultiSelect = True
Set the title of the dialog box.
.Title = "Please select one or more files"
Clear out the current filters, and add our own.
.Filters.Clear
.Filters.Add "Access Databases", "*.MDB; *.ACCDB"
.Filters.Add "Access Projects", "*.ADP"
.Filters.Add "All Files", "*.png"
Show the dialog box. If the .Show method returns True, the
user picked at least one file. If the .Show method returns
False, the user clicked Cancel.
If .Show = True Then
        'Loop through each file selected and add it to the list box.
        For Each varFile In .SelectedItems
                'Me.FileList.AddItem varFile
                Debug.Print varFile
                Call Insert_bunch_images(varFile)
                Next
                Else
                MsgBox "You clicked Cancel in the file dialog box."
        End If
        End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Insert_SqWrap_Image()
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
With shp
.WrapFormat.Type = wdWrapSquare
.Left = 380
.Top = -50
.Width = 70
.Height = 70
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AddImageToHeader()
PURPOSE: Insert an image into a Word document heading
SOURCE: www.TheSpreadsheetGuru.com
Dim SrcePath As String
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\x1i-GEQY.png"
ThisDocument.Sections.Item(1).Headers(wdHeaderFooterPrimary) _
.Range.InlineShapes.AddPicture (SrcePath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Word_Insert_Image_in_Header()
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim oWD As Word.Document
Set oWD = ActiveDocument
With oWD.Sections(1)
.Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
.Headers(wdHeaderFooterPrimary).Range.Text = "Text as Header"
 .Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphRight
 .Headers(wdHeaderFooterPrimary).Range.InlineShapes.AddPicture SrcePath
End With
End Sub
Attribute VB_Name = "XZXZXZ_word_normal"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub A2_FORM1()
zzbuttons_highlands.Show
buttons.Show
ListCommentsFrm.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PrintScreen()
WordBasic.SendKeys "{prtsc}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub f3()
SendKeys "{f3}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub f9()
SendKeys "{f9}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub af8()
SendKeys "%{f8}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_infuse_font()
Selection.Font.Color = RGB(73, 23, 109)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_infuse_back()
Selection.Interior.Color = RGB(73, 23, 109)
Selection.Font.Color = RGB(0, 0, 0)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_list()
For c = 1 To ActiveDocument.Comments.Count
        Z = Z & vbCrLf & c & " " & ActiveDocument.Comments(c).Scope
        https://social.msdn.microsoft.com/Forums/en-US/9a109c23-e29d-49a2-a563-a4d4ea50659e/vba-word-get-line-number-of-comment-object?forum=isvvba
        
        p = "Page" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdActiveEndPageNumber)
        l = "Line" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdFirstCharacterLineNumber)
        
        x = x & vbCrLf & c & " " & ActiveDocument.Comments(c).Range.Text
        q = q & vbCrLf & vbCrLf & "Your text: '..." & ActiveDocument.Comments(c).Scope & "...' [" & p & l & "] Feedback: " & ActiveDocument.Comments(c).Range.Text
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_zap()
For c = ActiveDocument.Comments.Count To 1 Step -1
        ActiveDocument.Comments(c).Delete
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_quote()
For c = 1 To ActiveDocument.Comments.Count
        Z = Z & vbCrLf & c & " " & ActiveDocument.Comments(c).Scope
        https://social.msdn.microsoft.com/Forums/en-US/9a109c23-e29d-49a2-a563-a4d4ea50659e/vba-word-get-line-number-of-comment-object?forum=isvvba
        
        p = "Page" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdActiveEndPageNumber)
        l = "Line" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdFirstCharacterLineNumber)
        
        x = x & vbCrLf & c & " " & ActiveDocument.Comments(c).Range.Text
        q = q & vbCrLf & vbCrLf & "Your text: '..." & ActiveDocument.Comments(c).Scope & "...' [" & p & l & "] Feedback: " & ActiveDocument.Comments(c).Range.Text
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RemoveAllComments()
Dim n As Long
Dim oComments As Comments
Set oComments = ActiveDocument.Comments
For n = oComments.Count To 1 Step -1
        oComments(n).Delete
Next 'n
Set oComments = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Commentslist()
Dim n As Long
Dim oComments As Comments
Set oComments = ActiveDocument.Comments
For n = oComments.Count To 1 Step -1
        If oComments(n).Date > #2/29/2016# Then
                xc = xc + 1
                Debug.Print xc & " " & oComments(n).Range.Text & " (" & oComments(n).Author & " " & oComments(n).Date & ")"
                
        End If
        
Next 'n
Set oComments = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1()
x = "1=UserFormOutlookXZXZXZ, 2=UserFormInputOutput"
x = InputBox(x, x, x)
If x = 1 Then UserFormOutlookXZXZXZ.Show
        If x = 2 Then UserFormInputOutput.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub CreateAppt()
Dim myItem As Object
Dim myRequiredAttendee, myOptionalAttendee, myResourceAttendee As Outlook.Recipient
xtext1 = "DIARY: Meeting at location at time with person re subject"
xtext2 = "Regards, XZXZXZ0XZXZXZXZXZXZ051 Email XZXZXZ@XZXZXZXZXZXZXZXZXZ.com"
xtext3 = "(Copied to my other diaries)"
xtext4 = "T.XZXZXZ@HEALTH.GOV.JE; t.XZXZXZ@gov.je; XZXZXZ@XZXZXZXZXZXZXZXZXZ.com; tim.XZXZXZ@XZXZXZi.co; XZXZXZ@XZXZXZ.com"
Dim appOL As Object
Dim objReminder As Object
Set appOL = GetObject(, "Outlook.application")
Set myItem = appOL.CreateItem(olAppointmentItem)
myItem.MeetingStatus = olMeeting
myItem.Subject = xtext1
myItem.Body = xtext1 & vbCrLf & xtext2 & vbCrLf & xtext3
myItem.Location = ""
myItem.Start = #9/24/2009 1:30:00 PM#
myItem.Start = Now()
myItem.Duration = 90
Set myRequiredAttendee = myItem.Recipients.Add("Nate Sun")
Set myRequiredAttendee = myItem.Recipients.Add(xtext4)
myRequiredAttendee.Type = olRequired
Set myOptionalAttendee = myItem.Recipients.Add("Kevin Kennedy")
Set myOptionalAttendee = myItem.Recipients.Add(xtext3)
myOptionalAttendee.Type = olOptional
Set myResourceAttendee = myItem.Recipients.Add(xtext3)
myResourceAttendee.Type = olResource
myItem.Display
myItem.Send
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xsaveas()
fname1 = ActiveDocument.Path & "\" & ActiveDocument.Name
xdate = Format(Now, "yymmdd")
fname2 = Replace(fname1, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=fname2, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
ActiveDocument.SaveAs FileName:=fname1, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST()
Debug.Print ActiveDocument.Path & "\" & ActiveDocument.Name
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub saveas_float()
xpath = ActiveDocument.Path & "\"
xdate = Format(Now, "yyyymmdd")
xname = xpath & ActiveDocument.Name
xname2 = Replace(xname, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=xname2
ActiveDocument.SaveAs FileName:=xname
x = xpath
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub saveas_timed()
xpath = ActiveDocument.Path & "\"
xdate = Format(Now, "yyyymmdd HHMM")
xname = xpath & ActiveDocument.Name
xname2 = Replace(xname, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=xname2
ActiveDocument.SaveAs FileName:=xname
x = xpath
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_resize()
Dim i As Long
With ActiveDocument
For i = 1 To .InlineShapes.Count
        With .InlineShapes(i)
        .ScaleHeight = 50
        .ScaleWidth = 50
        End With
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ScalePictures40()
Dim i As Long
With ActiveDocument
For i = 1 To .InlineShapes.Count
        With .InlineShapes(i)
        .ScaleHeight = 40
        .ScaleWidth = 40
        End With
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AA_addautotext()
http://msdn.microsoft.com/en-us/library/office/ff195437.aspx
NormalTemplate.AutoTextEntries("#test1").Value = "The Johnson Company"
Dim XAUTOTEXT_HANDLE As String
Dim p As Integer
XAUTOTEXT_HANDLE = "#zz" 'Left(Trim(Selection.Range), 4)
p = InStr(1, Selection.Range, ".")
XAUTOTEXT_HANDLE = Left(Trim(Selection.Range), p)
MsgBox XAUTOTEXT_HANDLE
NormalTemplate.AutoTextEntries.Add Name:=XAUTOTEXT_HANDLE, Range:=Selection.Range
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub vba_export_modules_V()
#http://www.cpearson.com/Excel/VBE.aspx
 reference to extensibility library
xprefix = "V:\Data2017\VBA\VBAWord\vba_"
Dim objMyProj As VBProject
Dim objVBComp As VBComponent
Set objMyProj = Application.VBE.ActiveVBProject
For Each objVBComp In objMyProj.VBComponents
        If objVBComp.Type = vbext_ct_StdModule Then
                
                
                'xprefix = "V:\Data2016\VBA\VBAWord\word_"
                objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".bas"
                objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
                'xprefix = "V:\Data2016\VBA\VBAWord\word_"
                objVBComp.Export xprefix & objVBComp.Name & ".bas"
                objVBComp.Export xprefix & objVBComp.Name & ".txt"
                
                Debug.Print xprefix
                
        End If
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ListAutoText()
Dim oAutoText   As Word.AutoTextEntry
With Application
 \\ Turn screenupdating off
.ScreenUpdating = False
 \\ Add new document
.Documents.Add
 \\ Loop through all Autotext entries in Normal.dot
For Each oAutoText In NormalTemplate.AutoTextEntries
        ' \\ Work with selection
        With .Selection
        ' \\ Make all Autotext names Bold
        .Font.Bold = True
        .TypeText Text:=oAutoText.Name
        .TypeParagraph ' \\ Insert Para
        
        ' \\ Turn of Bold for the Autotext entries
        .Font.Bold = False
        ' \\ Insert entry
        oAutoText.Insert Where:=.Range, RichText:=True
        
        ' \\ Insert two paragraphs
        .TypeParagraph
        .TypeText Text:="==============================================="
        .TypeParagraph
        End With
        Next
        
        ' \\ Turn screenupdating back on
        .ScreenUpdating = True
        End With
        xdate = Format(Now, "yyyymmdd")
        fname = "V:\Data2017\VBA\VBAWord\word_autotext_backup" & xdate & ".docx"
        ActiveDocument.SaveAs FileName:=fname
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function halfdays(x)
halfdays = Int(x)
If x > Int(x) + 0.49 Then halfdays = Int(x) + 0.5
        
End Function
Call ports2013_headings_multi_function("Normal", "Calibri", 11, "", wdBlue)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub bold_2hyphen()
Dim oPara As Paragraph
Dim xpos As Integer
For Each oPara In ActiveDocument.Paragraphs
For Each oPara In Selection.Paragraphs
        Debug.Print oPara.Range.Text
        '      If oPara.Range.Words(2).Characters(1) = ":" Then
        oPara.Range.Words(1).Font.Bold = True
        xpos = InStr(1, oPara.Range.Text, "-")
        For c = 1 To xpos
                oPara.Range.Characters(c).Font.Bold = True
        Next c
        '     End If
Next oPara
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub bold_firstword()
Dim oPara As Paragraph
For Each oPara In ActiveDocument.Paragraphs
For Each oPara In Selection.Paragraphs
        
        '      If oPara.Range.Words(2).Characters(1) = ":" Then
        oPara.Range.Words(1).Font.Bold = True
        oPara.Range.Characters(2).Font.Bold = False
        '     End If
Next oPara
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_XZXZXZd()
xfont = "Arial"
XSIZE = 10
fnormal = 11
Call set2016_headings("Heading 1", xfont, 14, "bold", wdBlack)
Call set2016_headings("Heading 2", xfont, 12, "bold", wdBlue)
Call set2016_headings("Heading 3", xfont, 12, "", wdBlack)
Call set2016_headings("Heading 4", xfont, fnormal, "", wdBlack)
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_XZXZXZ()
xfont = "Calibri"
XSIZE = 11
fnormal = 11
Call set2016_headings("Heading 1", xfont, 16, "bold", wdTeal)
Call set2016_headings("Heading 2", xfont, 13, "bold", wdTeal)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_jcsl()
xfont = "Century Gothic"
XSIZE = 10
fnormal = 10
Call set2016_headings("Heading 1", xfont, 14, "bold", wdTeal)
Call set2016_headings("Heading 2", xfont, 13, "bold", wdTeal)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_XZXZXZ()
xfont = "Calibri"
XSIZE = 11
fnormal = 11
xcolor = RGB(214, 0, 147)
XCOLOR = RGB(214, 0, 1)
Call set2016_headings("Heading 1", xfont, 14, "bold", xcolor)
Call set2016_headings("Heading 2", xfont, 12, "bold", xcolor)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_tbs()
xfont = "Calibri"
XSIZE = 11
fnormal = 11
Call set2016_headings("Heading 1", xfont, 14, "bold", wdViolet)
Call set2016_headings("Heading 2", xfont, 12, "bold", wdViolet)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD()
For p = 1 To ActiveDocument.Paragraphs.Count
        
        If ActiveDocument.Paragraphs(p).Range.Information(wdWithInTable) Then
                'What ever you'd like to do
                'skip
                Else
                
                
                If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                        xtext = ActiveDocument.Paragraphs(p).Range.Text
                        If UCase(xtext) = xtext Then
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 128, 128)
                                
                                If InStr(1, UCase(xtext), UCase("Appendix")) Then
                                        ActiveDocument.Paragraphs(p).Range.Font.Size = 14
                                End If
                                
                                
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                End If
                
        End If
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub upper_banner()
For p = 1 To ActiveDocument.Paragraphs.Count
        If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                        If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 80, 80) ' RGB(255, 0, 0)
                                ' Selection.Shading.ForegroundPatternColor = wdColorAutomatic
                                ActiveDocument.Paragraphs(p).Range.Shading.BackgroundPatternColor = -671023258 '-671023207
                                
                                
                                Else
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                End If
        End If
        
        
Next p
 Selection.Shading.Texture = wdTextureNone
 Selection.Shading.ForegroundPatternColor = wdColorAutomatic
 Selection.Shading.BackgroundPatternColor = -671023207
 Selection.Shading.Texture = wdTextureNone
 Selection.Shading.ForegroundPatternColor = wdColorAutomatic
 Selection.Shading.BackgroundPatternColor = -671023258
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD_red()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range.Text
        If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                        
                        
                        If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
                                Else
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 80, 80)
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                        
                        If InStr(1, UCase(xtext), UCase("APPENDIX")) Then ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                        End If
                End If
                
                
        Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD_infuse()
infuse = RGB(73, 23, 109)
For p = 1 To ActiveDocument.Paragraphs.Count
        
        
        If ActiveDocument.Paragraphs(p).Range.Information(wdWithInTable) Then
                'What ever you'd like to do
                'skip
                Else
                xtext = ActiveDocument.Paragraphs(p).Range.Text
                If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                        If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                                
                                
                                If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                        ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                        ActiveDocument.Paragraphs(p).Range.Font.Color = infuse
                                        ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                                        
                                        Else
                                        ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                        ActiveDocument.Paragraphs(p).Range.Font.Color = infuse
                                        Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                                End If
                                
                                If InStr(1, UCase(xtext), UCase("APPENDIX")) Then ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                                End If
                        End If
                        
                End If
        Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_format_text()
text_to_find = "1234567890"
For p = 1 To ActiveDocument.Paragraphs.Count
        found_text = Left(ActiveDocument.Paragraphs(p).Range.Text, 1)
        If InStr(1, text_to_find, found_text) Then
                
                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
                ActiveDocument.Paragraphs(p).Range.Font.Size = 16
                
        End If
        
        
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_legal_para()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range.Text
        
        For q = 1 To 9
                If Left(xtext, 1) = CStr(q) Then
                        ActiveDocument.Paragraphs(p).Range.Text = "~" & ActiveDocument.Paragraphs(p).Range.Text
                End If
        Next q
        x = 0
        looktext = Left(Trim(xtext), 6)
        x = count_find(looktext, ".")
        
        If x = 2 Then
                ActiveDocument.Paragraphs(p).Range.Text = "~" & vbTab & ActiveDocument.Paragraphs(p).Range.Text
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 200, 0)
                Debug.Print looktext, x, ActiveDocument.Paragraphs(p).Range.Text
        End If
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function count_find(xtext, thingtofind)
Dim xc As Integer
xc = 0
For c = 1 To Len(xtext)
        If Mid(xtext, c, 1) = thingtofind Then xc = xc + 1
        Next c
        count_find = xc
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_extract_text()
text_to_find = "Appendix"
For p = 1 To ActiveDocument.Paragraphs.Count
        If InStr(1, ActiveDocument.Paragraphs(p).Range.Text, text_to_find) Then
                xc = xc + 1
                x = x & " " & xc & ". " & ActiveDocument.Paragraphs(p).Range.Text & vbCrLf
                '' ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
        End If
        
        
        
Next p
Z = Replace(x, Chr(13), "")
Z = Replace(Z, text_to_find, ",  ")
Debug.Print x
Debug.Print LCase(Z)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_JRC()
xfont = "Calibri"
fnormal = 11
Call set2016_headings("Heading 1", xfont, 14, "bold", wdRed)
Call set2016_headings("Heading 2", xfont, 12, "bold", "")
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function set2016_headings(xstyle, xfont, XSIZE, xbold, xcolor)
With ActiveDocument.Styles(xstyle).Font
.Name = xfont
.Size = XSIZE
.Bold = False
.Italic = False
If Len(xbold) > 1 Then .Bold = True
        
        'http://dmcritchie.mvps.org/excel/colors.htm
        .ColorIndex = wdBlack
        .ColorIndex = wdBlack
        
        
        If Len(xcolor) > 0 Then
                If xcolor > 10 Then
                        .Color = xcolor
                        Else
                        .ColorIndex = xcolor
                End If
        End If
        
        
        End With
        xindent = 0
        If xstyle = "Heading 1" Then xindent = 0
                If xstyle = "Heading 2" Then xindent = 0
                        If xstyle = "Heading 3" Then xindent = 2
                                If xstyle = "Heading 4" Then xindent = 3
                                        
                                        With ActiveDocument.Styles(xstyle).ParagraphFormat
                                        .LeftIndent = CentimetersToPoints(xindent)
                                        .RightIndent = CentimetersToPoints(0)
                                        .FirstLineIndent = CentimetersToPoints(1.5)
                                        
                                        .TabStops.ClearAll
                                        
                                        .SpaceBefore = 0
                                        .SpaceBeforeAuto = False
                                        .SpaceAfter = 0
                                        .SpaceAfterAuto = False
                                        .LineSpacingRule = wdLineSpace0pt0
                                        .Alignment = wdAlignParagraphLeft
                                        .WidowControl = True
                                        .KeepWithNext = False
                                        .KeepTogether = False
                                        .PageBreakBefore = False
                                        .NoLineNumber = False
                                        .Hyphenation = True
                                        .FirstLineIndent = CentimetersToPoints(0)
                                        .OutlineLevel = wdOutlineLevelBodyText
                                        .CharacterUnitLeftIndent = 0
                                        .CharacterUnitRightIndent = 0
                                        
                                        .LineUnitBefore = 0
                                        .LineUnitAfter = 0
                                        .MirrorIndents = False
                                        .TextboxTightWrap = wdTightNone
                                        End With
                                        
                                        
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test01()
Call attach_word_file
Call attach_excel_file
Call attach_ppt_file
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_word_file()
fname = "H:\XZXZXZD_ReOrg\Updates\XZXZXZD_ReDesign_Update No001.docx"
xlabel = "XZXZXZD_ReDesign_Update No001.docx"
Selection.InlineShapes.AddOLEObject ClassType:="Word.Document.12", _
FileName:=fname, _
LinkToFile:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\PROGRA~1\MICROS~2\Office12\Moc.exe", IconIndex:=7, IconLabel:= _
xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_excel_file()
fname = "H:\XZXZXZD_ReOrg\Initiation\XZXZXZD Governance Stakeholder Map v1.xlsm"
xlabel = "XZXZXZD Governance Stakeholder Map v1.xlsm"
Selection.InlineShapes.AddOLEObject ClassType:= _
"Excel.SheetMacroEnabled.12", FileName:= _
fname, _
LinkToFile:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\PROGRA~1\MICROS~2\Office12\Moc.exe", IconIndex:=10, IconLabel:= _
xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_ppt_file()
fname = "H:\XZXZXZD_ReOrg\Initiation\XZXZXZD_Initiation_Presentation.pptm"
xlabel = "XZXZXZD_Initiation_Presentation.pptm"
Selection.InlineShapes.AddOLEObject ClassType:= _
"PowerPoint.ShowMacroEnabled.12", FileName:= _
fname, LinkToFile _
:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\WINDOWS\Installer\{90120000-0011-0000-0000-0000000FF1CE}\pptico.exe", _
IconIndex:=19, IconLabel:=xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF2PRINT()
ppath = "z:\print" & "\" & ActiveDocument.Name
ppath = Replace(ppath, ".docx", ".pdf")
ppath = Replace(ppath, ".doc", ".pdf")
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
Call DeleteFile(FName)
ActiveDocument.ExportAsFixedFormat OutputFileName:= _
fname _
, ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
wdExportOptimizeForOnScreen, Range:=wdExportAllDocument, From:=1, To:=1, _
Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
BitmapMissingFonts:=True, UseISO19005_1:=False
 ChangeFileOpenDirectory "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\"
 MsgBox "DONE"
x = fname
FileCopy fname, ppath
x = InputBox(x, x, x)
x = InputBox(ppath, ppath, ppath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF2parent_dir()
newpath = getParentFolder2(ActiveDocument.Path & "\") & "\"
oldpath = ActiveDocument.Path & "\"
Call PDF
fname = ActiveDocument.Name
fname = Replace(fname, ".docm", ".pdf")
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
FileCopy oldpath & fname, newpath & fname
ReturnValue = Shell("explorer.EXE " & newpath, 1)  ' Run Calculator.
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function getParentFolder2(ByVal strFolder0)
Dim strFolder
strFolder = Left(strFolder0, InStrRev(strFolder0, "\") - 1)
getParentFolder2 = Left(strFolder, InStrRev(strFolder, "\") - 1)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF()
fname = "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\Contract Committment Trail (KPMG).pdf"
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
fname = Replace(fname, ".docm", ".pdf")
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
Call DeleteFile(FName)
ActiveDocument.ExportAsFixedFormat OutputFileName:= _
fname _
, ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
wdExportOptimizeForOnScreen, Range:=wdExportAllDocument, From:=1, To:=1, _
Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
BitmapMissingFonts:=True, UseISO19005_1:=False
 ChangeFileOpenDirectory "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\"
 MsgBox "DONE"
x = fname
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function FileExists(ByVal FileToTest As String) As Boolean
FileExists = (Dir(FileToTest) <> "")
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub DeleteFile(ByVal FileToDelete As String)
If FileExists(FileToDelete) Then 'See above
        SetAttr FileToDelete, vbNormal
        Kill FileToDelete
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp()
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
Debug.Print fname
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub zzdir_html()
Dim MyFile As String
Dim Counter As Long
xpath = ActiveDocument.Path & "\"
xpath = InputBox(xpath, xpath, xpath)
Dim DirectoryListArray() As String
ReDim DirectoryListArray(1000)
website = "http://www.XZXZXZXZXZXZcompany.com/JIBS/"
website = InputBox(website, website, website)
website = ""
Counter = 1
MyFile = Dir$("c:\temp\*.*")
MyFile = Dir$(xpath & "*.*")
MyFile = Dir$(xpath & "app*.*")
Do While MyFile <> ""
        DirectoryListArray(Counter) = MyFile
        
        
        
        xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
        'xtext2 = xtext2 & xpath & MyFile & vbCrLf
        Debug.Print MyFile
        MyFile = Dir$
        Counter = Counter + 1
        Loop
        xtext3 = xtext1 & vbCrLf & xtext2
        fname = xpath & "display.html"
        Call PRINT_INFO(xtext3, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub zzdir_pdf()
Dim MyFile As String
Dim Counter As Long
xpath = ActiveDocument.Path & "\"
xpath = InputBox(xpath, xpath, xpath)
Dim DirectoryListArray() As String
ReDim DirectoryListArray(10000)
website = "http://www.XZXZXZXZXZXZcompany.com/JIBS/"
website = InputBox(website, website, website)
website = ""
Counter = 1
MyFile = Dir$("c:\temp\*.*")
MyFile = Dir$(xpath & "*.*")
MyFile = Dir$(xpath & "app*.*")
Do While MyFile <> ""
        DirectoryListArray(Counter) = MyFile
        
        If InStr(1, UCase(MyFile), UCase("PDF")) Then
                'xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
                'xtext2 = xtext2 & xpath & MyFile & vbCrLf
                xtext2 = xtext2 & MyFile & vbCrLf
        End If
        
        If InStr(1, UCase(MyFile), UCase("DOC")) Then
                'xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
                'xtext2 = xtext2 & xpath & MyFile & vbCrLf
                xtext3 = xtext3 & MyFile & vbCrLf
        End If
        
        Debug.Print MyFile
        MyFile = Dir$
        Counter = Counter + 1
        Loop
        xtext3 = xtext1 & vbCrLf & xtext2 & vbCrLf & xtext3
        fname = xpath & "zzdir.txt"
        Call PRINT_INFO(xtext3, fname)
End Sub
Attribute VB_Name = "WORD2BLOG"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_old()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = xtext & ActiveDocument.Paragraphs(p).Range.Text & vbCrLf
Next p
fname = ActiveDocument.Path & "\temptext.txt"
Call PRINT_INFO(xtext, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_Blog_Word_Linked()
x = "[B]logger or [W]ordpress or [L]linked_in"
x = InputBox(x, x, x)
x = LCase(x)
xnewline = vbCrLf ' for blogger
If x = "w" Then xnewline = Chr(10) ' for wordpress
        If x = "b" Then xnewline = vbCrLf & "<br/>" ' for blogger
                If x = "l" Then xnewline = "" ' for linkedin
                        
                        For p = 1 To ActiveDocument.Paragraphs.Count
                                line2add = ActiveDocument.Paragraphs(p).Range.ListStyle
                                
                                line2add = ActiveDocument.Paragraphs(p).Range.ListFormat.ListString
                                line2add = line2add & ActiveDocument.Paragraphs(p).Range.Text
                                
                                If ActiveDocument.Paragraphs(p).Range.Font.Italic = True Then
                                        If (x = "b" And Len(line2add) > 2) Then line2add = "<i>" & line2add & "</i>"
                                        End If
                                        
                                        If line2add = UCase(line2add) Then
                                                If (x = "b" And Len(line2add) > 2) Then line2add = "<b>" & line2add & "</b>"
                                                End If
                                                
                                                xtext = xtext & line2add & xnewline
                                        Next p
                                        
                                        
                                        If x = "l" Then
                                                xtext = Replace(xtext, Chr(10), vbCrLf)
                                                xtext = Replace(xtext, Chr(12), vbCrLf)
                                                xtext = Replace(xtext, Chr(13), vbCrLf)
                                                xtext = Replace(xtext, vbCrLf & vbCrLf, vbCrLf)
                                        End If
                                        fname = ActiveDocument.Path & "\temptext.txt"
                                        Call PRINT_INFO(xtext, fname)
                                        FileCopy fname, Replace(fname, ".txt", ".html")
                                        Debug.Print ActiveDocument.Path
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_html_XZXZXZwebpage()
b1 = "<b style='color: #008080;'>"
b2 = "</b>"
h11 = "<h1 style='color: #008080;'>"
h12 = "</h1>"
For p = 1 To ActiveDocument.Paragraphs.Count
        XLINE = ActiveDocument.Paragraphs(p).Range.Text
        XLINE = Trim(XLINE)
        XLINE = Replace(XLINE, Chr(13), "")
        
        If p = 1 Then xtext = xtext & h11 & XLINE & h12 & vbCrLf
                
                
                If UCase(XLINE) = XLINE And Len(XLINE) > 3 Then
                        xtext = xtext & b1 & XLINE & b2 & vbCrLf
                        ElseIf InStr(1, XLINE, "Case Study") Then
                        xtext = xtext & h11 & XLINE & h12 & vbCrLf
                        Else
                        xtext = xtext & XLINE & "<BR>" & vbCrLf
                End If
                
                
                
                
                
        Next p
        fname = ActiveDocument.Path & "\temptext.txt"
        Call PRINT_INFO(xtext, fname)
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_html()
b1 = "<b style='color: red;'>"
b2 = "</b>"
h11 = "<h1 style='color: red;'>"
h12 = "</h1>"
For p = 1 To ActiveDocument.Paragraphs.Count
        XLINE = ActiveDocument.Paragraphs(p).Range.Text
        XLINE = Trim(XLINE)
        XLINE = Replace(XLINE, Chr(13), "")
        
        If p = 1 Then xtext = xtext & h11 & XLINE & h12 & vbCrLf
                
                If UCase(XLINE) = XLINE And Len(XLINE) > 3 Then
                        xtext = xtext & b1 & XLINE & b2 & vbCrLf
                        Else
                        xtext = xtext & XLINE & "<BR>" & vbCrLf
                End If
                
                
                
                
                
        Next p
        fname = ActiveDocument.Path & "\temptext.txt"
        Call PRINT_INFO(xtext, fname)
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function TRFMT(x)
xx = ""
x = tr_regex(x)
x = Replace(x, Chr(13), xx)
x = Replace(x, Chr(10), xx)
x = Replace(x, Chr(12), xx)
x = Replace(x, Chr(11), xx)
X = Replace(X, Chr(13), "!13!")
X = Replace(X, Chr(10), "!10!")
X = Replace(X, Chr(12), "!12!")
X = Replace(X, Chr(11), "!11!")
If InStr(1, UCase(Trim(x)), UCase("http")) Then
        X = "<a href=" & X & ">" & Trim(X) & "</a>" '/// using regex instead
End If
If x = UCase(x) Then
        If Len(x) > 2 Then
                x = "<b>" & Trim(x) & "</b>"
        End If
End If
TRFMT = Trim(x)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_html(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_html(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_html(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("explorer.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub tr_regex_URLtest()
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex_url(x)
Debug.Print y
Debug.Print "======================================"
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex_email(x)
Debug.Print y
Debug.Print "======================================"
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex(x)
Debug.Print y
Debug.Print "======================================"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex(xinput_string)
x = xinput_string
x = tr_regex_url(x)
x = tr_regex_email(x)
tr_regex = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex_url(xinput_string)
Dim reg
Dim rng As Range, i As Long, j As Long
Dim mtch, mt, tmpStr As String
Set reg = CreateObject("vbscript.regexp")
With reg
.IgnoreCase = True
.MultiLine = False
http://regexlib.com/Search.aspx?k=url&AspxAutoDetectCookieSupport=1
.Pattern = "(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?"
 .Pattern = "[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}"
.Global = True
End With
Set mtch = reg.Execute(xinput_string)
xoutput_string = xinput_string
For Each mt In mtch ' what you want to change
        now change the output string by find and replace stuff for each match of what you want to change
        xoutput_string = Replace(xoutput_string, mt, "<a href=" & mt & ">" & mt & "</a>" & vbCrLf)
Next mt
tr_regex_url = xoutput_string
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex_email(xinput_string)
Dim reg
Dim rng As Range, i As Long, j As Long
Dim mtch, mt, tmpStr As String
Set reg = CreateObject("vbscript.regexp")
With reg
.IgnoreCase = True
.MultiLine = False
http://regexlib.com/Search.aspx?k=url&AspxAutoDetectCookieSupport=1
.Pattern = "(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?"
.Pattern = "[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}"
.Global = True
End With
Set mtch = reg.Execute(xinput_string)
xoutput_string = xinput_string
For Each mt In mtch ' what you want to change
        now change the output string by find and replace stuff for each match of what you want to change
        xoutput_string = Replace(xoutput_string, mt, "<a href=mailto:" & mt & ">" & mt & "</a>" & vbCrLf)
Next mt
tr_regex_email = xoutput_string
End Function
Attribute VB_Name = "xfit_tables"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AutoFitToWind()
Selection.WholeStory
Selection.Font.Size = 9
Dim tbl As Table
Dim tbl2 As Table
For Each tbl In ActiveDocument.Tables
        tbl.AutoFitBehavior wdAutoFitWindow
        For Each tbl2 In ActiveDocument.Tables
                tbl2.AutoFitBehavior wdAutoFitWindow
                
                
        Next tbl2
        
Next tbl
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub VBA_WORD_FORMAT_SUBTABLES()
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(t).AutoFitBehavior wdAutoFitWindow
        
        
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                
                Next
                
                
                Next
                
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST_movewithtext()
For t = 1 To ActiveDocument.Tables.Count
        With ActiveDocument.Tables(t).Rows
        .WrapAroundText = True
        .HorizontalPosition = wdTableLeft
        .RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
        .DistanceLeft = CentimetersToPoints(0.32)
        .DistanceRight = CentimetersToPoints(0.32)
        .VerticalPosition = CentimetersToPoints(0)
        .RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
        .DistanceTop = CentimetersToPoints(0)
        .DistanceBottom = CentimetersToPoints(0)
        .AllowOverlap = False
        End With
        
Next t
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TESTt2()
With Selection.Tables(1).Rows
.WrapAroundText = True
.HorizontalPosition = wdTableLeft
.RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
.DistanceLeft = CentimetersToPoints(0.32)
.DistanceRight = CentimetersToPoints(0.32)
.VerticalPosition = CentimetersToPoints(0)
.RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
.DistanceTop = CentimetersToPoints(0)
.DistanceBottom = CentimetersToPoints(0)
.AllowOverlap = False
End With
End Sub
Attribute VB_Name = "TABLE_FONT_HTML"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub STEP3_A3FORMAT_SUBTABLES_a4()
Z = 260
ActiveDocument.Tables(1).Columns(1).Width = Z ' COL1
ActiveDocument.Tables(1).Columns(2).Width = Z ' COL2
ActiveDocument.Tables(1).Columns(3).Width = Z ' COL3
On Error Resume Next
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                '    ActiveDocument.Tables(T).Tables(Z).AutoFitBehavior wdAutoFitContent
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                
                
                Next
                
                ' ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitWindow
                'ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitContent
                
                
                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub STEP3_A3FORMAT_SUBTABLES_a3()
Z = 370
ActiveDocument.Tables(1).Columns(1).Width = Z ' COL1
ActiveDocument.Tables(1).Columns(2).Width = Z ' COL2
ActiveDocument.Tables(1).Columns(3).Width = Z ' COL3
On Error Resume Next
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                '    ActiveDocument.Tables(T).Tables(Z).AutoFitBehavior wdAutoFitContent
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                '######
                ' Loop through each row in the table.
                For Each oRow In ActiveDocument.Tables(t).Tables(Z).Rows
                        
                        ' Loop through each cell in the current row.
                        For Each oCell In oRow.Cells
                                ' Set sCellText equal to text of the cell.
                                ' Note: This section can be modified to suit
                                ' your programming purposes.
                                sCellText = oCell.Range
                                If Left(sCellText, 5) = "GREEN" Then oCell.Range.Shading.ForegroundPatternColor = RGB(0, 222, 0)
                                        If Left(sCellText, 5) = "GREEN" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                
                                                If Left(sCellText, 5) = "AMBER" Then oCell.Range.Shading.ForegroundPatternColor = RGB(255, 102, 0)
                                                        If Left(sCellText, 5) = "AMBER" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                                
                                                                
                                                                If Left(sCellText, 3) = "RED" Then oCell.Range.Shading.ForegroundPatternColor = RGB(222, 0, 0)
                                                                        If Left(sCellText, 3) = "RED" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                                                
                                                                                ' Remove table cell markers from the text.
                                                                                'sCellText = Left$(sCellText, Len(sCellText) - 2)
                                                                                'MsgBox sCellText
                                                                                
                                                                        Next oCell
                                                                        
                                                                Next oRow
                                                                '######
                                                                
                                                                Next
                                                                
                                                                ' ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitWindow
                                                                'ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitContent
                                                                
                                                                
                                                                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RetrieveTableItems()
Dim oRow As Row
Dim oCell As Cell
Dim sCellText As String
 Turn on error checking.
On Error GoTo ErrorHandler
For Each tbl In ActiveDocument.Tables
        x = x + 1
        ' Loop through each row in the table.
        For Each oRow In ActiveDocument.Tables(x).Rows
                
                ' Loop through each cell in the current row.
                For Each oCell In oRow.Cells
                        ' Set sCellText equal to text of the cell.
                        ' Note: This section can be modified to suit
                        ' your programming purposes.
                        sCellText = oCell.Range
                        ' Debug.Print sCellText
                        oCell.Range.Font.Size = 10
                        
                        oCell.Range.Font.ColorIndex = 1
                        ' Remove table cell markers from the text.
                        ' sCellText = Left$(sCellText, Len(sCellText) - 2)
                        'MsgBox sCellText
                        
                Next oCell
                
        Next oRow
Next ' TABLE
ErrorHandler:
If Err <> 0 Then
        Dim Msg As String
        Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description _
        & Chr(13) & "Make sure there is a table in the current document."
        MsgBox Msg, , "Error"
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub color_cells()
Dim oRow As Row
Dim oCell As Cell
Dim sCellText As String
 Turn on error checking.
On Error GoTo ErrorHandler
For Each tbl In ActiveDocument.Tables
        x = x + 1
        ' Loop through each row in the table.
        For Each oRow In ActiveDocument.Tables(x).Rows
                
                ' Loop through each cell in the current row.
                For Each oCell In oRow.Cells
                        ' Set sCellText equal to text of the cell.
                        ' Note: This section can be modified to suit
                        ' your programming purposes.
                        sCellText = oCell.Range
                        ' Debug.Print sCellText
                        ' oCell.Range.Font.ColorIndex = 1
                        If Left(sCellText, 5) = "AMBER" Then oCell.Range.Font.TextColor = RGB(222, 0, 0)
                                
                                If InStr(1, sCellText, "AMBER") Then oCell.Range.Shading.ForegroundPatternColor = RGB(5, 55, 880)
                                        If InStr(1, sCellText, "AMBER") Then oCell.Range.Font.TextColor = RGB(222, 0, 0)
                                                
                                                
                                                
                                                oCell.Range.Font.Size = 10
                                                
                                                
                                                
                                                ' Remove table cell markers from the text.
                                                ' sCellText = Left$(sCellText, Len(sCellText) - 2)
                                                'MsgBox sCellText
                                                
                                        Next oCell
                                        
                                Next oRow
                        Next ' TABLE
                        ErrorHandler:
                        If Err <> 0 Then
                                Dim Msg As String
                                Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description _
                                & Chr(13) & "Make sure there is a table in the current document."
                                MsgBox Msg, , "Error"
                        End If
                        
End Sub
Attribute VB_Name = "header_footer_imagex"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub header_footer_image()
Call EditHeadersAndFooters
Call Insert_SqWrap_Image ' InsertImage
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub EditHeadersAndFooters()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = "ISO 14001 2015 ENVIRONMENTAL MANAGEMENT"
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 22
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub EditHeadersAndFooters_tri()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZ.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub EditHeadersAndFooters_XZXZXZ()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImage()
Dim imagePath As String
imagePath = "C:\\picture.jpg"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, _
LinkToFile:=False, _
SaveWithDocument:=True, _
Left:=370, _
Top:=-30, _
Anchor:=Selection.Range, _
Width:=60, _
Height:=60
Anchor:=Selection.Range, _
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Insert_SqWrap_Image()
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
With shp
.WrapFormat.Type = wdWrapSquare
.Left = 380
.Top = -50
.Width = 70
.Height = 70
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AddImageToHeader()
PURPOSE: Insert an image into a Word document heading
SOURCE: www.TheSpreadsheetGuru.com
Dim SrcePath As String
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\x1i-GEQY.png"
ThisDocument.Sections.Item(1).Headers(wdHeaderFooterPrimary) _
.Range.InlineShapes.AddPicture (SrcePath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Word_Insert_Image_in_Header()
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim oWD As Word.Document
Set oWD = ActiveDocument
With oWD.Sections(1)
.Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
.Headers(wdHeaderFooterPrimary).Range.Text = "Text as Header"
 .Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphRight
 .Headers(wdHeaderFooterPrimary).Range.InlineShapes.AddPicture SrcePath
End With
End Sub
Public Function ChangeHeadersAndFooters()
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .Headers(wdHeaderFooterPrimary).LinkToPrevious = True
        .Headers(wdHeaderFooterPrimary).Range.Text = "Koptekst vanaf pagina 2"
        .Footers(wdHeaderFooterPrimary).Range.Text = "Voettekst vanaf pagina 2"
        End With
Next i
ActiveDocument.Sections(1).PageSetup.DifferentFirstPageHeaderFooter = True
ActiveDocument.Sections(1).Headers(wdHeaderFooterFirstPage).Range.Text = "test"
With ActiveDocument.Sections(1)
.PageSetup.DifferentFirstPageHeaderFooter = True
.Headers(wdHeaderFooterFirstPage).LinkToPrevious = False
.Headers(wdHeaderFooterFirstPage).Range.Text = "eerste pagina koptekst"
.Footers(wdHeaderFooterFirstPage).Range.Text = "eerste pagina voettekst"
End With
Attribute VB_Name = "temp_buttons"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button1()
Call name_doc
Call EditHeadersAndFooters_tri
Call PDF
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button2()
Call quote_cal_12_blk
Call EditHeadersAndFooters_XZXZXZ
Call PDF
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button3()
Call header_footer_image
Selection.Font.Size = 10
Selection.Font.Name = "Calibri"
Selection.Font.ColorIndex = wdBlack
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button4()
Call header_footer_image
Call PDFtext.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button8()
With Selection.Tables(1).Rows
.WrapAroundText = True
.HorizontalPosition = wdTableLeft
.RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
.DistanceLeft = CentimetersToPoints(0.32)
.DistanceRight = CentimetersToPoints(0.32)
.VerticalPosition = CentimetersToPoints(0)
.RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
.DistanceTop = CentimetersToPoints(0)
.DistanceBottom = CentimetersToPoints(0)
.AllowOverlap = False
End With
End Sub
Attribute VB_Name = "word_templates_opath"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ChangeAttachedTemplate()
Dim oDoc As Document  'make sure you're getting info on the right document
Set oDoc = ActiveDocument
If oDoc.Type = wdTypeTemplate Then Exit Sub
        Dim oTemplate As Template
        Dim strTemplatePath
        Set oTemplate = oDoc.AttachedTemplate
        If InStr(UCase(oTemplate.FullName), "OLDPATH") > 0 Then
                oDoc.AttachedTemplate = "FULLNEWPATH" & oTemplate.Name
        End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub FindTemplate()
MsgBox ThisDocument.AttachedTemplate.FullName
MsgBox ActiveDocument.AttachedTemplate.FullName
x = ActiveDocument.AttachedTemplate.FullName
Debug.Print x
End Sub
Attribute VB_Name = "temp_nameword"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub name_doc()
For p = 1 To ActiveDocument.Paragraphs.Count
        
        
        x = x & ActiveDocument.Paragraphs(p).Range.Text
        
        If Len(x) > 50 Then Exit For
                
        Next p
        For q = 1 To 47
                x = Replace(x, Chr(q), " ")
                x = Replace(x, "  ", " ")
        Next q
        For q = 58 To 64
                x = Replace(x, Chr(q), " ")
                x = Replace(x, "  ", " ")
        Next q
        fname = ActiveDocument.Path & "\CMI_" & Trim(x)
        Debug.Print fname
        
        ActiveDocument.SaveAs FileName:=fname
End Sub
Attribute VB_Name = "XFINDANDREPLACE"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST()
XFIND = "(yes)"
XREPLACE = "(YES)"
Call XFINDANDREPLACE(XFIND, XREPLACE)
Call XFINDANDREPLACE("(PARTIALLY)", "(PARTIALLY)")
Call XFINDANDREPLACE("(NO)", "(NO)")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function XFINDANDREPLACE(XFIND, XREPLACE)
Macro1 Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
Selection.Find.Replacement.Font.Bold = True
With Selection.Find
.Text = XFIND
.Replacement.Text = XREPLACE
.Forward = True
.Wrap = wdFindContinue
.Format = True
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
End Function
Attribute VB_Name = "Module2"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test876()
xtext = "The cat sat on the mat and did "
x = reverse_string(6, xtext, " ")
Debug.Print Right(xtext, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function reverse_string(xno, xtext, XFIND)
xlen = Len(xtext)
For Z = xlen To 1 Step -1 ' go backwards
        If Mid(xtext, Z, 1) = XFIND Then xqty = xqty + 1
                If xqty = xno Then Exit For
                        
                Next Z
                xresult = xlen - Z
                reverse_string = xresult
                
End Function
Attribute VB_Name = "ScreenPrintx"
Declare Windows API Functions
Private Declare Sub keybd_event Lib "user32" (ByVal bVk As Byte, ByVal _
bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
Declare Virtual Key Codes
Private Const VK_SNAPSHOT = &H2C
Private Const VK_KEYUP = &H2
Private Const VK_MENU = &H12
Public Const VK_TAB = &H9
Public Const VK_ENTER = &HD
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ScreenPrint()
Press Alt + TAB Keys -- Step1
Alt_Tab
Press Print Screen key using Windows API -- Step2.
keybd_event VK_SNAPSHOT, 1, 0, 0 'Print Screen key down
keybd_event VK_SNAPSHOT, 1, VK_KEYUP, 0 'Print key Up - Screenshot to Clipboard
Paste Image in Chart and Export it to Image file. -- Step3
Charts.Add
ThisWorkbook.Charts(1).AutoScaling = True
ThisWorkbook.Charts(1).Paste
ThisWorkbook.Charts(1).Export FileName:="E:\ClipBoardToPic.jpg", FilterName:="jpg"
Supress warning message and Delete the Chart
Application.DisplayAlerts = False
ThisWorkbook.Charts(1).Delete
Application.DisplayAlerts = True
Attach the file to Excel -- Step4
Attach_File
ThisWorkbook.Activate
ThisWorkbook.Sheets(1).Select
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Alt_Tab()
DoEvents
keybd_event VK_MENU, 1, 0, 0 'Alt key down
DoEvents
keybd_event VK_TAB, 0, 0, 0 'Tab key down
DoEvents
keybd_event VK_TAB, 1, VK_KEYUP, 0 'Tab key up
DoEvents
keybd_event VK_ENTER, 1, 0, 0 'Tab key down
DoEvents
keybd_event VK_ENTER, 1, VK_KEYUP, 0 'Tab key up
DoEvents
keybd_event VK_MENU, 1, VK_KEYUP, 0 'Alt key up
DoEvents
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Attach_File()
ActiveCell.Select
ActiveSheet.OLEObjects.Add(FileName:="E:\ClipBoardToPic.jpg", Link:=False, _
DisplayAsIcon:=True, IconFileName:= _
"C:\Program Files\Internet Explorer\iexplore.exe", IconIndex:=10, IconLabel _
:="ClipBoardToPic.jpg").Select
End Sub
Attribute VB_Name = "images_word_pictures"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImages()
http://word.tips.net/T010726_Inserting_Multiple_Graphics_in_a_Document.html
Dim doc As Word.Document
Dim fd As FileDialog
Dim vItem As Variant
Dim mg1 As Range
Dim mg2 As Range
Set fd = Application.FileDialog(msoFileDialogFilePicker)
Set doc = ActiveDocument
With fd
.Filters.Add "Images", "*.gif; *.jpg; *.jpeg", 1
.FilterIndex = 1
If .Show = -1 Then
        For Each vItem In .SelectedItems
                Set mg2 = ActiveDocument.Range
                mg2.Collapse wdCollapseEnd
                doc.InlineShapes.AddPicture _
                FileName:=vItem, _
                LinkToFile:=False, SaveWithDocument:=True, Range:=mg2
                Set mg1 = ActiveDocument.Range
                mg1.Collapse wdCollapseEnd
                
                mg1.Text = vbCrLf & vbCrLf
        Next vItem
End If
End With
Set fd = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub GetPictures()
Dim sPic As String
Dim sPath As String
sPath = "V:\Data2016\RichardRolfe\XZXZXZ_LeanPM (Film)\" 'c:\myfolder\"
sPic = Dir(sPath & "*.png")
Do While sPic <> ""
        Selection.InlineShapes.AddPicture _
        FileName:=sPath & sPic, _
        LinkToFile:=False, SaveWithDocument:=True
        sPic = Dir
        Selection.TypeParagraph
        Selection.TypeParagraph
        Loop
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_resize_tim()
x = ActiveDocument.InlineShapes.Count
For i = 1 To x
        ActiveDocument.InlineShapes(i).Height = 200 ' * 1.2
        ActiveDocument.InlineShapes(i).Width = 300 '* 1.2
        
        
        
        
Next i
MsgBox x
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ResizePics()
Dim shp As Word.Shape
Dim ishp As Word.InlineShape
If Word.Selection.Type <> wdSelectionInlineShape And _
        Word.Selection.Type <> wdSelectionShape Then
        Exit Sub
End If
If Word.Selection.Type = wdSelectionInlineShape Then
        Set ishp = Word.Selection.Range.InlineShapes(1)
        ishp.LockAspectRatio = False
        ishp.Height = 55 'InchesToPoints(1.78)
        ishp.Width = 44 'InchesToPoints(3.17)
        Else
        If Word.Selection.Type = wdSelectionShape Then
                Set shp = Word.Selection.ShapeRange(1)
                shp.LockAspectRatio = False
                shp.Height = 33 'InchesToPoints(1.78)
                shp.Width = 22 'InchesToPoints(3.17)
        End If
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ResizePics_all()
Dim shp As Word.Shape
Dim ishp As Word.InlineShape
If Word.Selection.Type <> wdSelectionInlineShape And _
        Word.Selection.Type <> wdSelectionShape Then
        Exit Sub
End If
If Word.Selection.Type = wdSelectionInlineShape Then
        Set ishp = Word.Selection.Range.InlineShapes(1)
        ishp.LockAspectRatio = False
        ishp.Height = 55 'InchesToPoints(1.78)
        ishp.Width = 44 'InchesToPoints(3.17)
        Else
        If Word.Selection.Type = wdSelectionShape Then
                Set shp = Word.Selection.ShapeRange(1)
                shp.LockAspectRatio = False
                shp.Height = 33 'InchesToPoints(1.78)
                shp.Width = 22 'InchesToPoints(3.17)
        End If
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImage()
Dim imagePath As String
imagePath = "C:\\picture.jpg"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, _
LinkToFile:=False, _
SaveWithDocument:=True, _
Left:=370, _
Top:=-30, _
Anchor:=Selection.Range, _
Width:=60, _
Height:=60
Anchor:=Selection.Range, _
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function Insert_bunch_images(fname)
imagePath = fname ' "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
 Selection.TypeParagraph
  Selection.TypeText Text:="Title" & fname
 Selection.TypeParagraph
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
  Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True)
With shp
 .WrapFormat.Type = 4  'wdWrapSquare
.WrapFormat.Type = wdWrapInline
.Width = 500
.Height = 500
End With
Selection.TypeParagraph
Selection.TypeText Text:="Title" & fname
Selection.TypeParagraph
End Function
Private Sub cmdFileDialog_Click()
Requires reference to Microsoft Office 12.0 Object Library.
Dim fDialog As Office.FileDialog
Dim varFile As Variant
Set up the File Dialog.
Set fDialog = Application.FileDialog(msoFileDialogFilePicker)
With fDialog
Allow user to make multiple selections in dialog box.
.AllowMultiSelect = True
Set the title of the dialog box.
.Title = "Please select one or more files"
Clear out the current filters, and add our own.
.Filters.Clear
.Filters.Add "Access Databases", "*.MDB; *.ACCDB"
.Filters.Add "Access Projects", "*.ADP"
.Filters.Add "All Files", "*.png"
Show the dialog box. If the .Show method returns True, the
user picked at least one file. If the .Show method returns
False, the user clicked Cancel.
If .Show = True Then
        'Loop through each file selected and add it to the list box.
        For Each varFile In .SelectedItems
                'Me.FileList.AddItem varFile
                Debug.Print varFile
                Call Insert_bunch_images(varFile)
                Next
                Else
                MsgBox "You clicked Cancel in the file dialog box."
        End If
        End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Insert_SqWrap_Image()
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
With shp
.WrapFormat.Type = wdWrapSquare
.Left = 380
.Top = -50
.Width = 70
.Height = 70
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AddImageToHeader()
PURPOSE: Insert an image into a Word document heading
SOURCE: www.TheSpreadsheetGuru.com
Dim SrcePath As String
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\x1i-GEQY.png"
ThisDocument.Sections.Item(1).Headers(wdHeaderFooterPrimary) _
.Range.InlineShapes.AddPicture (SrcePath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Word_Insert_Image_in_Header()
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim oWD As Word.Document
Set oWD = ActiveDocument
With oWD.Sections(1)
.Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
.Headers(wdHeaderFooterPrimary).Range.Text = "Text as Header"
 .Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphRight
 .Headers(wdHeaderFooterPrimary).Range.InlineShapes.AddPicture SrcePath
End With
End Sub
Attribute VB_Name = "SELETEXTX"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xlist()
xlist Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
.Text = ";"
.Replacement.Text = ";^p"
.Forward = True
.Wrap = wdFindAsk
.Format = False
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
Selection.Sort ExcludeHeader:=False, FieldNumber:="Paragraphs", _
SortFieldType:=wdSortFieldAlphanumeric, SortOrder:=wdSortOrderAscending, _
FieldNumber2:="", SortFieldType2:=wdSortFieldAlphanumeric, SortOrder2:= _
wdSortOrderAscending, FieldNumber3:="", SortFieldType3:= _
wdSortFieldAlphanumeric, SortOrder3:=wdSortOrderAscending, Separator:= _
wdSortSeparateByTabs, SortColumn:=False, CaseSensitive:=False, LanguageID _
:=wdEnglishUK, SubFieldNumber:="Paragraphs", SubFieldNumber2:= _
"Paragraphs", SubFieldNumber3:="Paragraphs"
With ListGalleries(wdBulletGallery).ListTemplates(1).ListLevels(1)
.NumberFormat = ChrW(61623)
.TrailingCharacter = wdTrailingTab
.NumberStyle = wdListNumberStyleBullet
.NumberPosition = CentimetersToPoints(0.63)
.Alignment = wdListLevelAlignLeft
.TextPosition = CentimetersToPoints(1.27)
.TabPosition = wdUndefined
.ResetOnHigher = 0
.StartAt = 1
With .Font
.Bold = wdUndefined
.Italic = wdUndefined
.StrikeThrough = wdUndefined
.Subscript = wdUndefined
.Superscript = wdUndefined
.Shadow = wdUndefined
.Outline = wdUndefined
.Emboss = wdUndefined
.Engrave = wdUndefined
.AllCaps = wdUndefined
.Hidden = wdUndefined
.Underline = wdUndefined
.Color = wdUndefined
.Size = wdUndefined
.Animation = wdUndefined
.DoubleStrikeThrough = wdUndefined
.Name = "Symbol"
End With
.LinkedStyle = ""
End With
ListGalleries(wdBulletGallery).ListTemplates(1).Name = ""
Selection.Range.ListFormat.ApplyListTemplateWithLevel ListTemplate:= _
ListGalleries(wdBulletGallery).ListTemplates(1), ContinuePreviousList:= _
False, ApplyTo:=wdListApplyToWholeList, DefaultListBehavior:= _
wdWord10ListBehavior
Selection.Range.ListFormat.RemoveNumbers NumberType:=wdNumberParagraph
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub draft()
draft Macro
ActiveDocument.Sections(1).Range.Select
ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
Selection.HeaderFooter.Shapes.AddTextEffect( _
PowerPlusWaterMarkObject4559526, "DISCUSSION DRAFT ", "Calibri", 1, False _
, False, 0, 0).Select
 Selection.ShapeRange.Name = "PowerPlusWaterMarkObject4559526"
Selection.ShapeRange.TextEffect.NormalizedHeight = False
Selection.ShapeRange.Line.Visible = False
Selection.ShapeRange.Fill.Visible = True
Selection.ShapeRange.Fill.Solid
Selection.ShapeRange.Fill.ForeColor.RGB = RGB(192, 192, 192)
Selection.ShapeRange.Fill.Transparency = 0.5
Selection.ShapeRange.Rotation = 315
Selection.ShapeRange.LockAspectRatio = True
Selection.ShapeRange.Height = CentimetersToPoints(3.74)
Selection.ShapeRange.Width = CentimetersToPoints(18.7)
Selection.ShapeRange.WrapFormat.AllowOverlap = True
Selection.ShapeRange.WrapFormat.Side = wdWrapNone
Selection.ShapeRange.WrapFormat.Type = 3
Selection.ShapeRange.RelativeHorizontalPosition = _
wdRelativeVerticalPositionMargin
Selection.ShapeRange.RelativeVerticalPosition = _
wdRelativeVerticalPositionMargin
Selection.ShapeRange.Left = wdShapeCenter
Selection.ShapeRange.Top = wdShapeCenter
ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_fmt()
On Error Resume Next
For x = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
        ActiveDocument.Tables(x).Rows.Height = InchesToPoints(0)
        For Row = 1 To ActiveDocument.Tables(x).Rows.Count
                For Col = 1 To ActiveDocument.Tables(x).Columns.Count
                        'ActiveDocument.Tables(X).Cell(Row, Col).Range.Text
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Size = 9
                        ' .Font.Size = 8
                        Next
                        Next
                        
                Next x
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_fmt2()
On Error Resume Next
For x = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
        ActiveDocument.Tables(x).Rows.Height = InchesToPoints(0)
        For Row = 1 To ActiveDocument.Tables(x).Rows.Count
                For Col = 1 To ActiveDocument.Tables(x).Columns.Count
                        'ActiveDocument.Tables(X).Cell(Row, Col).Range.Text
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Size = 9
                        ' .Font.Size = 8
                        Next
                        Next
                        'ActiveDocument.Tables(x).Style = "Light Shading - Accent 4"
                        ActiveDocument.Tables(x).Style = "Light List - Accent 1"
                        ActiveDocument.Tables(x).Style = "Light gRID - Accent 3"
                Next x
                
                
                
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_agenct_12_blue()
Selection.Font.Name = "Agency FB"
Selection.Font.Size = 10
Selection.Font.Size = 12
Selection.Font.ColorIndex = wdDarkBlue
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_cal_11_teal()
Selection.Font.Name = "CAlibri"
Selection.Font.Size = 10
Selection.Font.Size = 11
Selection.Font.Color = RGB(0, 128, 128)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_cal_12_blk()
Selection.Font.Name = "CAlibri"
Selection.Font.Size = 10
Selection.Font.Size = 12
Selection.Font.Color = RGB(0, 0, 0)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub fandr()
For xnumber = 1 To 9
        
        
        Selection.Find.ClearFormatting
        Selection.Find.Replacement.ClearFormatting
        With Selection.Find
        .Text = xnumber
        .Replacement.Text = "^p"
        .Forward = True
        .Wrap = wdFindAsk
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
        End With
        Selection.Find.Execute Replace:=wdReplaceAll
        Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub WHOAMI()
x = ActiveDocument.Name
y = ActiveDocument.Path & "\" & x
Z = InputBox(x, x, x)
Z = InputBox(y, y, y)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_extract()
xtext = Selection.Range.Text
xtext = Replace(xtext, vbCrLf, " ")
xtext = Replace(xtext, vbCr, " ")
xtext = Replace(xtext, vbLf, " ")
For q = 1 To 32
        xtext = Replace(xtext, Chr(q), " ")
Next q
xpage = Selection.Information(wdActiveEndPageNumber)
x = " '..." & xtext & "..' [Line: " & GetLineNum(Selection.Range) & " on page " & xpage & " ]"
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub WhereAmI()
MsgBox "Paragraph number: " & GetParNum(Selection.Range) & vbCrLf & _
"Absolute line number: " & GetAbsoluteLineNum(Selection.Range) & vbCrLf & _
"Relative line number: " & GetLineNum(Selection.Range)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetParNum(r As Range) As Integer
Dim rParagraphs As Range
Dim CurPos As Long
r.Select
CurPos = ActiveDocument.Bookmarks("\startOfSel").Start
Set rParagraphs = ActiveDocument.Range(Start:=0, End:=CurPos)
GetParNum = rParagraphs.Paragraphs.Count
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetLineNum(r As Range) As Integer
relative to current page
GetLineNum = r.Information(wdFirstCharacterLineNumber)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetAbsoluteLineNum(r As Range) As Integer
Dim i1 As Integer, i2 As Integer, Count As Integer, rTemp As Range
r.Select
Do
i1 = Selection.Information(wdFirstCharacterLineNumber)
Selection.GoTo what:=wdGoToLine, which:=wdGoToPrevious, Count:=1, Name:=""
Count = Count + 1
i2 = Selection.Information(wdFirstCharacterLineNumber)
Loop Until i1 = i2
r.Select
GetAbsoluteLineNum = Count
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xlist2line()
xlist2line Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
.Text = "^p"
.Replacement.Text = "; "
.Forward = True
.Wrap = wdFindAsk
.Format = False
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_ascii()
x = Selection
For q = 1 To Len(x)
        Z = Z & Mid(x, q, 1) & "(" & Asc(Mid(x, q, 1)) & ")"
        
Next q
Z = InputBox(Z, Z, Z)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_oneline()
x = Selection
x = Replace(x, Chr(7), " ")
x = Replace(x, Chr(10), " ")
x = Replace(x, vbCrLf, " ")
x = Replace(x, Chr(13), " ")
On Error Resume Next
For q = 1 To 31
        x = Replace(x, q, " ")
Next q
For q = 127 To 250
        x = Replace(x, q, " ")
Next q
fname = ActiveDocument.Path & "\TEMP23456.TXT"
Call PRINT_INFO(x, fname)
End Sub
Attribute VB_Name = "SELETEXTX"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xlist()
xlist Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
.Text = ";"
.Replacement.Text = ";^p"
.Forward = True
.Wrap = wdFindAsk
.Format = False
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
Selection.Sort ExcludeHeader:=False, FieldNumber:="Paragraphs", _
SortFieldType:=wdSortFieldAlphanumeric, SortOrder:=wdSortOrderAscending, _
FieldNumber2:="", SortFieldType2:=wdSortFieldAlphanumeric, SortOrder2:= _
wdSortOrderAscending, FieldNumber3:="", SortFieldType3:= _
wdSortFieldAlphanumeric, SortOrder3:=wdSortOrderAscending, Separator:= _
wdSortSeparateByTabs, SortColumn:=False, CaseSensitive:=False, LanguageID _
:=wdEnglishUK, SubFieldNumber:="Paragraphs", SubFieldNumber2:= _
"Paragraphs", SubFieldNumber3:="Paragraphs"
With ListGalleries(wdBulletGallery).ListTemplates(1).ListLevels(1)
.NumberFormat = ChrW(61623)
.TrailingCharacter = wdTrailingTab
.NumberStyle = wdListNumberStyleBullet
.NumberPosition = CentimetersToPoints(0.63)
.Alignment = wdListLevelAlignLeft
.TextPosition = CentimetersToPoints(1.27)
.TabPosition = wdUndefined
.ResetOnHigher = 0
.StartAt = 1
With .Font
.Bold = wdUndefined
.Italic = wdUndefined
.StrikeThrough = wdUndefined
.Subscript = wdUndefined
.Superscript = wdUndefined
.Shadow = wdUndefined
.Outline = wdUndefined
.Emboss = wdUndefined
.Engrave = wdUndefined
.AllCaps = wdUndefined
.Hidden = wdUndefined
.Underline = wdUndefined
.Color = wdUndefined
.Size = wdUndefined
.Animation = wdUndefined
.DoubleStrikeThrough = wdUndefined
.Name = "Symbol"
End With
.LinkedStyle = ""
End With
ListGalleries(wdBulletGallery).ListTemplates(1).Name = ""
Selection.Range.ListFormat.ApplyListTemplateWithLevel ListTemplate:= _
ListGalleries(wdBulletGallery).ListTemplates(1), ContinuePreviousList:= _
False, ApplyTo:=wdListApplyToWholeList, DefaultListBehavior:= _
wdWord10ListBehavior
Selection.Range.ListFormat.RemoveNumbers NumberType:=wdNumberParagraph
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub draft()
draft Macro
ActiveDocument.Sections(1).Range.Select
ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
Selection.HeaderFooter.Shapes.AddTextEffect( _
PowerPlusWaterMarkObject4559526, "DISCUSSION DRAFT ", "Calibri", 1, False _
, False, 0, 0).Select
 Selection.ShapeRange.Name = "PowerPlusWaterMarkObject4559526"
Selection.ShapeRange.TextEffect.NormalizedHeight = False
Selection.ShapeRange.Line.Visible = False
Selection.ShapeRange.Fill.Visible = True
Selection.ShapeRange.Fill.Solid
Selection.ShapeRange.Fill.ForeColor.RGB = RGB(192, 192, 192)
Selection.ShapeRange.Fill.Transparency = 0.5
Selection.ShapeRange.Rotation = 315
Selection.ShapeRange.LockAspectRatio = True
Selection.ShapeRange.Height = CentimetersToPoints(3.74)
Selection.ShapeRange.Width = CentimetersToPoints(18.7)
Selection.ShapeRange.WrapFormat.AllowOverlap = True
Selection.ShapeRange.WrapFormat.Side = wdWrapNone
Selection.ShapeRange.WrapFormat.Type = 3
Selection.ShapeRange.RelativeHorizontalPosition = _
wdRelativeVerticalPositionMargin
Selection.ShapeRange.RelativeVerticalPosition = _
wdRelativeVerticalPositionMargin
Selection.ShapeRange.Left = wdShapeCenter
Selection.ShapeRange.Top = wdShapeCenter
ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_fmt()
On Error Resume Next
For x = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
        ActiveDocument.Tables(x).Rows.Height = InchesToPoints(0)
        For Row = 1 To ActiveDocument.Tables(x).Rows.Count
                For Col = 1 To ActiveDocument.Tables(x).Columns.Count
                        'ActiveDocument.Tables(X).Cell(Row, Col).Range.Text
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Size = 9
                        ' .Font.Size = 8
                        Next
                        Next
                        
                Next x
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_fmt2()
On Error Resume Next
For x = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
        ActiveDocument.Tables(x).Rows.Height = InchesToPoints(0)
        For Row = 1 To ActiveDocument.Tables(x).Rows.Count
                For Col = 1 To ActiveDocument.Tables(x).Columns.Count
                        'ActiveDocument.Tables(X).Cell(Row, Col).Range.Text
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Size = 9
                        ' .Font.Size = 8
                        Next
                        Next
                        'ActiveDocument.Tables(x).Style = "Light Shading - Accent 4"
                        ActiveDocument.Tables(x).Style = "Light List - Accent 1"
                        ActiveDocument.Tables(x).Style = "Light gRID - Accent 3"
                Next x
                
                
                
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_agenct_12_blue()
Selection.Font.Name = "Agency FB"
Selection.Font.Size = 10
Selection.Font.Size = 12
Selection.Font.ColorIndex = wdDarkBlue
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_cal_11_teal()
Selection.Font.Name = "CAlibri"
Selection.Font.Size = 10
Selection.Font.Size = 11
Selection.Font.Color = RGB(0, 128, 128)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_cal_12_blk()
Selection.Font.Name = "CAlibri"
Selection.Font.Size = 10
Selection.Font.Size = 12
Selection.Font.Color = RGB(0, 0, 0)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub fandr()
For xnumber = 1 To 9
        
        
        Selection.Find.ClearFormatting
        Selection.Find.Replacement.ClearFormatting
        With Selection.Find
        .Text = xnumber
        .Replacement.Text = "^p"
        .Forward = True
        .Wrap = wdFindAsk
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
        End With
        Selection.Find.Execute Replace:=wdReplaceAll
        Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub WHOAMI()
x = ActiveDocument.Name
y = ActiveDocument.Path & "\" & x
Z = InputBox(x, x, x)
Z = InputBox(y, y, y)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_extract()
xtext = Selection.Range.Text
xtext = Replace(xtext, vbCrLf, " ")
xtext = Replace(xtext, vbCr, " ")
xtext = Replace(xtext, vbLf, " ")
For q = 1 To 32
        xtext = Replace(xtext, Chr(q), " ")
Next q
xpage = Selection.Information(wdActiveEndPageNumber)
x = " '..." & xtext & "..' [Line: " & GetLineNum(Selection.Range) & " on page " & xpage & " ]"
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub WhereAmI()
MsgBox "Paragraph number: " & GetParNum(Selection.Range) & vbCrLf & _
"Absolute line number: " & GetAbsoluteLineNum(Selection.Range) & vbCrLf & _
"Relative line number: " & GetLineNum(Selection.Range)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetParNum(r As Range) As Integer
Dim rParagraphs As Range
Dim CurPos As Long
r.Select
CurPos = ActiveDocument.Bookmarks("\startOfSel").Start
Set rParagraphs = ActiveDocument.Range(Start:=0, End:=CurPos)
GetParNum = rParagraphs.Paragraphs.Count
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetLineNum(r As Range) As Integer
relative to current page
GetLineNum = r.Information(wdFirstCharacterLineNumber)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetAbsoluteLineNum(r As Range) As Integer
Dim i1 As Integer, i2 As Integer, Count As Integer, rTemp As Range
r.Select
Do
i1 = Selection.Information(wdFirstCharacterLineNumber)
Selection.GoTo what:=wdGoToLine, which:=wdGoToPrevious, Count:=1, Name:=""
Count = Count + 1
i2 = Selection.Information(wdFirstCharacterLineNumber)
Loop Until i1 = i2
r.Select
GetAbsoluteLineNum = Count
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xlist2line()
xlist2line Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
.Text = "^p"
.Replacement.Text = "; "
.Forward = True
.Wrap = wdFindAsk
.Format = False
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_ascii()
x = Selection
For q = 1 To Len(x)
        Z = Z & Mid(x, q, 1) & "(" & Asc(Mid(x, q, 1)) & ")"
        
Next q
Z = InputBox(Z, Z, Z)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_oneline()
x = Selection
x = Replace(x, Chr(7), " ")
x = Replace(x, Chr(10), " ")
x = Replace(x, vbCrLf, " ")
x = Replace(x, Chr(13), " ")
On Error Resume Next
For q = 1 To 31
        x = Replace(x, q, " ")
Next q
For q = 127 To 250
        x = Replace(x, q, " ")
Next q
fname = ActiveDocument.Path & "\TEMP23456.TXT"
Call PRINT_INFO(x, fname)
End Sub
Attribute VB_Name = "formsx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1_pdftext()
PDFtext.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1_userform4()
UserForm4.Show
End Sub
Attribute VB_Name = "formsx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1_pdftext()
PDFtext.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1_userform4()
UserForm4.Show
End Sub
Attribute VB_Name = "Module1"
Attribute VB_Name = "Module1"
Attribute VB_Name = "NewMacros"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Macro1()
Attribute Macro1.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Macro1"
Macro1 Macro
Selection.Tables(1).Style = "Light Shading - Accent 5"
End Sub
Attribute VB_Name = "XZXZXZ_word_normal"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub A2_FORM1()
zzbuttons_highlands.Show
buttons.Show
ListCommentsFrm.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PrintScreen()
WordBasic.SendKeys "{prtsc}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub f3()
SendKeys "{f3}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub f9()
SendKeys "{f9}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub af8()
SendKeys "%{f8}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_infuse_font()
Selection.Font.Color = RGB(73, 23, 109)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_infuse_back()
Selection.Interior.Color = RGB(73, 23, 109)
Selection.Font.Color = RGB(0, 0, 0)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_list()
For c = 1 To ActiveDocument.Comments.Count
        Z = Z & vbCrLf & c & " " & ActiveDocument.Comments(c).Scope
        https://social.msdn.microsoft.com/Forums/en-US/9a109c23-e29d-49a2-a563-a4d4ea50659e/vba-word-get-line-number-of-comment-object?forum=isvvba
        
        p = "Page" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdActiveEndPageNumber)
        l = "Line" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdFirstCharacterLineNumber)
        
        x = x & vbCrLf & c & " " & ActiveDocument.Comments(c).Range.Text
        q = q & vbCrLf & vbCrLf & "Your text: '..." & ActiveDocument.Comments(c).Scope & "...' [" & p & l & "] Feedback: " & ActiveDocument.Comments(c).Range.Text
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_zap()
For c = ActiveDocument.Comments.Count To 1 Step -1
        ActiveDocument.Comments(c).Delete
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_quote()
For c = 1 To ActiveDocument.Comments.Count
        Z = Z & vbCrLf & c & " " & ActiveDocument.Comments(c).Scope
        https://social.msdn.microsoft.com/Forums/en-US/9a109c23-e29d-49a2-a563-a4d4ea50659e/vba-word-get-line-number-of-comment-object?forum=isvvba
        
        p = "Page" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdActiveEndPageNumber)
        l = "Line" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdFirstCharacterLineNumber)
        
        x = x & vbCrLf & c & " " & ActiveDocument.Comments(c).Range.Text
        q = q & vbCrLf & vbCrLf & "Your text: '..." & ActiveDocument.Comments(c).Scope & "...' [" & p & l & "] Feedback: " & ActiveDocument.Comments(c).Range.Text
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RemoveAllComments()
Dim n As Long
Dim oComments As Comments
Set oComments = ActiveDocument.Comments
For n = oComments.Count To 1 Step -1
        oComments(n).Delete
Next 'n
Set oComments = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Commentslist()
Dim n As Long
Dim oComments As Comments
Set oComments = ActiveDocument.Comments
For n = oComments.Count To 1 Step -1
        If oComments(n).Date > #2/29/2016# Then
                xc = xc + 1
                Debug.Print xc & " " & oComments(n).Range.Text & " (" & oComments(n).Author & " " & oComments(n).Date & ")"
                
        End If
        
Next 'n
Set oComments = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1()
x = "1=UserFormOutlookXZXZXZ, 2=UserFormInputOutput"
x = InputBox(x, x, x)
If x = 1 Then UserFormOutlookXZXZXZ.Show
        If x = 2 Then UserFormInputOutput.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub CreateAppt()
Dim myItem As Object
Dim myRequiredAttendee, myOptionalAttendee, myResourceAttendee As Outlook.Recipient
xtext1 = "DIARY: Meeting at location at time with person re subject"
xtext2 = "Regards, XZXZXZ0XZXZXZXZXZXZ051 Email XZXZXZ@XZXZXZXZXZXZXZXZXZ.com"
xtext3 = "(Copied to my other diaries)"
xtext4 = "T.XZXZXZ@HEALTH.GOV.JE; t.XZXZXZ@gov.je; XZXZXZ@XZXZXZXZXZXZXZXZXZ.com; tim.XZXZXZ@XZXZXZi.co; XZXZXZ@XZXZXZ.com"
Dim appOL As Object
Dim objReminder As Object
Set appOL = GetObject(, "Outlook.application")
Set myItem = appOL.CreateItem(olAppointmentItem)
myItem.MeetingStatus = olMeeting
myItem.Subject = xtext1
myItem.Body = xtext1 & vbCrLf & xtext2 & vbCrLf & xtext3
myItem.Location = ""
myItem.Start = #9/24/2009 1:30:00 PM#
myItem.Start = Now()
myItem.Duration = 90
Set myRequiredAttendee = myItem.Recipients.Add("Nate Sun")
Set myRequiredAttendee = myItem.Recipients.Add(xtext4)
myRequiredAttendee.Type = olRequired
Set myOptionalAttendee = myItem.Recipients.Add("Kevin Kennedy")
Set myOptionalAttendee = myItem.Recipients.Add(xtext3)
myOptionalAttendee.Type = olOptional
Set myResourceAttendee = myItem.Recipients.Add(xtext3)
myResourceAttendee.Type = olResource
myItem.Display
myItem.Send
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xsaveas()
fname1 = ActiveDocument.Path & "\" & ActiveDocument.Name
xdate = Format(Now, "yymmdd")
fname2 = Replace(fname1, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=fname2, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
ActiveDocument.SaveAs FileName:=fname1, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST()
Debug.Print ActiveDocument.Path & "\" & ActiveDocument.Name
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub saveas_float()
xpath = ActiveDocument.Path & "\"
xdate = Format(Now, "yyyymmdd")
xname = xpath & ActiveDocument.Name
xname2 = Replace(xname, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=xname2
ActiveDocument.SaveAs FileName:=xname
x = xpath
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub saveas_timed()
xpath = ActiveDocument.Path & "\"
xdate = Format(Now, "yyyymmdd HHMM")
xname = xpath & ActiveDocument.Name
xname2 = Replace(xname, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=xname2
ActiveDocument.SaveAs FileName:=xname
x = xname2
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_resize()
Dim i As Long
With ActiveDocument
For i = 1 To .InlineShapes.Count
        With .InlineShapes(i)
        .ScaleHeight = 50
        .ScaleWidth = 50
        End With
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ScalePictures40()
Dim i As Long
With ActiveDocument
For i = 1 To .InlineShapes.Count
        With .InlineShapes(i)
        .ScaleHeight = 40
        .ScaleWidth = 40
        End With
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AA_addautotext()
http://msdn.microsoft.com/en-us/library/office/ff195437.aspx
NormalTemplate.AutoTextEntries("#test1").Value = "The Johnson Company"
Dim XAUTOTEXT_HANDLE As String
Dim p As Integer
XAUTOTEXT_HANDLE = "#zz" 'Left(Trim(Selection.Range), 4)
p = InStr(1, Selection.Range, ".")
XAUTOTEXT_HANDLE = Left(Trim(Selection.Range), p)
MsgBox XAUTOTEXT_HANDLE
NormalTemplate.AutoTextEntries.Add Name:=XAUTOTEXT_HANDLE, Range:=Selection.Range
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub vba_export_modules_V()
#http://www.cpearson.com/Excel/VBE.aspx
 reference to extensibility library
xprefix = "V:\Data2017\VBA\VBAWord\vba_"
Dim objMyProj As VBProject
Dim objVBComp As VBComponent
Set objMyProj = Application.VBE.ActiveVBProject
For Each objVBComp In objMyProj.VBComponents
        If objVBComp.Type = vbext_ct_StdModule Then
                
                
                'xprefix = "V:\Data2016\VBA\VBAWord\word_"
                'objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".bas"
                ' objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
                xprefix = "V:\Data2017\VBA\VBAWord\word01_"
                objVBComp.Export xprefix & objVBComp.Name & ".bas"
                'objVBComp.Export xprefix & objVBComp.Name & ".txt"
                
                Debug.Print xprefix
                
        End If
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ListAutoText()
Dim oAutoText   As Word.AutoTextEntry
With Application
 \\ Turn screenupdating off
.ScreenUpdating = False
 \\ Add new document
.Documents.Add
 \\ Loop through all Autotext entries in Normal.dot
For Each oAutoText In NormalTemplate.AutoTextEntries
        ' \\ Work with selection
        With .Selection
        ' \\ Make all Autotext names Bold
        .Font.Bold = True
        .TypeText Text:=oAutoText.Name
        .TypeParagraph ' \\ Insert Para
        
        ' \\ Turn of Bold for the Autotext entries
        .Font.Bold = False
        ' \\ Insert entry
        oAutoText.Insert Where:=.Range, RichText:=True
        
        ' \\ Insert two paragraphs
        .TypeParagraph
        .TypeText Text:="==============================================="
        .TypeParagraph
        End With
        Next
        
        ' \\ Turn screenupdating back on
        .ScreenUpdating = True
        End With
        xdate = Format(Now, "yyyymmdd")
        fname = "V:\Data2017\VBA\VBAWord\word_autotext_backup" & xdate & ".docx"
        ActiveDocument.SaveAs FileName:=fname
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function halfdays(x)
halfdays = Int(x)
If x > Int(x) + 0.49 Then halfdays = Int(x) + 0.5
        
End Function
Call ports2013_headings_multi_function("Normal", "Calibri", 11, "", wdBlue)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub bold_2hyphen()
Dim oPara As Paragraph
Dim xpos As Integer
For Each oPara In ActiveDocument.Paragraphs
For Each oPara In Selection.Paragraphs
        Debug.Print oPara.Range.Text
        '      If oPara.Range.Words(2).Characters(1) = ":" Then
        oPara.Range.Words(1).Font.Bold = True
        xpos = InStr(1, oPara.Range.Text, "-")
        For c = 1 To xpos
                oPara.Range.Characters(c).Font.Bold = True
        Next c
        '     End If
Next oPara
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub bold_firstword()
Dim oPara As Paragraph
For Each oPara In ActiveDocument.Paragraphs
For Each oPara In Selection.Paragraphs
        
        '      If oPara.Range.Words(2).Characters(1) = ":" Then
        oPara.Range.Words(1).Font.Bold = True
        oPara.Range.Characters(2).Font.Bold = False
        '     End If
Next oPara
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_XZXZXZd()
xfont = "Arial"
XSIZE = 10
fnormal = 11
Call set2016_headings("Heading 1", xfont, 14, "bold", wdBlack)
Call set2016_headings("Heading 2", xfont, 12, "bold", wdBlue)
Call set2016_headings("Heading 3", xfont, 12, "", wdBlack)
Call set2016_headings("Heading 4", xfont, fnormal, "", wdBlack)
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_XZXZXZ()
xfont = "Calibri"
XSIZE = 11
fnormal = 11
Call set2016_headings("Heading 1", xfont, 16, "bold", wdTeal)
Call set2016_headings("Heading 2", xfont, 13, "bold", wdTeal)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_jcsl()
xfont = "Century Gothic"
XSIZE = 10
fnormal = 10
Call set2016_headings("Heading 1", xfont, 14, "bold", wdTeal)
Call set2016_headings("Heading 2", xfont, 13, "bold", wdTeal)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_XZXZXZ()
xfont = "Calibri"
XSIZE = 11
fnormal = 11
xcolor = RGB(214, 0, 147)
XCOLOR = RGB(214, 0, 1)
Call set2016_headings("Heading 1", xfont, 14, "bold", xcolor)
Call set2016_headings("Heading 2", xfont, 12, "bold", xcolor)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_tbs()
xfont = "Calibri"
XSIZE = 11
fnormal = 11
Call set2016_headings("Heading 1", xfont, 14, "bold", wdViolet)
Call set2016_headings("Heading 2", xfont, 12, "bold", wdViolet)
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD()
For p = 1 To ActiveDocument.Paragraphs.Count
        
        If ActiveDocument.Paragraphs(p).Range.Information(wdWithInTable) Then
                'What ever you'd like to do
                'skip
                Else
                
                
                If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                        xtext = ActiveDocument.Paragraphs(p).Range.Text
                        If UCase(xtext) = xtext Then
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 128, 128)
                                
                                If InStr(1, UCase(xtext), UCase("Appendix")) Then
                                        ActiveDocument.Paragraphs(p).Range.Font.Size = 14
                                End If
                                
                                
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                End If
                
        End If
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub upper_banner()
For p = 1 To ActiveDocument.Paragraphs.Count
        If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                        If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 80, 80) ' RGB(255, 0, 0)
                                ' Selection.Shading.ForegroundPatternColor = wdColorAutomatic
                                ActiveDocument.Paragraphs(p).Range.Shading.BackgroundPatternColor = -671023258 '-671023207
                                
                                
                                Else
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                End If
        End If
        
        
Next p
 Selection.Shading.Texture = wdTextureNone
 Selection.Shading.ForegroundPatternColor = wdColorAutomatic
 Selection.Shading.BackgroundPatternColor = -671023207
 Selection.Shading.Texture = wdTextureNone
 Selection.Shading.ForegroundPatternColor = wdColorAutomatic
 Selection.Shading.BackgroundPatternColor = -671023258
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD_red()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range.Text
        If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                        
                        
                        If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
                                Else
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 80, 80)
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                        
                        If InStr(1, UCase(xtext), UCase("APPENDIX")) Then ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                        End If
                End If
                
                
        Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD_infuse()
infuse = RGB(73, 23, 109)
For p = 1 To ActiveDocument.Paragraphs.Count
        
        
        If ActiveDocument.Paragraphs(p).Range.Information(wdWithInTable) Then
                'What ever you'd like to do
                'skip
                Else
                xtext = ActiveDocument.Paragraphs(p).Range.Text
                If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                        If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                                
                                
                                If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                        ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                        ActiveDocument.Paragraphs(p).Range.Font.Color = infuse
                                        ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                                        
                                        Else
                                        ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                        ActiveDocument.Paragraphs(p).Range.Font.Color = infuse
                                        Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                                End If
                                
                                If InStr(1, UCase(xtext), UCase("APPENDIX")) Then ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                                End If
                        End If
                        
                End If
        Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_format_text()
text_to_find = "1234567890"
For p = 1 To ActiveDocument.Paragraphs.Count
        found_text = Left(ActiveDocument.Paragraphs(p).Range.Text, 1)
        If InStr(1, text_to_find, found_text) Then
                
                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
                ActiveDocument.Paragraphs(p).Range.Font.Size = 16
                
        End If
        
        
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_legal_para()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range.Text
        
        For q = 1 To 9
                If Left(xtext, 1) = CStr(q) Then
                        ActiveDocument.Paragraphs(p).Range.Text = "~" & ActiveDocument.Paragraphs(p).Range.Text
                End If
        Next q
        x = 0
        looktext = Left(Trim(xtext), 6)
        x = count_find(looktext, ".")
        
        If x = 2 Then
                ActiveDocument.Paragraphs(p).Range.Text = "~" & vbTab & ActiveDocument.Paragraphs(p).Range.Text
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 200, 0)
                Debug.Print looktext, x, ActiveDocument.Paragraphs(p).Range.Text
        End If
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function count_find(xtext, thingtofind)
Dim xc As Integer
xc = 0
For c = 1 To Len(xtext)
        If Mid(xtext, c, 1) = thingtofind Then xc = xc + 1
        Next c
        count_find = xc
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_extract_text()
text_to_find = "Appendix"
For p = 1 To ActiveDocument.Paragraphs.Count
        If InStr(1, ActiveDocument.Paragraphs(p).Range.Text, text_to_find) Then
                xc = xc + 1
                x = x & " " & xc & ". " & ActiveDocument.Paragraphs(p).Range.Text & vbCrLf
                '' ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
        End If
        
        
        
Next p
Z = Replace(x, Chr(13), "")
Z = Replace(Z, text_to_find, ",  ")
Debug.Print x
Debug.Print LCase(Z)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2016_JRC()
xfont = "Calibri"
fnormal = 11
Call set2016_headings("Heading 1", xfont, 14, "bold", wdRed)
Call set2016_headings("Heading 2", xfont, 12, "bold", "")
Call set2016_headings("Heading 3", xfont, 12, "", "")
Call set2016_headings("Heading 4", xfont, fnormal, "", "")
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function set2016_headings(xstyle, xfont, XSIZE, xbold, xcolor)
With ActiveDocument.Styles(xstyle).Font
.Name = xfont
.Size = XSIZE
.Bold = False
.Italic = False
If Len(xbold) > 1 Then .Bold = True
        
        'http://dmcritchie.mvps.org/excel/colors.htm
        .ColorIndex = wdBlack
        .ColorIndex = wdBlack
        
        
        If Len(xcolor) > 0 Then
                If xcolor > 10 Then
                        .Color = xcolor
                        Else
                        .ColorIndex = xcolor
                End If
        End If
        
        
        End With
        xindent = 0
        If xstyle = "Heading 1" Then xindent = 0
                If xstyle = "Heading 2" Then xindent = 0
                        If xstyle = "Heading 3" Then xindent = 2
                                If xstyle = "Heading 4" Then xindent = 3
                                        
                                        With ActiveDocument.Styles(xstyle).ParagraphFormat
                                        .LeftIndent = CentimetersToPoints(xindent)
                                        .RightIndent = CentimetersToPoints(0)
                                        .FirstLineIndent = CentimetersToPoints(1.5)
                                        
                                        .TabStops.ClearAll
                                        
                                        .SpaceBefore = 0
                                        .SpaceBeforeAuto = False
                                        .SpaceAfter = 0
                                        .SpaceAfterAuto = False
                                        .LineSpacingRule = wdLineSpace0pt0
                                        .Alignment = wdAlignParagraphLeft
                                        .WidowControl = True
                                        .KeepWithNext = False
                                        .KeepTogether = False
                                        .PageBreakBefore = False
                                        .NoLineNumber = False
                                        .Hyphenation = True
                                        .FirstLineIndent = CentimetersToPoints(0)
                                        .OutlineLevel = wdOutlineLevelBodyText
                                        .CharacterUnitLeftIndent = 0
                                        .CharacterUnitRightIndent = 0
                                        
                                        .LineUnitBefore = 0
                                        .LineUnitAfter = 0
                                        .MirrorIndents = False
                                        .TextboxTightWrap = wdTightNone
                                        End With
                                        
                                        
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test01()
Call attach_word_file
Call attach_excel_file
Call attach_ppt_file
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_word_file()
fname = "H:\XZXZXZD_ReOrg\Updates\XZXZXZD_ReDesign_Update No001.docx"
xlabel = "XZXZXZD_ReDesign_Update No001.docx"
Selection.InlineShapes.AddOLEObject ClassType:="Word.Document.12", _
FileName:=fname, _
LinkToFile:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\PROGRA~1\MICROS~2\Office12\Moc.exe", IconIndex:=7, IconLabel:= _
xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_excel_file()
fname = "H:\XZXZXZD_ReOrg\Initiation\XZXZXZD Governance Stakeholder Map v1.xlsm"
xlabel = "XZXZXZD Governance Stakeholder Map v1.xlsm"
Selection.InlineShapes.AddOLEObject ClassType:= _
"Excel.SheetMacroEnabled.12", FileName:= _
fname, _
LinkToFile:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\PROGRA~1\MICROS~2\Office12\Moc.exe", IconIndex:=10, IconLabel:= _
xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_ppt_file()
fname = "H:\XZXZXZD_ReOrg\Initiation\XZXZXZD_Initiation_Presentation.pptm"
xlabel = "XZXZXZD_Initiation_Presentation.pptm"
Selection.InlineShapes.AddOLEObject ClassType:= _
"PowerPoint.ShowMacroEnabled.12", FileName:= _
fname, LinkToFile _
:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\WINDOWS\Installer\{90120000-0011-0000-0000-0000000FF1CE}\pptico.exe", _
IconIndex:=19, IconLabel:=xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF2PRINT()
ppath = "z:\print" & "\" & ActiveDocument.Name
ppath = Replace(ppath, ".docx", ".pdf")
ppath = Replace(ppath, ".doc", ".pdf")
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
Call DeleteFile(FName)
ActiveDocument.ExportAsFixedFormat OutputFileName:= _
fname _
, ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
wdExportOptimizeForOnScreen, Range:=wdExportAllDocument, From:=1, To:=1, _
Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
BitmapMissingFonts:=True, UseISO19005_1:=False
 ChangeFileOpenDirectory "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\"
 MsgBox "DONE"
x = fname
FileCopy fname, ppath
x = InputBox(x, x, x)
x = InputBox(ppath, ppath, ppath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF2parent_dir()
newpath = getParentFolder2(ActiveDocument.Path & "\") & "\"
oldpath = ActiveDocument.Path & "\"
Call PDF
fname = ActiveDocument.Name
fname = Replace(fname, ".docm", ".pdf")
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
FileCopy oldpath & fname, newpath & fname
ReturnValue = Shell("explorer.EXE " & newpath, 1)  ' Run Calculator.
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function getParentFolder2(ByVal strFolder0)
Dim strFolder
strFolder = Left(strFolder0, InStrRev(strFolder0, "\") - 1)
getParentFolder2 = Left(strFolder, InStrRev(strFolder, "\") - 1)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF()
fname = "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\Contract Committment Trail (KPMG).pdf"
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
fname = Replace(fname, ".docm", ".pdf")
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
Call DeleteFile(FName)
ActiveDocument.ExportAsFixedFormat OutputFileName:= _
fname _
, ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
wdExportOptimizeForOnScreen, Range:=wdExportAllDocument, From:=1, To:=1, _
Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
BitmapMissingFonts:=True, UseISO19005_1:=False
 ChangeFileOpenDirectory "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\"
 MsgBox "DONE"
x = fname
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function FileExists(ByVal FileToTest As String) As Boolean
FileExists = (Dir(FileToTest) <> "")
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub DeleteFile(ByVal FileToDelete As String)
If FileExists(FileToDelete) Then 'See above
        SetAttr FileToDelete, vbNormal
        Kill FileToDelete
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp()
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
Debug.Print fname
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub zzdir_html()
Dim MyFile As String
Dim Counter As Long
xpath = ActiveDocument.Path & "\"
xpath = InputBox(xpath, xpath, xpath)
Dim DirectoryListArray() As String
ReDim DirectoryListArray(1000)
website = "http://www.XZXZXZXZXZXZcompany.com/JIBS/"
website = InputBox(website, website, website)
website = ""
Counter = 1
MyFile = Dir$("c:\temp\*.*")
MyFile = Dir$(xpath & "*.*")
MyFile = Dir$(xpath & "app*.*")
Do While MyFile <> ""
        DirectoryListArray(Counter) = MyFile
        
        
        
        xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
        'xtext2 = xtext2 & xpath & MyFile & vbCrLf
        Debug.Print MyFile
        MyFile = Dir$
        Counter = Counter + 1
        Loop
        xtext3 = xtext1 & vbCrLf & xtext2
        fname = xpath & "display.html"
        Call PRINT_INFO(xtext3, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub zzdir_pdf()
Dim MyFile As String
Dim Counter As Long
xpath = ActiveDocument.Path & "\"
xpath = InputBox(xpath, xpath, xpath)
Dim DirectoryListArray() As String
ReDim DirectoryListArray(10000)
website = "http://www.XZXZXZXZXZXZcompany.com/JIBS/"
website = InputBox(website, website, website)
website = ""
Counter = 1
MyFile = Dir$("c:\temp\*.*")
MyFile = Dir$(xpath & "*.*")
MyFile = Dir$(xpath & "app*.*")
Do While MyFile <> ""
        DirectoryListArray(Counter) = MyFile
        
        If InStr(1, UCase(MyFile), UCase("PDF")) Then
                'xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
                'xtext2 = xtext2 & xpath & MyFile & vbCrLf
                xtext2 = xtext2 & MyFile & vbCrLf
        End If
        
        If InStr(1, UCase(MyFile), UCase("DOC")) Then
                'xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
                'xtext2 = xtext2 & xpath & MyFile & vbCrLf
                xtext3 = xtext3 & MyFile & vbCrLf
        End If
        
        Debug.Print MyFile
        MyFile = Dir$
        Counter = Counter + 1
        Loop
        xtext3 = xtext1 & vbCrLf & xtext2 & vbCrLf & xtext3
        fname = xpath & "zzdir.txt"
        Call PRINT_INFO(xtext3, fname)
End Sub
Attribute VB_Name = "WORD2BLOG"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_old()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = xtext & ActiveDocument.Paragraphs(p).Range.Text & vbCrLf
Next p
fname = ActiveDocument.Path & "\temptext.txt"
Call PRINT_INFO(xtext, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_Blog_Word_Linked()
x = "[B]logger or [W]ordpress or [L]linked_in"
x = InputBox(x, x, x)
x = LCase(x)
xnewline = vbCrLf ' for blogger
If x = "w" Then xnewline = Chr(10) ' for wordpress
        If x = "b" Then xnewline = vbCrLf & "<br/>" ' for blogger
                If x = "b" Then xnewline = "<p/>"  ' for blogger
                        If x = "l" Then xnewline = "" ' for linkedin
                                
                                For p = 1 To ActiveDocument.Paragraphs.Count
                                        line2add = ActiveDocument.Paragraphs(p).Range.ListStyle
                                        
                                        line2add = ActiveDocument.Paragraphs(p).Range.ListFormat.ListString
                                        line2add = line2add & ActiveDocument.Paragraphs(p).Range.Text
                                        
                                        If ActiveDocument.Paragraphs(p).Range.Font.Italic = True Then
                                                If (x = "b" And Len(line2add) > 2) Then line2add = "<i>" & line2add & "</i>"
                                                End If
                                                
                                                If line2add = UCase(line2add) Then
                                                        If (x = "b" And Len(line2add) > 2) Then line2add = "<b>" & line2add & "</b>"
                                                        End If
                                                        
                                                        xtext = xtext & line2add & xnewline
                                                Next p
                                                
                                                
                                                If x = "l" Then
                                                        xtext = Replace(xtext, Chr(10), vbCrLf)
                                                        xtext = Replace(xtext, Chr(12), vbCrLf)
                                                        xtext = Replace(xtext, Chr(13), vbCrLf)
                                                        xtext = Replace(xtext, vbCrLf & vbCrLf, vbCrLf)
                                                End If
                                                fname = ActiveDocument.Path & "\temptext.txt"
                                                Call PRINT_INFO(xtext, fname)
                                                newname = Replace(fname, ".txt", ".html")
                                                FileCopy fname, newname
                                                ReturnValue = Shell("explorer.EXE " & newname, 1)  ' Run Calculator.
                                                Debug.Print ActiveDocument.Path
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_html_XZXZXZwebpage()
b1 = "<b style='color: #008080;'>"
b2 = "</b>"
h11 = "<h1 style='color: #008080;'>"
h12 = "</h1>"
For p = 1 To ActiveDocument.Paragraphs.Count
        XLINE = ActiveDocument.Paragraphs(p).Range.Text
        XLINE = Trim(XLINE)
        XLINE = Replace(XLINE, Chr(13), "")
        
        If p = 1 Then xtext = xtext & h11 & XLINE & h12 & vbCrLf
                
                
                If UCase(XLINE) = XLINE And Len(XLINE) > 3 Then
                        xtext = xtext & b1 & XLINE & b2 & vbCrLf
                        ElseIf InStr(1, XLINE, "Case Study") Then
                        xtext = xtext & h11 & XLINE & h12 & vbCrLf
                        Else
                        xtext = xtext & XLINE & "<BR>" & vbCrLf
                End If
                
                
                
                
                
        Next p
        fname = ActiveDocument.Path & "\temptext.txt"
        Call PRINT_INFO(xtext, fname)
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_html()
b1 = "<b style='color: red;'>"
b2 = "</b>"
h11 = "<h1 style='color: red;'>"
h12 = "</h1>"
For p = 1 To ActiveDocument.Paragraphs.Count
        XLINE = ActiveDocument.Paragraphs(p).Range.Text
        XLINE = Trim(XLINE)
        XLINE = Replace(XLINE, Chr(13), "")
        
        If p = 1 Then xtext = xtext & h11 & XLINE & h12 & vbCrLf
                
                If UCase(XLINE) = XLINE And Len(XLINE) > 3 Then
                        xtext = xtext & b1 & XLINE & b2 & vbCrLf
                        Else
                        xtext = xtext & XLINE & "<BR>" & vbCrLf
                End If
                
                
                
                
                
        Next p
        fname = ActiveDocument.Path & "\temptext.txt"
        Call PRINT_INFO(xtext, fname)
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function TRFMT(x)
xx = ""
x = tr_regex(x)
x = Replace(x, Chr(13), xx)
x = Replace(x, Chr(10), xx)
x = Replace(x, Chr(12), xx)
x = Replace(x, Chr(11), xx)
X = Replace(X, Chr(13), "!13!")
X = Replace(X, Chr(10), "!10!")
X = Replace(X, Chr(12), "!12!")
X = Replace(X, Chr(11), "!11!")
If InStr(1, UCase(Trim(x)), UCase("http")) Then
        X = "<a href=" & X & ">" & Trim(X) & "</a>" '/// using regex instead
End If
If x = UCase(x) Then
        If Len(x) > 2 Then
                x = "<b>" & Trim(x) & "</b>"
        End If
End If
TRFMT = Trim(x)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_html(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_html(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_html(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("explorer.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub tr_regex_URLtest()
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex_url(x)
Debug.Print y
Debug.Print "======================================"
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex_email(x)
Debug.Print y
Debug.Print "======================================"
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex(x)
Debug.Print y
Debug.Print "======================================"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex(xinput_string)
x = xinput_string
x = tr_regex_url(x)
x = tr_regex_email(x)
tr_regex = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex_url(xinput_string)
Dim reg
Dim rng As Range, i As Long, j As Long
Dim mtch, mt, tmpStr As String
Set reg = CreateObject("vbscript.regexp")
With reg
.IgnoreCase = True
.MultiLine = False
http://regexlib.com/Search.aspx?k=url&AspxAutoDetectCookieSupport=1
.Pattern = "(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?"
 .Pattern = "[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}"
.Global = True
End With
Set mtch = reg.Execute(xinput_string)
xoutput_string = xinput_string
For Each mt In mtch ' what you want to change
        now change the output string by find and replace stuff for each match of what you want to change
        xoutput_string = Replace(xoutput_string, mt, "<a href=" & mt & ">" & mt & "</a>" & vbCrLf)
Next mt
tr_regex_url = xoutput_string
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex_email(xinput_string)
Dim reg
Dim rng As Range, i As Long, j As Long
Dim mtch, mt, tmpStr As String
Set reg = CreateObject("vbscript.regexp")
With reg
.IgnoreCase = True
.MultiLine = False
http://regexlib.com/Search.aspx?k=url&AspxAutoDetectCookieSupport=1
.Pattern = "(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?"
.Pattern = "[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}"
.Global = True
End With
Set mtch = reg.Execute(xinput_string)
xoutput_string = xinput_string
For Each mt In mtch ' what you want to change
        now change the output string by find and replace stuff for each match of what you want to change
        xoutput_string = Replace(xoutput_string, mt, "<a href=mailto:" & mt & ">" & mt & "</a>" & vbCrLf)
Next mt
tr_regex_email = xoutput_string
End Function
Attribute VB_Name = "xfit_tables"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AutoFitToWind()
Selection.WholeStory
Selection.Font.Size = 9
Dim tbl As Table
Dim tbl2 As Table
For Each tbl In ActiveDocument.Tables
        tbl.AutoFitBehavior wdAutoFitWindow
        For Each tbl2 In ActiveDocument.Tables
                tbl2.AutoFitBehavior wdAutoFitWindow
                
                
        Next tbl2
        
Next tbl
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub VBA_WORD_FORMAT_SUBTABLES()
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(t).AutoFitBehavior wdAutoFitWindow
        
        
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                
                Next
                
                
                Next
                
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST_movewithtext()
For t = 1 To ActiveDocument.Tables.Count
        With ActiveDocument.Tables(t).Rows
        .WrapAroundText = True
        .HorizontalPosition = wdTableLeft
        .RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
        .DistanceLeft = CentimetersToPoints(0.32)
        .DistanceRight = CentimetersToPoints(0.32)
        .VerticalPosition = CentimetersToPoints(0)
        .RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
        .DistanceTop = CentimetersToPoints(0)
        .DistanceBottom = CentimetersToPoints(0)
        .AllowOverlap = False
        End With
        
Next t
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TESTt2()
With Selection.Tables(1).Rows
.WrapAroundText = True
.HorizontalPosition = wdTableLeft
.RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
.DistanceLeft = CentimetersToPoints(0.32)
.DistanceRight = CentimetersToPoints(0.32)
.VerticalPosition = CentimetersToPoints(0)
.RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
.DistanceTop = CentimetersToPoints(0)
.DistanceBottom = CentimetersToPoints(0)
.AllowOverlap = False
End With
End Sub
Attribute VB_Name = "TABLE_FONT_HTML"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub STEP3_A3FORMAT_SUBTABLES_a4()
Z = 260
ActiveDocument.Tables(1).Columns(1).Width = Z ' COL1
ActiveDocument.Tables(1).Columns(2).Width = Z ' COL2
ActiveDocument.Tables(1).Columns(3).Width = Z ' COL3
On Error Resume Next
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                '    ActiveDocument.Tables(T).Tables(Z).AutoFitBehavior wdAutoFitContent
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                
                
                Next
                
                ' ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitWindow
                'ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitContent
                
                
                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub STEP3_A3FORMAT_SUBTABLES_a3()
Z = 370
ActiveDocument.Tables(1).Columns(1).Width = Z ' COL1
ActiveDocument.Tables(1).Columns(2).Width = Z ' COL2
ActiveDocument.Tables(1).Columns(3).Width = Z ' COL3
On Error Resume Next
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                '    ActiveDocument.Tables(T).Tables(Z).AutoFitBehavior wdAutoFitContent
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                '######
                ' Loop through each row in the table.
                For Each oRow In ActiveDocument.Tables(t).Tables(Z).Rows
                        
                        ' Loop through each cell in the current row.
                        For Each oCell In oRow.Cells
                                ' Set sCellText equal to text of the cell.
                                ' Note: This section can be modified to suit
                                ' your programming purposes.
                                sCellText = oCell.Range
                                If Left(sCellText, 5) = "GREEN" Then oCell.Range.Shading.ForegroundPatternColor = RGB(0, 222, 0)
                                        If Left(sCellText, 5) = "GREEN" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                
                                                If Left(sCellText, 5) = "AMBER" Then oCell.Range.Shading.ForegroundPatternColor = RGB(255, 102, 0)
                                                        If Left(sCellText, 5) = "AMBER" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                                
                                                                
                                                                If Left(sCellText, 3) = "RED" Then oCell.Range.Shading.ForegroundPatternColor = RGB(222, 0, 0)
                                                                        If Left(sCellText, 3) = "RED" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                                                
                                                                                ' Remove table cell markers from the text.
                                                                                'sCellText = Left$(sCellText, Len(sCellText) - 2)
                                                                                'MsgBox sCellText
                                                                                
                                                                        Next oCell
                                                                        
                                                                Next oRow
                                                                '######
                                                                
                                                                Next
                                                                
                                                                ' ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitWindow
                                                                'ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitContent
                                                                
                                                                
                                                                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RetrieveTableItems()
Dim oRow As Row
Dim oCell As Cell
Dim sCellText As String
 Turn on error checking.
On Error GoTo ErrorHandler
For Each tbl In ActiveDocument.Tables
        x = x + 1
        ' Loop through each row in the table.
        For Each oRow In ActiveDocument.Tables(x).Rows
                
                ' Loop through each cell in the current row.
                For Each oCell In oRow.Cells
                        ' Set sCellText equal to text of the cell.
                        ' Note: This section can be modified to suit
                        ' your programming purposes.
                        sCellText = oCell.Range
                        ' Debug.Print sCellText
                        oCell.Range.Font.Size = 10
                        
                        oCell.Range.Font.ColorIndex = 1
                        ' Remove table cell markers from the text.
                        ' sCellText = Left$(sCellText, Len(sCellText) - 2)
                        'MsgBox sCellText
                        
                Next oCell
                
        Next oRow
Next ' TABLE
ErrorHandler:
If Err <> 0 Then
        Dim Msg As String
        Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description _
        & Chr(13) & "Make sure there is a table in the current document."
        MsgBox Msg, , "Error"
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub color_cells()
Dim oRow As Row
Dim oCell As Cell
Dim sCellText As String
 Turn on error checking.
On Error GoTo ErrorHandler
For Each tbl In ActiveDocument.Tables
        x = x + 1
        ' Loop through each row in the table.
        For Each oRow In ActiveDocument.Tables(x).Rows
                
                ' Loop through each cell in the current row.
                For Each oCell In oRow.Cells
                        ' Set sCellText equal to text of the cell.
                        ' Note: This section can be modified to suit
                        ' your programming purposes.
                        sCellText = oCell.Range
                        ' Debug.Print sCellText
                        ' oCell.Range.Font.ColorIndex = 1
                        If Left(sCellText, 5) = "AMBER" Then oCell.Range.Font.TextColor = RGB(222, 0, 0)
                                
                                If InStr(1, sCellText, "AMBER") Then oCell.Range.Shading.ForegroundPatternColor = RGB(5, 55, 880)
                                        If InStr(1, sCellText, "AMBER") Then oCell.Range.Font.TextColor = RGB(222, 0, 0)
                                                
                                                
                                                
                                                oCell.Range.Font.Size = 10
                                                
                                                
                                                
                                                ' Remove table cell markers from the text.
                                                ' sCellText = Left$(sCellText, Len(sCellText) - 2)
                                                'MsgBox sCellText
                                                
                                        Next oCell
                                        
                                Next oRow
                        Next ' TABLE
                        ErrorHandler:
                        If Err <> 0 Then
                                Dim Msg As String
                                Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description _
                                & Chr(13) & "Make sure there is a table in the current document."
                                MsgBox Msg, , "Error"
                        End If
                        
End Sub
Attribute VB_Name = "header_footer_imagex"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub header_footer_image()
Call EditHeadersAndFooters
Call Insert_SqWrap_Image ' InsertImage
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub EditHeadersAndFooters()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = "ISO 14001 2015 ENVIRONMENTAL MANAGEMENT"
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 22
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub EditHeadersAndFooters_tri()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZ.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub EditHeadersAndFooters_XZXZXZ()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImage()
Dim imagePath As String
imagePath = "C:\\picture.jpg"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, _
LinkToFile:=False, _
SaveWithDocument:=True, _
Left:=370, _
Top:=-30, _
Anchor:=Selection.Range, _
Width:=60, _
Height:=60
Anchor:=Selection.Range, _
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Insert_SqWrap_Image()
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
With shp
.WrapFormat.Type = wdWrapSquare
.Left = 380
.Top = -50
.Width = 70
.Height = 70
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AddImageToHeader()
PURPOSE: Insert an image into a Word document heading
SOURCE: www.TheSpreadsheetGuru.com
Dim SrcePath As String
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\x1i-GEQY.png"
ThisDocument.Sections.Item(1).Headers(wdHeaderFooterPrimary) _
.Range.InlineShapes.AddPicture (SrcePath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Word_Insert_Image_in_Header()
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim oWD As Word.Document
Set oWD = ActiveDocument
With oWD.Sections(1)
.Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
.Headers(wdHeaderFooterPrimary).Range.Text = "Text as Header"
 .Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphRight
 .Headers(wdHeaderFooterPrimary).Range.InlineShapes.AddPicture SrcePath
End With
End Sub
Public Function ChangeHeadersAndFooters()
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .Headers(wdHeaderFooterPrimary).LinkToPrevious = True
        .Headers(wdHeaderFooterPrimary).Range.Text = "Koptekst vanaf pagina 2"
        .Footers(wdHeaderFooterPrimary).Range.Text = "Voettekst vanaf pagina 2"
        End With
Next i
ActiveDocument.Sections(1).PageSetup.DifferentFirstPageHeaderFooter = True
ActiveDocument.Sections(1).Headers(wdHeaderFooterFirstPage).Range.Text = "test"
With ActiveDocument.Sections(1)
.PageSetup.DifferentFirstPageHeaderFooter = True
.Headers(wdHeaderFooterFirstPage).LinkToPrevious = False
.Headers(wdHeaderFooterFirstPage).Range.Text = "eerste pagina koptekst"
.Footers(wdHeaderFooterFirstPage).Range.Text = "eerste pagina voettekst"
End With
Attribute VB_Name = "temp_buttons"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button1()
Call name_doc
Call EditHeadersAndFooters_tri
Call PDF
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button2()
Call quote_cal_12_blk
Call EditHeadersAndFooters_XZXZXZ
Call PDF
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button3()
Call header_footer_image
Selection.Font.Size = 10
Selection.Font.Name = "Calibri"
Selection.Font.ColorIndex = wdBlack
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button4()
Call header_footer_image
Call PDFtext.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button8()
With Selection.Tables(1).Rows
.WrapAroundText = True
.HorizontalPosition = wdTableLeft
.RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
.DistanceLeft = CentimetersToPoints(0.32)
.DistanceRight = CentimetersToPoints(0.32)
.VerticalPosition = CentimetersToPoints(0)
.RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
.DistanceTop = CentimetersToPoints(0)
.DistanceBottom = CentimetersToPoints(0)
.AllowOverlap = False
End With
End Sub
Attribute VB_Name = "word_templates_opath"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ChangeAttachedTemplate()
Dim oDoc As Document  'make sure you're getting info on the right document
Set oDoc = ActiveDocument
If oDoc.Type = wdTypeTemplate Then Exit Sub
        Dim oTemplate As Template
        Dim strTemplatePath
        Set oTemplate = oDoc.AttachedTemplate
        If InStr(UCase(oTemplate.FullName), "OLDPATH") > 0 Then
                oDoc.AttachedTemplate = "FULLNEWPATH" & oTemplate.Name
        End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub FindTemplate()
MsgBox ThisDocument.AttachedTemplate.FullName
MsgBox ActiveDocument.AttachedTemplate.FullName
x = ActiveDocument.AttachedTemplate.FullName
Debug.Print x
End Sub
Attribute VB_Name = "temp_nameword"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub name_doc()
For p = 1 To ActiveDocument.Paragraphs.Count
        
        
        x = x & ActiveDocument.Paragraphs(p).Range.Text
        
        If Len(x) > 50 Then Exit For
                
        Next p
        For q = 1 To 47
                x = Replace(x, Chr(q), " ")
                x = Replace(x, "  ", " ")
        Next q
        For q = 58 To 64
                x = Replace(x, Chr(q), " ")
                x = Replace(x, "  ", " ")
        Next q
        fname = ActiveDocument.Path & "\CMI_" & Trim(x)
        Debug.Print fname
        
        ActiveDocument.SaveAs FileName:=fname
End Sub
Attribute VB_Name = "XFINDANDREPLACE"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST()
XFIND = "(yes)"
XREPLACE = "(YES)"
Call XFINDANDREPLACE(XFIND, XREPLACE)
Call XFINDANDREPLACE("(PARTIALLY)", "(PARTIALLY)")
Call XFINDANDREPLACE("(NO)", "(NO)")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function XFINDANDREPLACE(XFIND, XREPLACE)
Macro1 Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
Selection.Find.Replacement.Font.Bold = True
With Selection.Find
.Text = XFIND
.Replacement.Text = XREPLACE
.Forward = True
.Wrap = wdFindContinue
.Format = True
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
End Function
Attribute VB_Name = "Module2"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test876()
xtext = "The cat sat on the mat and did "
x = reverse_string(6, xtext, " ")
Debug.Print Right(xtext, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function reverse_string(xno, xtext, XFIND)
xlen = Len(xtext)
For Z = xlen To 1 Step -1 ' go backwards
        If Mid(xtext, Z, 1) = XFIND Then xqty = xqty + 1
                If xqty = xno Then Exit For
                        
                Next Z
                xresult = xlen - Z
                reverse_string = xresult
                
End Function
Attribute VB_Name = "ScreenPrintx"
Declare Windows API Functions
Private Declare Sub keybd_event Lib "user32" (ByVal bVk As Byte, ByVal _
bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
Declare Virtual Key Codes
Private Const VK_SNAPSHOT = &H2C
Private Const VK_KEYUP = &H2
Private Const VK_MENU = &H12
Public Const VK_TAB = &H9
Public Const VK_ENTER = &HD
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ScreenPrint()
Press Alt + TAB Keys -- Step1
Alt_Tab
Press Print Screen key using Windows API -- Step2.
keybd_event VK_SNAPSHOT, 1, 0, 0 'Print Screen key down
keybd_event VK_SNAPSHOT, 1, VK_KEYUP, 0 'Print key Up - Screenshot to Clipboard
Paste Image in Chart and Export it to Image file. -- Step3
Charts.Add
ThisWorkbook.Charts(1).AutoScaling = True
ThisWorkbook.Charts(1).Paste
ThisWorkbook.Charts(1).Export FileName:="E:\ClipBoardToPic.jpg", FilterName:="jpg"
Supress warning message and Delete the Chart
Application.DisplayAlerts = False
ThisWorkbook.Charts(1).Delete
Application.DisplayAlerts = True
Attach the file to Excel -- Step4
Attach_File
ThisWorkbook.Activate
ThisWorkbook.Sheets(1).Select
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Alt_Tab()
DoEvents
keybd_event VK_MENU, 1, 0, 0 'Alt key down
DoEvents
keybd_event VK_TAB, 0, 0, 0 'Tab key down
DoEvents
keybd_event VK_TAB, 1, VK_KEYUP, 0 'Tab key up
DoEvents
keybd_event VK_ENTER, 1, 0, 0 'Tab key down
DoEvents
keybd_event VK_ENTER, 1, VK_KEYUP, 0 'Tab key up
DoEvents
keybd_event VK_MENU, 1, VK_KEYUP, 0 'Alt key up
DoEvents
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Attach_File()
ActiveCell.Select
ActiveSheet.OLEObjects.Add(FileName:="E:\ClipBoardToPic.jpg", Link:=False, _
DisplayAsIcon:=True, IconFileName:= _
"C:\Program Files\Internet Explorer\iexplore.exe", IconIndex:=10, IconLabel _
:="ClipBoardToPic.jpg").Select
End Sub
Attribute VB_Name = "images_word_pictures"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImages()
http://word.tips.net/T010726_Inserting_Multiple_Graphics_in_a_Document.html
Dim doc As Word.Document
Dim fd As FileDialog
Dim vItem As Variant
Dim mg1 As Range
Dim mg2 As Range
Set fd = Application.FileDialog(msoFileDialogFilePicker)
Set doc = ActiveDocument
With fd
.Filters.Add "Images", "*.gif; *.jpg; *.jpeg", 1
.FilterIndex = 1
If .Show = -1 Then
        For Each vItem In .SelectedItems
                Set mg2 = ActiveDocument.Range
                mg2.Collapse wdCollapseEnd
                doc.InlineShapes.AddPicture _
                FileName:=vItem, _
                LinkToFile:=False, SaveWithDocument:=True, Range:=mg2
                Set mg1 = ActiveDocument.Range
                mg1.Collapse wdCollapseEnd
                
                mg1.Text = vbCrLf & vbCrLf
        Next vItem
End If
End With
Set fd = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub GetPictures()
Dim sPic As String
Dim sPath As String
sPath = "V:\Data2016\RichardRolfe\XZXZXZ_LeanPM (Film)\" 'c:\myfolder\"
sPic = Dir(sPath & "*.png")
Do While sPic <> ""
        Selection.InlineShapes.AddPicture _
        FileName:=sPath & sPic, _
        LinkToFile:=False, SaveWithDocument:=True
        sPic = Dir
        Selection.TypeParagraph
        Selection.TypeParagraph
        Loop
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_resize_tim()
x = ActiveDocument.InlineShapes.Count
For i = 1 To x
        ActiveDocument.InlineShapes(i).Height = 200 ' * 1.2
        ActiveDocument.InlineShapes(i).Width = 300 '* 1.2
        
        
        
        
Next i
MsgBox x
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ResizePics()
Dim shp As Word.Shape
Dim ishp As Word.InlineShape
If Word.Selection.Type <> wdSelectionInlineShape And _
        Word.Selection.Type <> wdSelectionShape Then
        Exit Sub
End If
If Word.Selection.Type = wdSelectionInlineShape Then
        Set ishp = Word.Selection.Range.InlineShapes(1)
        ishp.LockAspectRatio = False
        ishp.Height = 55 'InchesToPoints(1.78)
        ishp.Width = 44 'InchesToPoints(3.17)
        Else
        If Word.Selection.Type = wdSelectionShape Then
                Set shp = Word.Selection.ShapeRange(1)
                shp.LockAspectRatio = False
                shp.Height = 33 'InchesToPoints(1.78)
                shp.Width = 22 'InchesToPoints(3.17)
        End If
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ResizePics_all()
Dim shp As Word.Shape
Dim ishp As Word.InlineShape
If Word.Selection.Type <> wdSelectionInlineShape And _
        Word.Selection.Type <> wdSelectionShape Then
        Exit Sub
End If
If Word.Selection.Type = wdSelectionInlineShape Then
        Set ishp = Word.Selection.Range.InlineShapes(1)
        ishp.LockAspectRatio = False
        ishp.Height = 55 'InchesToPoints(1.78)
        ishp.Width = 44 'InchesToPoints(3.17)
        Else
        If Word.Selection.Type = wdSelectionShape Then
                Set shp = Word.Selection.ShapeRange(1)
                shp.LockAspectRatio = False
                shp.Height = 33 'InchesToPoints(1.78)
                shp.Width = 22 'InchesToPoints(3.17)
        End If
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImage()
Dim imagePath As String
imagePath = "C:\\picture.jpg"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, _
LinkToFile:=False, _
SaveWithDocument:=True, _
Left:=370, _
Top:=-30, _
Anchor:=Selection.Range, _
Width:=60, _
Height:=60
Anchor:=Selection.Range, _
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function Insert_bunch_images(fname)
imagePath = fname ' "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
 Selection.TypeParagraph
  Selection.TypeText Text:="Title" & fname
 Selection.TypeParagraph
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
  Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True)
With shp
 .WrapFormat.Type = 4  'wdWrapSquare
.WrapFormat.Type = wdWrapInline
.Width = 500
.Height = 500
End With
Selection.TypeParagraph
Selection.TypeText Text:="Title" & fname
Selection.TypeParagraph
End Function
Private Sub cmdFileDialog_Click()
Requires reference to Microsoft Office 12.0 Object Library.
Dim fDialog As Office.FileDialog
Dim varFile As Variant
Set up the File Dialog.
Set fDialog = Application.FileDialog(msoFileDialogFilePicker)
With fDialog
Allow user to make multiple selections in dialog box.
.AllowMultiSelect = True
Set the title of the dialog box.
.Title = "Please select one or more files"
Clear out the current filters, and add our own.
.Filters.Clear
.Filters.Add "Access Databases", "*.MDB; *.ACCDB"
.Filters.Add "Access Projects", "*.ADP"
.Filters.Add "All Files", "*.png"
Show the dialog box. If the .Show method returns True, the
user picked at least one file. If the .Show method returns
False, the user clicked Cancel.
If .Show = True Then
        'Loop through each file selected and add it to the list box.
        For Each varFile In .SelectedItems
                'Me.FileList.AddItem varFile
                Debug.Print varFile
                Call Insert_bunch_images(varFile)
                Next
                Else
                MsgBox "You clicked Cancel in the file dialog box."
        End If
        End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Insert_SqWrap_Image()
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
With shp
.WrapFormat.Type = wdWrapSquare
.Left = 380
.Top = -50
.Width = 70
.Height = 70
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AddImageToHeader()
PURPOSE: Insert an image into a Word document heading
SOURCE: www.TheSpreadsheetGuru.com
Dim SrcePath As String
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\x1i-GEQY.png"
ThisDocument.Sections.Item(1).Headers(wdHeaderFooterPrimary) _
.Range.InlineShapes.AddPicture (SrcePath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Word_Insert_Image_in_Header()
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim oWD As Word.Document
Set oWD = ActiveDocument
With oWD.Sections(1)
.Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
.Headers(wdHeaderFooterPrimary).Range.Text = "Text as Header"
 .Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphRight
 .Headers(wdHeaderFooterPrimary).Range.InlineShapes.AddPicture SrcePath
End With
End Sub
Attribute VB_Name = "SELETEXTX"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xlist()
xlist Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
.Text = ";"
.Replacement.Text = ";^p"
.Forward = True
.Wrap = wdFindAsk
.Format = False
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
Selection.Sort ExcludeHeader:=False, FieldNumber:="Paragraphs", _
SortFieldType:=wdSortFieldAlphanumeric, SortOrder:=wdSortOrderAscending, _
FieldNumber2:="", SortFieldType2:=wdSortFieldAlphanumeric, SortOrder2:= _
wdSortOrderAscending, FieldNumber3:="", SortFieldType3:= _
wdSortFieldAlphanumeric, SortOrder3:=wdSortOrderAscending, Separator:= _
wdSortSeparateByTabs, SortColumn:=False, CaseSensitive:=False, LanguageID _
:=wdEnglishUK, SubFieldNumber:="Paragraphs", SubFieldNumber2:= _
"Paragraphs", SubFieldNumber3:="Paragraphs"
With ListGalleries(wdBulletGallery).ListTemplates(1).ListLevels(1)
.NumberFormat = ChrW(61623)
.TrailingCharacter = wdTrailingTab
.NumberStyle = wdListNumberStyleBullet
.NumberPosition = CentimetersToPoints(0.63)
.Alignment = wdListLevelAlignLeft
.TextPosition = CentimetersToPoints(1.27)
.TabPosition = wdUndefined
.ResetOnHigher = 0
.StartAt = 1
With .Font
.Bold = wdUndefined
.Italic = wdUndefined
.StrikeThrough = wdUndefined
.Subscript = wdUndefined
.Superscript = wdUndefined
.Shadow = wdUndefined
.Outline = wdUndefined
.Emboss = wdUndefined
.Engrave = wdUndefined
.AllCaps = wdUndefined
.Hidden = wdUndefined
.Underline = wdUndefined
.Color = wdUndefined
.Size = wdUndefined
.Animation = wdUndefined
.DoubleStrikeThrough = wdUndefined
.Name = "Symbol"
End With
.LinkedStyle = ""
End With
ListGalleries(wdBulletGallery).ListTemplates(1).Name = ""
Selection.Range.ListFormat.ApplyListTemplateWithLevel ListTemplate:= _
ListGalleries(wdBulletGallery).ListTemplates(1), ContinuePreviousList:= _
False, ApplyTo:=wdListApplyToWholeList, DefaultListBehavior:= _
wdWord10ListBehavior
Selection.Range.ListFormat.RemoveNumbers NumberType:=wdNumberParagraph
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub draft()
draft Macro
ActiveDocument.Sections(1).Range.Select
ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
Selection.HeaderFooter.Shapes.AddTextEffect( _
PowerPlusWaterMarkObject4559526, "DISCUSSION DRAFT ", "Calibri", 1, False _
, False, 0, 0).Select
 Selection.ShapeRange.Name = "PowerPlusWaterMarkObject4559526"
Selection.ShapeRange.TextEffect.NormalizedHeight = False
Selection.ShapeRange.Line.Visible = False
Selection.ShapeRange.Fill.Visible = True
Selection.ShapeRange.Fill.Solid
Selection.ShapeRange.Fill.ForeColor.RGB = RGB(192, 192, 192)
Selection.ShapeRange.Fill.Transparency = 0.5
Selection.ShapeRange.Rotation = 315
Selection.ShapeRange.LockAspectRatio = True
Selection.ShapeRange.Height = CentimetersToPoints(3.74)
Selection.ShapeRange.Width = CentimetersToPoints(18.7)
Selection.ShapeRange.WrapFormat.AllowOverlap = True
Selection.ShapeRange.WrapFormat.Side = wdWrapNone
Selection.ShapeRange.WrapFormat.Type = 3
Selection.ShapeRange.RelativeHorizontalPosition = _
wdRelativeVerticalPositionMargin
Selection.ShapeRange.RelativeVerticalPosition = _
wdRelativeVerticalPositionMargin
Selection.ShapeRange.Left = wdShapeCenter
Selection.ShapeRange.Top = wdShapeCenter
ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_fmt()
On Error Resume Next
For x = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
        ActiveDocument.Tables(x).Rows.Height = InchesToPoints(0)
        For Row = 1 To ActiveDocument.Tables(x).Rows.Count
                For Col = 1 To ActiveDocument.Tables(x).Columns.Count
                        'ActiveDocument.Tables(X).Cell(Row, Col).Range.Text
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Size = 9
                        ' .Font.Size = 8
                        Next
                        Next
                        
                Next x
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_fmt2()
On Error Resume Next
For x = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
        ActiveDocument.Tables(x).Rows.Height = InchesToPoints(0)
        For Row = 1 To ActiveDocument.Tables(x).Rows.Count
                For Col = 1 To ActiveDocument.Tables(x).Columns.Count
                        'ActiveDocument.Tables(X).Cell(Row, Col).Range.Text
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Size = 9
                        ' .Font.Size = 8
                        Next
                        Next
                        'ActiveDocument.Tables(x).Style = "Light Shading - Accent 4"
                        ActiveDocument.Tables(x).Style = "Light List - Accent 1"
                        ActiveDocument.Tables(x).Style = "Light gRID - Accent 3"
                Next x
                
                
                
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_agenct_12_blue()
Selection.Font.Name = "Agency FB"
Selection.Font.Size = 10
Selection.Font.Size = 12
Selection.Font.ColorIndex = wdDarkBlue
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_cal_11_teal()
Selection.Font.Name = "CAlibri"
Selection.Font.Size = 10
Selection.Font.Size = 11
Selection.Font.Color = RGB(0, 128, 128)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_cal_12_blk()
Selection.Font.Name = "CAlibri"
Selection.Font.Size = 10
Selection.Font.Size = 12
Selection.Font.Color = RGB(0, 0, 0)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub fandr()
For xnumber = 1 To 9
        
        
        Selection.Find.ClearFormatting
        Selection.Find.Replacement.ClearFormatting
        With Selection.Find
        .Text = xnumber
        .Replacement.Text = "^p"
        .Forward = True
        .Wrap = wdFindAsk
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
        End With
        Selection.Find.Execute Replace:=wdReplaceAll
        Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub WHOAMI()
x = ActiveDocument.Name
y = ActiveDocument.Path & "\" & x
Z = InputBox(x, x, x)
Z = InputBox(y, y, y)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_extract()
xtext = Selection.Range.Text
xtext = Replace(xtext, vbCrLf, " ")
xtext = Replace(xtext, vbCr, " ")
xtext = Replace(xtext, vbLf, " ")
For q = 1 To 32
        xtext = Replace(xtext, Chr(q), " ")
Next q
xpage = Selection.Information(wdActiveEndPageNumber)
x = " '..." & xtext & "..' [Line: " & GetLineNum(Selection.Range) & " on page " & xpage & " ]"
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub WhereAmI()
MsgBox "Paragraph number: " & GetParNum(Selection.Range) & vbCrLf & _
"Absolute line number: " & GetAbsoluteLineNum(Selection.Range) & vbCrLf & _
"Relative line number: " & GetLineNum(Selection.Range)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetParNum(r As Range) As Integer
Dim rParagraphs As Range
Dim CurPos As Long
r.Select
CurPos = ActiveDocument.Bookmarks("\startOfSel").Start
Set rParagraphs = ActiveDocument.Range(Start:=0, End:=CurPos)
GetParNum = rParagraphs.Paragraphs.Count
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetLineNum(r As Range) As Integer
relative to current page
GetLineNum = r.Information(wdFirstCharacterLineNumber)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetAbsoluteLineNum(r As Range) As Integer
Dim i1 As Integer, i2 As Integer, Count As Integer, rTemp As Range
r.Select
Do
i1 = Selection.Information(wdFirstCharacterLineNumber)
Selection.GoTo what:=wdGoToLine, which:=wdGoToPrevious, Count:=1, Name:=""
Count = Count + 1
i2 = Selection.Information(wdFirstCharacterLineNumber)
Loop Until i1 = i2
r.Select
GetAbsoluteLineNum = Count
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xlist2line()
xlist2line Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
.Text = "^p"
.Replacement.Text = "; "
.Forward = True
.Wrap = wdFindAsk
.Format = False
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_ascii()
x = Selection
For q = 1 To Len(x)
        Z = Z & Mid(x, q, 1) & "(" & Asc(Mid(x, q, 1)) & ")"
        
Next q
Z = InputBox(Z, Z, Z)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_oneline()
x = Selection
x = Replace(x, Chr(7), " ")
x = Replace(x, Chr(10), " ")
x = Replace(x, vbCrLf, " ")
x = Replace(x, Chr(13), " ")
On Error Resume Next
For q = 1 To 31
        x = Replace(x, q, " ")
Next q
For q = 127 To 250
        x = Replace(x, q, " ")
Next q
fname = ActiveDocument.Path & "\TEMP23456.TXT"
Call PRINT_INFO(x, fname)
End Sub
Attribute VB_Name = "formsx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1_pdftext()
PDFtext.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1_userform4()
UserForm4.Show
End Sub
Attribute VB_Name = "Module1"
Attribute VB_Name = "NewMacros"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Macro1()
Attribute Macro1.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Macro1"
Macro1 Macro
Selection.Tables(1).Style = "Light Shading - Accent 5"
End Sub
Attribute VB_Name = "XZXZXZ_word_normal"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub A2_FORM1()
zzbuttons_highlands.Show
buttons.Show
ListCommentsFrm.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PrintScreen()
WordBasic.SendKeys "{prtsc}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub f3()
SendKeys "{f3}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub f9()
SendKeys "{f9}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub af8()
SendKeys "%{f8}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_infuse_font()
Selection.Font.Color = RGB(73, 23, 109)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_infuse_back()
Selection.Interior.Color = RGB(73, 23, 109)
Selection.Font.Color = RGB(0, 0, 0)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_list()
For c = 1 To ActiveDocument.Comments.Count
        Z = Z & vbCrLf & c & " " & ActiveDocument.Comments(c).Scope
        https://social.msdn.microsoft.com/Forums/en-US/9a109c23-e29d-49a2-a563-a4d4ea50659e/vba-word-get-line-number-of-comment-object?forum=isvvba
        
        p = "Page" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdActiveEndPageNumber)
        l = "Line" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdFirstCharacterLineNumber)
        
        x = x & vbCrLf & c & " " & ActiveDocument.Comments(c).Range.Text
        q = q & vbCrLf & vbCrLf & "Your text: '..." & ActiveDocument.Comments(c).Scope & "...' [" & p & l & "] Feedback: " & ActiveDocument.Comments(c).Range.Text
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_zap()
For c = ActiveDocument.Comments.Count To 1 Step -1
        ActiveDocument.Comments(c).Delete
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_quote()
For c = 1 To ActiveDocument.Comments.Count
        Z = Z & vbCrLf & c & " " & ActiveDocument.Comments(c).Scope
        https://social.msdn.microsoft.com/Forums/en-US/9a109c23-e29d-49a2-a563-a4d4ea50659e/vba-word-get-line-number-of-comment-object?forum=isvvba
        
        p = "Page" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdActiveEndPageNumber)
        l = "Line" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdFirstCharacterLineNumber)
        
        x = x & vbCrLf & c & " " & ActiveDocument.Comments(c).Range.Text
        q = q & vbCrLf & vbCrLf & "Your text: '..." & ActiveDocument.Comments(c).Scope & "...' [" & p & l & "] Feedback: " & ActiveDocument.Comments(c).Range.Text
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RemoveAllComments()
Dim n As Long
Dim oComments As Comments
Set oComments = ActiveDocument.Comments
For n = oComments.Count To 1 Step -1
        oComments(n).Delete
Next 'n
Set oComments = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Commentslist()
Dim n As Long
Dim oComments As Comments
Set oComments = ActiveDocument.Comments
For n = oComments.Count To 1 Step -1
        If oComments(n).Date > #2/29/2016# Then
                xc = xc + 1
                Debug.Print xc & " " & oComments(n).Range.Text & " (" & oComments(n).Author & " " & oComments(n).Date & ")"
                
        End If
        
Next 'n
Set oComments = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1()
x = "1=UserFormOutlookXZXZXZ, 2=UserFormInputOutput"
x = InputBox(x, x, x)
If x = 1 Then UserFormOutlookXZXZXZ.Show
        If x = 2 Then UserFormInputOutput.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub CreateAppt()
Dim myItem As Object
Dim myRequiredAttendee, myOptionalAttendee, myResourceAttendee As Outlook.Recipient
xtext1 = "DIARY: Meeting at location at time with person re subject"
xtext2 = "Regards, XZXZXZ0XZXZXZXZXZXZ051 Email XZXZXZ@XZXZXZXZXZXZXZXZXZ.com"
xtext3 = "(Copied to my other diaries)"
xtext4 = "T.XZXZXZ@HEALTH.GOV.JE; t.XZXZXZ@gov.je; XZXZXZ@XZXZXZXZXZXZXZXZXZ.com; tim.XZXZXZ@XZXZXZi.co; XZXZXZ@XZXZXZ.com"
Dim appOL As Object
Dim objReminder As Object
Set appOL = GetObject(, "Outlook.application")
Set myItem = appOL.CreateItem(olAppointmentItem)
myItem.MeetingStatus = olMeeting
myItem.Subject = xtext1
myItem.Body = xtext1 & vbCrLf & xtext2 & vbCrLf & xtext3
myItem.Location = ""
myItem.Start = #9/24/2009 1:30:00 PM#
myItem.Start = Now()
myItem.Duration = 90
Set myRequiredAttendee = myItem.Recipients.Add("Nate Sun")
Set myRequiredAttendee = myItem.Recipients.Add(xtext4)
myRequiredAttendee.Type = olRequired
Set myOptionalAttendee = myItem.Recipients.Add("Kevin Kennedy")
Set myOptionalAttendee = myItem.Recipients.Add(xtext3)
myOptionalAttendee.Type = olOptional
Set myResourceAttendee = myItem.Recipients.Add(xtext3)
myResourceAttendee.Type = olResource
myItem.Display
myItem.Send
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_save_temp()
xdate = Format(Now, "yymmdd")
x = "V:\Data2017\temp\zztemp" & xdate
ActiveDocument.SaveAs FileName:=x, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
x = x & ".docx"
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_saveas()
fname1 = ActiveDocument.Path & "\" & ActiveDocument.Name
xdate = Format(Now, "yymmdd")
fname2 = Replace(fname1, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=fname2, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
ActiveDocument.SaveAs FileName:=fname1, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
x = fname1
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST()
Debug.Print ActiveDocument.Path & "\" & ActiveDocument.Name
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub saveas_timed()
xpath = ActiveDocument.Path & "\"
xdate = Format(Now, "yyyymmdd HHMM")
xname = xpath & ActiveDocument.Name
xname2 = Replace(xname, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=xname2
ActiveDocument.SaveAs FileName:=xname
x = xname2
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub whoami()
x = ActiveDocument.Path & "\" & ActiveDocument.Name
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_resize()
Dim i As Long
With ActiveDocument
For i = 1 To .InlineShapes.Count
        With .InlineShapes(i)
        .ScaleHeight = 50
        .ScaleWidth = 50
        End With
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ScalePictures40()
Dim i As Long
With ActiveDocument
For i = 1 To .InlineShapes.Count
        With .InlineShapes(i)
        .ScaleHeight = 40
        .ScaleWidth = 40
        End With
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AA_addautotext()
http://msdn.microsoft.com/en-us/library/office/ff195437.aspx
NormalTemplate.AutoTextEntries("#test1").Value = "The Johnson Company"
Dim XAUTOTEXT_HANDLE As String
Dim p As Integer
XAUTOTEXT_HANDLE = "#zz" 'Left(Trim(Selection.Range), 4)
p = InStr(1, Selection.Range, ".")
XAUTOTEXT_HANDLE = Left(Trim(Selection.Range), p)
MsgBox XAUTOTEXT_HANDLE
NormalTemplate.AutoTextEntries.Add Name:=XAUTOTEXT_HANDLE, Range:=Selection.Range
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ListAutoText()
Dim oAutoText   As Word.AutoTextEntry
With Application
 \\ Turn screenupdating off
.ScreenUpdating = False
 \\ Add new document
.Documents.Add
 \\ Loop through all Autotext entries in Normal.dot
For Each oAutoText In NormalTemplate.AutoTextEntries
        ' \\ Work with selection
        With .Selection
        ' \\ Make all Autotext names Bold
        .Font.Bold = True
        .TypeText Text:=oAutoText.Name
        .TypeParagraph ' \\ Insert Para
        
        ' \\ Turn of Bold for the Autotext entries
        .Font.Bold = False
        ' \\ Insert entry
        oAutoText.Insert Where:=.Range, RichText:=True
        
        ' \\ Insert two paragraphs
        .TypeParagraph
        .TypeText Text:="==============================================="
        .TypeParagraph
        End With
        Next
        
        ' \\ Turn screenupdating back on
        .ScreenUpdating = True
        End With
        xdate = Format(Now, "yyyymmdd")
        fname = "V:\Data2017\VBA\VBAWord\word_autotext_backup" & xdate & ".docx"
        ActiveDocument.SaveAs FileName:=fname
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function halfdays(x)
halfdays = Int(x)
If x > Int(x) + 0.49 Then halfdays = Int(x) + 0.5
        
End Function
Call ports2013_headings_multi_function("Normal", "Calibri", 11, "", wdBlue)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub bold_2hyphen()
Dim oPara As Paragraph
Dim xpos As Integer
For Each oPara In ActiveDocument.Paragraphs
For Each oPara In Selection.Paragraphs
        Debug.Print oPara.Range.Text
        '      If oPara.Range.Words(2).Characters(1) = ":" Then
        oPara.Range.Words(1).Font.Bold = True
        xpos = InStr(1, oPara.Range.Text, "-")
        For c = 1 To xpos
                oPara.Range.Characters(c).Font.Bold = True
        Next c
        '     End If
Next oPara
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub bold_firstword()
Dim oPara As Paragraph
For Each oPara In ActiveDocument.Paragraphs
For Each oPara In Selection.Paragraphs
        
        '      If oPara.Range.Words(2).Characters(1) = ":" Then
        oPara.Range.Words(1).Font.Bold = True
        oPara.Range.Characters(2).Font.Bold = False
        '     End If
Next oPara
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2017_Candara()
xfont = "Candara"
XSIZE = 11
fnormal = 11
XCOLOR1 = RGB(0, 128, 128)
XCOLOR2 = RGB(128, 32, 0)
XCOLOR3 = RGB(128, 96, 0)
XCOLOR4 = RGB(64, 0, 128)
Call set2016_headings("Heading 1", xfont, 14, "bold", XCOLOR1)
Call set2016_headings("Heading 2", xfont, 12, "bold", XCOLOR2)
Call set2016_headings("Heading 3", xfont, 12, "bold", XCOLOR3)
Call set2016_headings("Heading 4", xfont, 12, "bold", XCOLOR4)
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2017_calibri()
xfont = "Calibri"
XSIZE = 13
fnormal = 13
XCOLOR1 = RGB(0, 128, 128)
XCOLOR2 = RGB(128, 32, 0)
XCOLOR3 = RGB(128, 96, 0)
XCOLOR4 = RGB(64, 0, 128)
Call set2016_headings("Heading 1", xfont, 14, "bold", XCOLOR1)
Call set2016_headings("Heading 2", xfont, 12, "bold", XCOLOR2)
Call set2016_headings("Heading 3", xfont, 12, "bold", XCOLOR3)
Call set2016_headings("Heading 4", xfont, 12, "bold", XCOLOR4)
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2017_gothic()
xfont = "Century Gothic"
XSIZE = 10
fnormal = 10
XCOLOR1 = RGB(0, 128, 128)
XCOLOR2 = RGB(128, 32, 0)
XCOLOR3 = RGB(128, 96, 0)
XCOLOR4 = RGB(64, 0, 128)
Call set2016_headings("Heading 1", xfont, 14, "bold", XCOLOR1)
Call set2016_headings("Heading 2", xfont, 12, "bold", XCOLOR2)
Call set2016_headings("Heading 3", xfont, 12, "bold", XCOLOR3)
Call set2016_headings("Heading 4", xfont, 12, "bold", XCOLOR4)
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD()
For p = 1 To ActiveDocument.Paragraphs.Count
        
        If ActiveDocument.Paragraphs(p).Range.Information(wdWithInTable) Then
                'What ever you'd like to do
                'skip
                Else
                
                
                If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                        xtext = ActiveDocument.Paragraphs(p).Range.Text
                        If UCase(xtext) = xtext Then
                                ActiveDocument.Paragraphs(p).Range.Font.Size = 12
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 128, 128)
                                ' ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 80, 80)
                                
                                If InStr(1, UCase(xtext), UCase("Appendix")) Then
                                        ActiveDocument.Paragraphs(p).Range.Font.Size = 18
                                End If
                                
                                
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                End If
                
        End If
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub highlight_asterix()
For p = 1 To ActiveDocument.Paragraphs.Count
        x = ActiveDocument.Paragraphs(p).Range.Text
        If Left(x, 1) = "*" Then
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 80, 80) ' RGB(255, 0, 0)
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(200, 0, 0) ' RGB(255, 0, 0)
                
                Z = Z & vbCrLf & x
        End If
        
        
Next p
fname = ActiveDocument.Path & "\zztemp45678.txt"
Call PRINT_INFO(Z, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD_XZXZXZ()
XCOLOR1 = RGB(0, 128, 128)
XCOLOR2 = RGB(128, 32, 0)
XCOLOR3 = RGB(128, 96, 0)
XCOLOR4 = RGB(64, 0, 128)
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range.Text
        If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                        
                        
                        If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = XCOLOR1 ' RGB(255, 0, 0)
                                Else
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = XCOLOR1 ' RGB(0, 80, 80)
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                        
                        If InStr(1, UCase(xtext), UCase("APPENDIX")) Then ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                        End If
                End If
                
                
        Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD_infuse()
infuse = RGB(73, 23, 109)
For p = 1 To ActiveDocument.Paragraphs.Count
        
        
        If ActiveDocument.Paragraphs(p).Range.Information(wdWithInTable) Then
                'What ever you'd like to do
                'skip
                Else
                xtext = ActiveDocument.Paragraphs(p).Range.Text
                If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                        If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                                
                                
                                If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                        ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                        ActiveDocument.Paragraphs(p).Range.Font.Color = infuse
                                        ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                                        
                                        Else
                                        ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                        ActiveDocument.Paragraphs(p).Range.Font.Color = infuse
                                        Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                                End If
                                
                                If InStr(1, UCase(xtext), UCase("APPENDIX")) Then ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                                End If
                        End If
                        
                End If
        Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_format_text()
text_to_find = "1234567890"
For p = 1 To ActiveDocument.Paragraphs.Count
        found_text = Left(ActiveDocument.Paragraphs(p).Range.Text, 1)
        If InStr(1, text_to_find, found_text) Then
                
                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
                ActiveDocument.Paragraphs(p).Range.Font.Size = 16
                
        End If
        
        
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_legal_para()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range.Text
        
        For q = 1 To 9
                If Left(xtext, 1) = CStr(q) Then
                        ActiveDocument.Paragraphs(p).Range.Text = "~" & ActiveDocument.Paragraphs(p).Range.Text
                End If
        Next q
        x = 0
        looktext = Left(Trim(xtext), 6)
        x = count_find(looktext, ".")
        
        If x = 2 Then
                ActiveDocument.Paragraphs(p).Range.Text = "~" & vbTab & ActiveDocument.Paragraphs(p).Range.Text
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 200, 0)
                Debug.Print looktext, x, ActiveDocument.Paragraphs(p).Range.Text
        End If
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function count_find(xtext, thingtofind)
Dim xc As Integer
xc = 0
For c = 1 To Len(xtext)
        If Mid(xtext, c, 1) = thingtofind Then xc = xc + 1
        Next c
        count_find = xc
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_extract_text()
text_to_find = "Appendix"
For p = 1 To ActiveDocument.Paragraphs.Count
        If InStr(1, ActiveDocument.Paragraphs(p).Range.Text, text_to_find) Then
                xc = xc + 1
                x = x & " " & xc & ". " & ActiveDocument.Paragraphs(p).Range.Text & vbCrLf
                '' ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
        End If
        
        
        
Next p
Z = Replace(x, Chr(13), "")
Z = Replace(Z, text_to_find, ",  ")
Debug.Print x
Debug.Print LCase(Z)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function set2016_headings(xstyle, xfont, XSIZE, xbold, xcolor)
With ActiveDocument.Styles(xstyle).Font
.Name = xfont
.Size = XSIZE
.Bold = False
.Italic = False
If Len(xbold) > 1 Then .Bold = True
        
        'http://dmcritchie.mvps.org/excel/colors.htm
        .ColorIndex = wdBlack
        .ColorIndex = wdBlack
        
        
        If Len(xcolor) > 0 Then
                If xcolor > 10 Then
                        .Color = xcolor
                        Else
                        .ColorIndex = xcolor
                End If
        End If
        
        
        End With
        xindent = 0
        If xstyle = "Heading 1" Then xindent = 0
                If xstyle = "Heading 2" Then xindent = 0
                        If xstyle = "Heading 3" Then xindent = 0 '2
                                If xstyle = "Heading 4" Then xindent = 0 '3
                                        
                                        With ActiveDocument.Styles(xstyle).ParagraphFormat
                                        .LeftIndent = CentimetersToPoints(xindent)
                                        .RightIndent = CentimetersToPoints(0)
                                        .FirstLineIndent = CentimetersToPoints(1.5)
                                        
                                        .TabStops.ClearAll
                                        
                                        .SpaceBefore = 0
                                        .SpaceBeforeAuto = False
                                        .SpaceAfter = 0
                                        .SpaceAfterAuto = False
                                        .LineSpacingRule = wdLineSpace0pt0
                                        .Alignment = wdAlignParagraphLeft
                                        .WidowControl = True
                                        .KeepWithNext = False
                                        .KeepTogether = False
                                        .PageBreakBefore = False
                                        .NoLineNumber = False
                                        .Hyphenation = True
                                        .FirstLineIndent = CentimetersToPoints(0)
                                        .OutlineLevel = wdOutlineLevelBodyText
                                        .CharacterUnitLeftIndent = 0
                                        .CharacterUnitRightIndent = 0
                                        
                                        .LineUnitBefore = 0
                                        .LineUnitAfter = 0
                                        .MirrorIndents = False
                                        .TextboxTightWrap = wdTightNone
                                        End With
                                        
                                        
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test01()
Call attach_word_file
Call attach_excel_file
Call attach_ppt_file
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_word_file()
fname = "H:\XZXZXZD_ReOrg\Updates\XZXZXZD_ReDesign_Update No001.docx"
xlabel = "XZXZXZD_ReDesign_Update No001.docx"
Selection.InlineShapes.AddOLEObject ClassType:="Word.Document.12", _
FileName:=fname, _
LinkToFile:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\PROGRA~1\MICROS~2\Office12\Moc.exe", IconIndex:=7, IconLabel:= _
xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_excel_file()
fname = "H:\XZXZXZD_ReOrg\Initiation\XZXZXZD Governance Stakeholder Map v1.xlsm"
xlabel = "XZXZXZD Governance Stakeholder Map v1.xlsm"
Selection.InlineShapes.AddOLEObject ClassType:= _
"Excel.SheetMacroEnabled.12", FileName:= _
fname, _
LinkToFile:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\PROGRA~1\MICROS~2\Office12\Moc.exe", IconIndex:=10, IconLabel:= _
xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_ppt_file()
fname = "H:\XZXZXZD_ReOrg\Initiation\XZXZXZD_Initiation_Presentation.pptm"
xlabel = "XZXZXZD_Initiation_Presentation.pptm"
Selection.InlineShapes.AddOLEObject ClassType:= _
"PowerPoint.ShowMacroEnabled.12", FileName:= _
fname, LinkToFile _
:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\WINDOWS\Installer\{90120000-0011-0000-0000-0000000FF1CE}\pptico.exe", _
IconIndex:=19, IconLabel:=xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF2PRINT()
ppath = "z:\print" & "\" & ActiveDocument.Name
ppath = Replace(ppath, ".docx", ".pdf")
ppath = Replace(ppath, ".doc", ".pdf")
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
Call DeleteFile(FName)
ActiveDocument.ExportAsFixedFormat OutputFileName:= _
fname _
, ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
wdExportOptimizeForOnScreen, Range:=wdExportAllDocument, From:=1, To:=1, _
Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
BitmapMissingFonts:=True, UseISO19005_1:=False
 ChangeFileOpenDirectory "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\"
 MsgBox "DONE"
x = fname
FileCopy fname, ppath
x = InputBox(x, x, x)
x = InputBox(ppath, ppath, ppath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF2parent_dir()
newpath = getParentFolder2(ActiveDocument.Path & "\") & "\"
oldpath = ActiveDocument.Path & "\"
Call PDF
fname = ActiveDocument.Name
fname = Replace(fname, ".docm", ".pdf")
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
FileCopy oldpath & fname, newpath & fname
ReturnValue = Shell("explorer.EXE " & newpath, 1)  ' Run Calculator.
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function getParentFolder2(ByVal strFolder0)
Dim strFolder
strFolder = Left(strFolder0, InStrRev(strFolder0, "\") - 1)
getParentFolder2 = Left(strFolder, InStrRev(strFolder, "\") - 1)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF()
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
fname = Replace(fname, ".docm", ".pdf")
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
Call DeleteFile(FName)
ActiveDocument.ExportAsFixedFormat OutputFileName:= _
fname _
, ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
wdExportOptimizeForOnScreen, Range:=wdExportAllDocument, From:=1, To:=1, _
Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
BitmapMissingFonts:=True, UseISO19005_1:=False
 ChangeFileOpenDirectory "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\"
 MsgBox "DONE"
x = fname
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function FileExists(ByVal FileToTest As String) As Boolean
FileExists = (Dir(FileToTest) <> "")
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub DeleteFile(ByVal FileToDelete As String)
If FileExists(FileToDelete) Then 'See above
        SetAttr FileToDelete, vbNormal
        Kill FileToDelete
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp()
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
Debug.Print fname
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub zzdir_html()
Dim MyFile As String
Dim Counter As Long
xpath = ActiveDocument.Path & "\"
xpath = InputBox(xpath, xpath, xpath)
Dim DirectoryListArray() As String
ReDim DirectoryListArray(1000)
website = "http://www.XZXZXZXZXZXZcompany.com/JIBS/"
website = InputBox(website, website, website)
website = ""
Counter = 1
MyFile = Dir$("c:\temp\*.*")
MyFile = Dir$(xpath & "*.*")
MyFile = Dir$(xpath & "app*.*")
Do While MyFile <> ""
        DirectoryListArray(Counter) = MyFile
        
        
        
        xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
        'xtext2 = xtext2 & xpath & MyFile & vbCrLf
        Debug.Print MyFile
        MyFile = Dir$
        Counter = Counter + 1
        Loop
        xtext3 = xtext1 & vbCrLf & xtext2
        fname = xpath & "display.html"
        Call PRINT_INFO(xtext3, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub zzdir_pdf()
Dim MyFile As String
Dim Counter As Long
xpath = ActiveDocument.Path & "\"
xpath = InputBox(xpath, xpath, xpath)
Dim DirectoryListArray() As String
ReDim DirectoryListArray(10000)
website = "http://www.XZXZXZXZXZXZcompany.com/JIBS/"
website = InputBox(website, website, website)
website = ""
Counter = 1
MyFile = Dir$("c:\temp\*.*")
MyFile = Dir$(xpath & "*.*")
MyFile = Dir$(xpath & "app*.*")
Do While MyFile <> ""
        DirectoryListArray(Counter) = MyFile
        
        If InStr(1, UCase(MyFile), UCase("PDF")) Then
                'xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
                'xtext2 = xtext2 & xpath & MyFile & vbCrLf
                xtext2 = xtext2 & MyFile & vbCrLf
        End If
        
        If InStr(1, UCase(MyFile), UCase("DOC")) Then
                'xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
                'xtext2 = xtext2 & xpath & MyFile & vbCrLf
                xtext3 = xtext3 & MyFile & vbCrLf
        End If
        
        Debug.Print MyFile
        MyFile = Dir$
        Counter = Counter + 1
        Loop
        xtext3 = xtext1 & vbCrLf & xtext2 & vbCrLf & xtext3
        fname = xpath & "zzdir.txt"
        Call PRINT_INFO(xtext3, fname)
End Sub
Attribute VB_Name = "WORD2BLOG"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_old()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = xtext & ActiveDocument.Paragraphs(p).Range.Text & vbCrLf
Next p
fname = ActiveDocument.Path & "\temptext.txt"
Call PRINT_INFO(xtext, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_Blog_Word_Linked()
x = "[B]logger or [W]ordpress or [L]linked_in"
x = InputBox(x, x, x)
x = LCase(x)
xnewline = vbCrLf ' for blogger
If x = "w" Then xnewline = Chr(10) ' for wordpress
        If x = "b" Then xnewline = vbCrLf & "<br/>" ' for blogger
                If x = "b" Then xnewline = "<p/>"  ' for blogger
                        If x = "l" Then xnewline = "" ' for linkedin
                                
                                For p = 1 To ActiveDocument.Paragraphs.Count
                                        line2add = ActiveDocument.Paragraphs(p).Range.ListStyle
                                        
                                        line2add = ActiveDocument.Paragraphs(p).Range.ListFormat.ListString
                                        line2add = line2add & ActiveDocument.Paragraphs(p).Range.Text
                                        
                                        If ActiveDocument.Paragraphs(p).Range.Font.Italic = True Then
                                                If (x = "b" And Len(line2add) > 2) Then line2add = "<i>" & line2add & "</i>"
                                                End If
                                                
                                                If line2add = UCase(line2add) Then
                                                        If (x = "b" And Len(line2add) > 2) Then line2add = "<b>" & line2add & "</b>"
                                                        End If
                                                        
                                                        xtext = xtext & line2add & xnewline
                                                Next p
                                                
                                                
                                                If x = "l" Then
                                                        xtext = Replace(xtext, Chr(10), vbCrLf)
                                                        xtext = Replace(xtext, Chr(12), vbCrLf)
                                                        xtext = Replace(xtext, Chr(13), vbCrLf)
                                                        xtext = Replace(xtext, vbCrLf & vbCrLf, vbCrLf)
                                                End If
                                                fname = ActiveDocument.Path & "\temptext.txt"
                                                Call PRINT_INFO(xtext, fname)
                                                newname = Replace(fname, ".txt", ".html")
                                                FileCopy fname, newname
                                                ReturnValue = Shell("explorer.EXE " & newname, 1)  ' Run Calculator.
                                                Debug.Print ActiveDocument.Path
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_html_XZXZXZwebpage()
b1 = "<b style='color: #008080;'>"
b2 = "</b>"
h11 = "<h1 style='color: #008080;'>"
h12 = "</h1>"
For p = 1 To ActiveDocument.Paragraphs.Count
        XLINE = ActiveDocument.Paragraphs(p).Range.Text
        XLINE = Trim(XLINE)
        XLINE = Replace(XLINE, Chr(13), "")
        
        If p = 1 Then xtext = xtext & h11 & XLINE & h12 & vbCrLf
                
                
                If UCase(XLINE) = XLINE And Len(XLINE) > 3 Then
                        xtext = xtext & b1 & XLINE & b2 & vbCrLf
                        ElseIf InStr(1, XLINE, "Case Study") Then
                        xtext = xtext & h11 & XLINE & h12 & vbCrLf
                        Else
                        xtext = xtext & XLINE & "<BR>" & vbCrLf
                End If
                
                
                
                
                
        Next p
        fname = ActiveDocument.Path & "\temptext.txt"
        Call PRINT_INFO(xtext, fname)
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_html()
b1 = "<b style='color: red;'>"
b2 = "</b>"
h11 = "<h1 style='color: red;'>"
h12 = "</h1>"
For p = 1 To ActiveDocument.Paragraphs.Count
        XLINE = ActiveDocument.Paragraphs(p).Range.Text
        XLINE = Trim(XLINE)
        XLINE = Replace(XLINE, Chr(13), "")
        
        If p = 1 Then xtext = xtext & h11 & XLINE & h12 & vbCrLf
                
                If UCase(XLINE) = XLINE And Len(XLINE) > 3 Then
                        xtext = xtext & b1 & XLINE & b2 & vbCrLf
                        Else
                        xtext = xtext & XLINE & "<BR>" & vbCrLf
                End If
                
                
                
                
                
        Next p
        fname = ActiveDocument.Path & "\temptext.txt"
        Call PRINT_INFO(xtext, fname)
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function TRFMT(x)
xx = ""
x = tr_regex(x)
x = Replace(x, Chr(13), xx)
x = Replace(x, Chr(10), xx)
x = Replace(x, Chr(12), xx)
x = Replace(x, Chr(11), xx)
X = Replace(X, Chr(13), "!13!")
X = Replace(X, Chr(10), "!10!")
X = Replace(X, Chr(12), "!12!")
X = Replace(X, Chr(11), "!11!")
If InStr(1, UCase(Trim(x)), UCase("http")) Then
        X = "<a href=" & X & ">" & Trim(X) & "</a>" '/// using regex instead
End If
If x = UCase(x) Then
        If Len(x) > 2 Then
                x = "<b>" & Trim(x) & "</b>"
        End If
End If
TRFMT = Trim(x)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_html(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_html(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_html(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("explorer.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub tr_regex_URLtest()
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex_url(x)
Debug.Print y
Debug.Print "======================================"
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex_email(x)
Debug.Print y
Debug.Print "======================================"
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex(x)
Debug.Print y
Debug.Print "======================================"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex(xinput_string)
x = xinput_string
x = tr_regex_url(x)
x = tr_regex_email(x)
tr_regex = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex_url(xinput_string)
Dim reg
Dim rng As Range, i As Long, j As Long
Dim mtch, mt, tmpStr As String
Set reg = CreateObject("vbscript.regexp")
With reg
.IgnoreCase = True
.MultiLine = False
http://regexlib.com/Search.aspx?k=url&AspxAutoDetectCookieSupport=1
.Pattern = "(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?"
 .Pattern = "[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}"
.Global = True
End With
Set mtch = reg.Execute(xinput_string)
xoutput_string = xinput_string
For Each mt In mtch ' what you want to change
        now change the output string by find and replace stuff for each match of what you want to change
        xoutput_string = Replace(xoutput_string, mt, "<a href=" & mt & ">" & mt & "</a>" & vbCrLf)
Next mt
tr_regex_url = xoutput_string
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex_email(xinput_string)
Dim reg
Dim rng As Range, i As Long, j As Long
Dim mtch, mt, tmpStr As String
Set reg = CreateObject("vbscript.regexp")
With reg
.IgnoreCase = True
.MultiLine = False
http://regexlib.com/Search.aspx?k=url&AspxAutoDetectCookieSupport=1
.Pattern = "(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?"
.Pattern = "[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}"
.Global = True
End With
Set mtch = reg.Execute(xinput_string)
xoutput_string = xinput_string
For Each mt In mtch ' what you want to change
        now change the output string by find and replace stuff for each match of what you want to change
        xoutput_string = Replace(xoutput_string, mt, "<a href=mailto:" & mt & ">" & mt & "</a>" & vbCrLf)
Next mt
tr_regex_email = xoutput_string
End Function
Attribute VB_Name = "xfit_tables"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AutoFitToWind()
Selection.WholeStory
Selection.Font.Size = 9
Dim tbl As Table
Dim tbl2 As Table
For Each tbl In ActiveDocument.Tables
        tbl.AutoFitBehavior wdAutoFitWindow
        For Each tbl2 In ActiveDocument.Tables
                tbl2.AutoFitBehavior wdAutoFitWindow
                
                
        Next tbl2
        
Next tbl
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub VBA_WORD_FORMAT_SUBTABLES()
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(t).AutoFitBehavior wdAutoFitWindow
        
        
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                
                Next
                
                
                Next
                
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST_movewithtext()
For t = 1 To ActiveDocument.Tables.Count
        With ActiveDocument.Tables(t).Rows
        .WrapAroundText = True
        .HorizontalPosition = wdTableLeft
        .RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
        .DistanceLeft = CentimetersToPoints(0.32)
        .DistanceRight = CentimetersToPoints(0.32)
        .VerticalPosition = CentimetersToPoints(0)
        .RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
        .DistanceTop = CentimetersToPoints(0)
        .DistanceBottom = CentimetersToPoints(0)
        .AllowOverlap = False
        End With
        
Next t
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TESTt2()
With Selection.Tables(1).Rows
.WrapAroundText = True
.HorizontalPosition = wdTableLeft
.RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
.DistanceLeft = CentimetersToPoints(0.32)
.DistanceRight = CentimetersToPoints(0.32)
.VerticalPosition = CentimetersToPoints(0)
.RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
.DistanceTop = CentimetersToPoints(0)
.DistanceBottom = CentimetersToPoints(0)
.AllowOverlap = False
End With
End Sub
Attribute VB_Name = "TABLE_FONT_HTML"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub STEP3_A3FORMAT_SUBTABLES_a4()
Z = 260
ActiveDocument.Tables(1).Columns(1).Width = Z ' COL1
ActiveDocument.Tables(1).Columns(2).Width = Z ' COL2
ActiveDocument.Tables(1).Columns(3).Width = Z ' COL3
On Error Resume Next
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                '    ActiveDocument.Tables(T).Tables(Z).AutoFitBehavior wdAutoFitContent
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                
                
                Next
                
                ' ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitWindow
                'ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitContent
                
                
                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub STEP3_A3FORMAT_SUBTABLES_a3()
Z = 370
ActiveDocument.Tables(1).Columns(1).Width = Z ' COL1
ActiveDocument.Tables(1).Columns(2).Width = Z ' COL2
ActiveDocument.Tables(1).Columns(3).Width = Z ' COL3
On Error Resume Next
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                '    ActiveDocument.Tables(T).Tables(Z).AutoFitBehavior wdAutoFitContent
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                '######
                ' Loop through each row in the table.
                For Each oRow In ActiveDocument.Tables(t).Tables(Z).Rows
                        
                        ' Loop through each cell in the current row.
                        For Each oCell In oRow.Cells
                                ' Set sCellText equal to text of the cell.
                                ' Note: This section can be modified to suit
                                ' your programming purposes.
                                sCellText = oCell.Range
                                If Left(sCellText, 5) = "GREEN" Then oCell.Range.Shading.ForegroundPatternColor = RGB(0, 222, 0)
                                        If Left(sCellText, 5) = "GREEN" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                
                                                If Left(sCellText, 5) = "AMBER" Then oCell.Range.Shading.ForegroundPatternColor = RGB(255, 102, 0)
                                                        If Left(sCellText, 5) = "AMBER" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                                
                                                                
                                                                If Left(sCellText, 3) = "RED" Then oCell.Range.Shading.ForegroundPatternColor = RGB(222, 0, 0)
                                                                        If Left(sCellText, 3) = "RED" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                                                
                                                                                ' Remove table cell markers from the text.
                                                                                'sCellText = Left$(sCellText, Len(sCellText) - 2)
                                                                                'MsgBox sCellText
                                                                                
                                                                        Next oCell
                                                                        
                                                                Next oRow
                                                                '######
                                                                
                                                                Next
                                                                
                                                                ' ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitWindow
                                                                'ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitContent
                                                                
                                                                
                                                                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RetrieveTableItems()
Dim oRow As Row
Dim oCell As Cell
Dim sCellText As String
 Turn on error checking.
On Error GoTo ErrorHandler
For Each tbl In ActiveDocument.Tables
        x = x + 1
        ' Loop through each row in the table.
        For Each oRow In ActiveDocument.Tables(x).Rows
                
                ' Loop through each cell in the current row.
                For Each oCell In oRow.Cells
                        ' Set sCellText equal to text of the cell.
                        ' Note: This section can be modified to suit
                        ' your programming purposes.
                        sCellText = oCell.Range
                        ' Debug.Print sCellText
                        oCell.Range.Font.Size = 10
                        
                        oCell.Range.Font.ColorIndex = 1
                        ' Remove table cell markers from the text.
                        ' sCellText = Left$(sCellText, Len(sCellText) - 2)
                        'MsgBox sCellText
                        
                Next oCell
                
        Next oRow
Next ' TABLE
ErrorHandler:
If Err <> 0 Then
        Dim Msg As String
        Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description _
        & Chr(13) & "Make sure there is a table in the current document."
        MsgBox Msg, , "Error"
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub color_cells()
Dim oRow As Row
Dim oCell As Cell
Dim sCellText As String
 Turn on error checking.
On Error GoTo ErrorHandler
For Each tbl In ActiveDocument.Tables
        x = x + 1
        ' Loop through each row in the table.
        For Each oRow In ActiveDocument.Tables(x).Rows
                
                ' Loop through each cell in the current row.
                For Each oCell In oRow.Cells
                        ' Set sCellText equal to text of the cell.
                        ' Note: This section can be modified to suit
                        ' your programming purposes.
                        sCellText = oCell.Range
                        ' Debug.Print sCellText
                        ' oCell.Range.Font.ColorIndex = 1
                        If Left(sCellText, 5) = "AMBER" Then oCell.Range.Font.TextColor = RGB(222, 0, 0)
                                
                                If InStr(1, sCellText, "AMBER") Then oCell.Range.Shading.ForegroundPatternColor = RGB(5, 55, 880)
                                        If InStr(1, sCellText, "AMBER") Then oCell.Range.Font.TextColor = RGB(222, 0, 0)
                                                
                                                
                                                
                                                oCell.Range.Font.Size = 10
                                                
                                                
                                                
                                                ' Remove table cell markers from the text.
                                                ' sCellText = Left$(sCellText, Len(sCellText) - 2)
                                                'MsgBox sCellText
                                                
                                        Next oCell
                                        
                                Next oRow
                        Next ' TABLE
                        ErrorHandler:
                        If Err <> 0 Then
                                Dim Msg As String
                                Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description _
                                & Chr(13) & "Make sure there is a table in the current document."
                                MsgBox Msg, , "Error"
                        End If
                        
End Sub
Attribute VB_Name = "header_footer_imagex"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub header_footer_image()
Call EditHeadersAndFooters
Call Insert_SqWrap_Image ' InsertImage
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub EditHeadersAndFooters()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = "ISO 14001 2015 ENVIRONMENTAL MANAGEMENT"
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 22
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub HeadersAndFooters_tri()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZ.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub HeadersAndFooters_XZXZXZheaded()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
x = x & vbCrLf & "XZXZXZ XZXZXZ Company Limited. Registered 121355 RC 23 May 2016"
x = x & vbCrLf & "Office Address: La Belle XZXZXZ, Belle XZXZXZ Ave, Grouville, Jersey JE3 9BL"
Dim i As Long
XHEADER = Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = True
        '.Headers(wdHeaderFooterPrimary).Range.Font.Size = 38
        '.Headers(wdHeaderFooterPrimary).Range.Text = "XZXZXZXZXZXZCompany"
        
        
        ' .Footers(wdHeaderFooterPrimary).Range.Font.Size = 15
        ' .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        '.Footers(wdHeaderFooterPrimary).Range.Font.Size = 20
        
        
        
        .Headers(2).Range.Font.Size = 35
        .Headers(2).Range.Text = "" '"XZXZXZXZXZXZCompany"
        .Headers(2).Range.Paragraphs.Alignment = 1 'wdAlignParagraphRight 1=centre, 2=right, 3=left
        imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\XZXZXZlogo.png"
        
        '.Headers(2).Shapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True, Left:=70, Top:=3 ', Width:=60, Height:=60
        
        ' .Headers(2).Shapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True, Left:=70, Top:=3, Width:=60, Height:=60
        .Headers(2).Shapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True, Left:=70, Top:=-10 ', Width:=80, Height:=80
        
        .Headers(1).Range.Font.Size = 25
        .Headers(1).Range.Text = XHEADER
        .Headers(1).Range.Paragraphs.Alignment = 1 'wdAlignParagraphRight
        
        .Footers(1).Range.Font.Size = 10
        .Footers(1).Range.Text = XFOOTER
        .Footers(1).Range.Paragraphs.Alignment = 1 'wdAlignParagraphRight
        
        .Footers(2).Range.Font.Size = 10
        .Footers(2).Range.Text = x
        .Footers(2).Range.Paragraphs.Alignment = 1 'wdAlignParagraphRight
        
        
        End With
        
        Next
        
        
        
        ' ActiveDocument.Shapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub HeadersAndFooters_XZXZXZ()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = UCase("XZXZXZXZXZXZCompany - ") & Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub HeadersAndFooters_tim()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = UCase("XZXZXZ - ") & Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZ.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImage()
Dim imagePath As String
imagePath = "C:\\picture.jpg"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, _
LinkToFile:=False, _
SaveWithDocument:=True, _
Left:=370, _
Top:=-30, _
Anchor:=Selection.Range, _
Width:=60, _
Height:=60
Anchor:=Selection.Range, _
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Insert_SqWrap_Image()
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
With shp
.WrapFormat.Type = wdWrapSquare
.Left = 380
.Top = -50
.Width = 70
.Height = 70
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AddImageToHeader()
PURPOSE: Insert an image into a Word document heading
SOURCE: www.TheSpreadsheetGuru.com
Dim SrcePath As String
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\x1i-GEQY.png"
ThisDocument.Sections.Item(1).Headers(wdHeaderFooterPrimary) _
.Range.InlineShapes.AddPicture (SrcePath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Word_Insert_Image_in_Header()
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim oWD As Word.Document
Set oWD = ActiveDocument
With oWD.Sections(1)
.Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
.Headers(wdHeaderFooterPrimary).Range.Text = "Text as Header"
 .Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphRight
 .Headers(wdHeaderFooterPrimary).Range.InlineShapes.AddPicture SrcePath
End With
End Sub
Public Function ChangeHeadersAndFooters()
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .Headers(wdHeaderFooterPrimary).LinkToPrevious = True
        .Headers(wdHeaderFooterPrimary).Range.Text = "Koptekst vanaf pagina 2"
        .Footers(wdHeaderFooterPrimary).Range.Text = "Voettekst vanaf pagina 2"
        End With
Next i
ActiveDocument.Sections(1).PageSetup.DifferentFirstPageHeaderFooter = True
ActiveDocument.Sections(1).Headers(wdHeaderFooterFirstPage).Range.Text = "test"
With ActiveDocument.Sections(1)
.PageSetup.DifferentFirstPageHeaderFooter = True
.Headers(wdHeaderFooterFirstPage).LinkToPrevious = False
.Headers(wdHeaderFooterFirstPage).Range.Text = "eerste pagina koptekst"
.Footers(wdHeaderFooterFirstPage).Range.Text = "eerste pagina voettekst"
End With
Attribute VB_Name = "temp_buttons"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button1()
Call name_doc
Call HeadersAndFooters_tim
Call PDF
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button2()
Call quote_cal_12_blk
Call HeadersAndFooters_XZXZXZ
Call PDF
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button3()
Call header_footer_image
Selection.Font.Size = 10
 Selection.Font.Name = "Calibri"
 Selection.Font.ColorIndex = wdBlack
Call HeadersAndFooters_XZXZXZheaded
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button4()
Call header_footer_image
Call PDFtext.Show
Selection.Range.Case = wdTitleWord
Selection.Style = ActiveDocument.Styles("Heading 1")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button8()
Call HeadersAndFooters_XZXZXZheaded
Call aa_headings2017_calibri
Call PDF
End Sub
Attribute VB_Name = "word_templates_opath"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ChangeAttachedTemplate()
Dim oDoc As Document  'make sure you're getting info on the right document
Set oDoc = ActiveDocument
If oDoc.Type = wdTypeTemplate Then Exit Sub
        Dim oTemplate As Template
        Dim strTemplatePath
        Set oTemplate = oDoc.AttachedTemplate
        If InStr(UCase(oTemplate.FullName), "OLDPATH") > 0 Then
                oDoc.AttachedTemplate = "FULLNEWPATH" & oTemplate.Name
        End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub FindTemplate()
MsgBox ThisDocument.AttachedTemplate.FullName
MsgBox ActiveDocument.AttachedTemplate.FullName
x = ActiveDocument.AttachedTemplate.FullName
Debug.Print x
End Sub
Attribute VB_Name = "temp_nameword"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub name_doc()
For p = 1 To ActiveDocument.Paragraphs.Count
        
        
        x = x & ActiveDocument.Paragraphs(p).Range.Text
        
        If Len(x) > 50 Then Exit For
                
        Next p
        For q = 1 To 47
                x = Replace(x, Chr(q), " ")
                x = Replace(x, "  ", " ")
        Next q
        For q = 58 To 64
                x = Replace(x, Chr(q), " ")
                x = Replace(x, "  ", " ")
        Next q
        fname = ActiveDocument.Path & "\CMI_" & Trim(x)
        Debug.Print fname
        
        ActiveDocument.SaveAs FileName:=fname
End Sub
Attribute VB_Name = "XFINDANDREPLACE"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub fandr()
replace 1,2,3,4, with crlf
For xnumber = 1 To 9
        
        
        Selection.Find.ClearFormatting
        Selection.Find.Replacement.ClearFormatting
        With Selection.Find
        .Text = xnumber
        .Replacement.Text = "^p"
        .Forward = True
        .Wrap = wdFindAsk
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
        End With
        Selection.Find.Execute Replace:=wdReplaceAll
        Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub FandR_macro()
XFIND = "(yes)"
XREPLACE = "(YES)"
Call XFINDANDREPLACE(XFIND, XREPLACE)
Call XFINDANDREPLACE("(PARTIALLY)", "(PARTIALLY)")
Call XFINDANDREPLACE("(NO)", "(NO)")
Call XFINDANDREPLACE("XZXZXZ", "XZXZXZ")
For r = 1 To 9
        
        Call XFINDANDREPLACE("Appendix " & r, "Appendix " & r)
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ClrFmtg2()
ActiveDocument.Select
Selection.ClearFormatting
Selection.Font.Reset
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function XFINDANDREPLACE(XFIND, XREPLACE)
Macro1 Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
Selection.Find.Replacement.Font.Bold = False
Selection.Find.Replacement.Font.ColorIndex = wdDarkRed
With Selection.Find
.Text = XFIND
.Replacement.Text = XREPLACE
.Forward = True
.Wrap = wdFindContinue
.Format = True
  .Font.ColorIndex = wdDarkRed
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
End Function
Attribute VB_Name = "Module2"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test876()
xtext = "The cat sat on the mat and did "
x = reverse_string(6, xtext, " ")
Debug.Print Right(xtext, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function reverse_string(xno, xtext, XFIND)
xlen = Len(xtext)
For Z = xlen To 1 Step -1 ' go backwards
        If Mid(xtext, Z, 1) = XFIND Then xqty = xqty + 1
                If xqty = xno Then Exit For
                        
                Next Z
                xresult = xlen - Z
                reverse_string = xresult
                
End Function
Attribute VB_Name = "ScreenPrintx"
Declare Windows API Functions
Private Declare Sub keybd_event Lib "user32" (ByVal bVk As Byte, ByVal _
bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
Declare Virtual Key Codes
Private Const VK_SNAPSHOT = &H2C
Private Const VK_KEYUP = &H2
Private Const VK_MENU = &H12
Public Const VK_TAB = &H9
Public Const VK_ENTER = &HD
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ScreenPrint()
Press Alt + TAB Keys -- Step1
Alt_Tab
Press Print Screen key using Windows API -- Step2.
keybd_event VK_SNAPSHOT, 1, 0, 0 'Print Screen key down
keybd_event VK_SNAPSHOT, 1, VK_KEYUP, 0 'Print key Up - Screenshot to Clipboard
Paste Image in Chart and Export it to Image file. -- Step3
Charts.Add
ThisWorkbook.Charts(1).AutoScaling = True
ThisWorkbook.Charts(1).Paste
ThisWorkbook.Charts(1).Export FileName:="E:\ClipBoardToPic.jpg", FilterName:="jpg"
Supress warning message and Delete the Chart
Application.DisplayAlerts = False
ThisWorkbook.Charts(1).Delete
Application.DisplayAlerts = True
Attach the file to Excel -- Step4
Attach_File
ThisWorkbook.Activate
ThisWorkbook.Sheets(1).Select
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Alt_Tab()
DoEvents
keybd_event VK_MENU, 1, 0, 0 'Alt key down
DoEvents
keybd_event VK_TAB, 0, 0, 0 'Tab key down
DoEvents
keybd_event VK_TAB, 1, VK_KEYUP, 0 'Tab key up
DoEvents
keybd_event VK_ENTER, 1, 0, 0 'Tab key down
DoEvents
keybd_event VK_ENTER, 1, VK_KEYUP, 0 'Tab key up
DoEvents
keybd_event VK_MENU, 1, VK_KEYUP, 0 'Alt key up
DoEvents
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Attach_File()
ActiveCell.Select
ActiveSheet.OLEObjects.Add(FileName:="E:\ClipBoardToPic.jpg", Link:=False, _
DisplayAsIcon:=True, IconFileName:= _
"C:\Program Files\Internet Explorer\iexplore.exe", IconIndex:=10, IconLabel _
:="ClipBoardToPic.jpg").Select
End Sub
Attribute VB_Name = "images_word_pictures"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImages()
http://word.tips.net/T010726_Inserting_Multiple_Graphics_in_a_Document.html
Dim doc As Word.Document
Dim fd As FileDialog
Dim vItem As Variant
Dim mg1 As Range
Dim mg2 As Range
Set fd = Application.FileDialog(msoFileDialogFilePicker)
Set doc = ActiveDocument
With fd
.Filters.Add "Images", "*.gif; *.jpg; *.jpeg", 1
.FilterIndex = 1
If .Show = -1 Then
        For Each vItem In .SelectedItems
                Set mg2 = ActiveDocument.Range
                mg2.Collapse wdCollapseEnd
                doc.InlineShapes.AddPicture _
                FileName:=vItem, _
                LinkToFile:=False, SaveWithDocument:=True, Range:=mg2
                Set mg1 = ActiveDocument.Range
                mg1.Collapse wdCollapseEnd
                
                mg1.Text = vbCrLf & vbCrLf
        Next vItem
End If
End With
Set fd = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub GetPictures()
Dim sPic As String
Dim sPath As String
fname = "XZXZXZlogo.png"
sPath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\"
sPath = "V:\Data2016\RichardRolfe\XZXZXZ_LeanPM (Film)\" 'c:\myfolder\"
sPath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\XZXZXZlogo.png"
 sPic = Dir(sPath & "*.png")
Do While sPic <> ""
        Selection.InlineShapes.AddPicture _
        FileName:=sPath & sPic, _
        LinkToFile:=False, SaveWithDocument:=True
        sPic = Dir
        Selection.TypeParagraph
        Selection.TypeParagraph
        Loop
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_resize_tim()
x = ActiveDocument.InlineShapes.Count
For i = 1 To x
        ActiveDocument.InlineShapes(i).Height = 200 ' * 1.2
        ActiveDocument.InlineShapes(i).Width = 300 '* 1.2
        
        
        
        
Next i
MsgBox x
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ResizePics()
Dim shp As Word.Shape
Dim ishp As Word.InlineShape
If Word.Selection.Type <> wdSelectionInlineShape And _
        Word.Selection.Type <> wdSelectionShape Then
        Exit Sub
End If
If Word.Selection.Type = wdSelectionInlineShape Then
        Set ishp = Word.Selection.Range.InlineShapes(1)
        ishp.LockAspectRatio = False
        ishp.Height = 55 'InchesToPoints(1.78)
        ishp.Width = 44 'InchesToPoints(3.17)
        Else
        If Word.Selection.Type = wdSelectionShape Then
                Set shp = Word.Selection.ShapeRange(1)
                shp.LockAspectRatio = False
                shp.Height = 33 'InchesToPoints(1.78)
                shp.Width = 22 'InchesToPoints(3.17)
        End If
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ResizePics_all()
Dim shp As Word.Shape
Dim ishp As Word.InlineShape
If Word.Selection.Type <> wdSelectionInlineShape And _
        Word.Selection.Type <> wdSelectionShape Then
        Exit Sub
End If
If Word.Selection.Type = wdSelectionInlineShape Then
        Set ishp = Word.Selection.Range.InlineShapes(1)
        ishp.LockAspectRatio = False
        ishp.Height = 55 'InchesToPoints(1.78)
        ishp.Width = 44 'InchesToPoints(3.17)
        Else
        If Word.Selection.Type = wdSelectionShape Then
                Set shp = Word.Selection.ShapeRange(1)
                shp.LockAspectRatio = False
                shp.Height = 33 'InchesToPoints(1.78)
                shp.Width = 22 'InchesToPoints(3.17)
        End If
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImage()
Dim imagePath As String
imagePath = "C:\\picture.jpg"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\XZXZXZlogo.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, _
LinkToFile:=False, _
SaveWithDocument:=True, _
Left:=370, _
Top:=-30, _
Anchor:=Selection.Range, _
Width:=60, _
Height:=60
Anchor:=Selection.Range, _
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\XZXZXZlogo.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function Insert_bunch_images(fname)
imagePath = fname ' "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
 Selection.TypeParagraph
  Selection.TypeText Text:="Title" & fname
 Selection.TypeParagraph
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
  Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True)
With shp
 .WrapFormat.Type = 4  'wdWrapSquare
.WrapFormat.Type = wdWrapInline
.Width = 500
.Height = 500
End With
Selection.TypeParagraph
Selection.TypeText Text:="Title" & fname
Selection.TypeParagraph
End Function
Private Sub cmdFileDialog_Click()
Requires reference to Microsoft Office 12.0 Object Library.
Dim fDialog As Office.FileDialog
Dim varFile As Variant
Set up the File Dialog.
Set fDialog = Application.FileDialog(msoFileDialogFilePicker)
With fDialog
Allow user to make multiple selections in dialog box.
.AllowMultiSelect = True
Set the title of the dialog box.
.Title = "Please select one or more files"
Clear out the current filters, and add our own.
.Filters.Clear
.Filters.Add "Access Databases", "*.MDB; *.ACCDB"
.Filters.Add "Access Projects", "*.ADP"
.Filters.Add "All Files", "*.png"
Show the dialog box. If the .Show method returns True, the
user picked at least one file. If the .Show method returns
False, the user clicked Cancel.
If .Show = True Then
        'Loop through each file selected and add it to the list box.
        For Each varFile In .SelectedItems
                'Me.FileList.AddItem varFile
                Debug.Print varFile
                Call Insert_bunch_images(varFile)
                Next
                Else
                MsgBox "You clicked Cancel in the file dialog box."
        End If
        End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Insert_SqWrap_Image()
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
With shp
.WrapFormat.Type = wdWrapSquare
.Left = 380
.Top = -50
.Width = 70
.Height = 70
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AddImageToHeader()
PURPOSE: Insert an image into a Word document heading
SOURCE: www.TheSpreadsheetGuru.com
Dim SrcePath As String
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\x1i-GEQY.png"
ThisDocument.Sections.Item(1).Headers(wdHeaderFooterPrimary) _
.Range.InlineShapes.AddPicture (SrcePath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Word_Insert_Image_in_Header()
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim oWD As Word.Document
Set oWD = ActiveDocument
With oWD.Sections(1)
.Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
.Headers(wdHeaderFooterPrimary).Range.Text = "Text as Header"
 .Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphRight
 .Headers(wdHeaderFooterPrimary).Range.InlineShapes.AddPicture SrcePath
End With
End Sub
Attribute VB_Name = "SELETEXTX"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xlist()
xlist Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
.Text = ";"
.Replacement.Text = ";^p"
.Forward = True
.Wrap = wdFindAsk
.Format = False
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
Selection.Sort ExcludeHeader:=False, FieldNumber:="Paragraphs", _
SortFieldType:=wdSortFieldAlphanumeric, SortOrder:=wdSortOrderAscending, _
FieldNumber2:="", SortFieldType2:=wdSortFieldAlphanumeric, SortOrder2:= _
wdSortOrderAscending, FieldNumber3:="", SortFieldType3:= _
wdSortFieldAlphanumeric, SortOrder3:=wdSortOrderAscending, Separator:= _
wdSortSeparateByTabs, SortColumn:=False, CaseSensitive:=False, LanguageID _
:=wdEnglishUK, SubFieldNumber:="Paragraphs", SubFieldNumber2:= _
"Paragraphs", SubFieldNumber3:="Paragraphs"
With ListGalleries(wdBulletGallery).ListTemplates(1).ListLevels(1)
.NumberFormat = ChrW(61623)
.TrailingCharacter = wdTrailingTab
.NumberStyle = wdListNumberStyleBullet
.NumberPosition = CentimetersToPoints(0.63)
.Alignment = wdListLevelAlignLeft
.TextPosition = CentimetersToPoints(1.27)
.TabPosition = wdUndefined
.ResetOnHigher = 0
.StartAt = 1
With .Font
.Bold = wdUndefined
.Italic = wdUndefined
.StrikeThrough = wdUndefined
.Subscript = wdUndefined
.Superscript = wdUndefined
.Shadow = wdUndefined
.Outline = wdUndefined
.Emboss = wdUndefined
.Engrave = wdUndefined
.AllCaps = wdUndefined
.Hidden = wdUndefined
.Underline = wdUndefined
.Color = wdUndefined
.Size = wdUndefined
.Animation = wdUndefined
.DoubleStrikeThrough = wdUndefined
.Name = "Symbol"
End With
.LinkedStyle = ""
End With
ListGalleries(wdBulletGallery).ListTemplates(1).Name = ""
Selection.Range.ListFormat.ApplyListTemplateWithLevel ListTemplate:= _
ListGalleries(wdBulletGallery).ListTemplates(1), ContinuePreviousList:= _
False, ApplyTo:=wdListApplyToWholeList, DefaultListBehavior:= _
wdWord10ListBehavior
Selection.Range.ListFormat.RemoveNumbers NumberType:=wdNumberParagraph
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub draft()
draft Macro
ActiveDocument.Sections(1).Range.Select
ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
Selection.HeaderFooter.Shapes.AddTextEffect( _
PowerPlusWaterMarkObject4559526, "DISCUSSION DRAFT ", "Calibri", 1, False _
, False, 0, 0).Select
 Selection.ShapeRange.Name = "PowerPlusWaterMarkObject4559526"
Selection.ShapeRange.TextEffect.NormalizedHeight = False
Selection.ShapeRange.Line.Visible = False
Selection.ShapeRange.Fill.Visible = True
Selection.ShapeRange.Fill.Solid
Selection.ShapeRange.Fill.ForeColor.RGB = RGB(192, 192, 192)
Selection.ShapeRange.Fill.Transparency = 0.5
Selection.ShapeRange.Rotation = 315
Selection.ShapeRange.LockAspectRatio = True
Selection.ShapeRange.Height = CentimetersToPoints(3.74)
Selection.ShapeRange.Width = CentimetersToPoints(18.7)
Selection.ShapeRange.WrapFormat.AllowOverlap = True
Selection.ShapeRange.WrapFormat.Side = wdWrapNone
Selection.ShapeRange.WrapFormat.Type = 3
Selection.ShapeRange.RelativeHorizontalPosition = _
wdRelativeVerticalPositionMargin
Selection.ShapeRange.RelativeVerticalPosition = _
wdRelativeVerticalPositionMargin
Selection.ShapeRange.Left = wdShapeCenter
Selection.ShapeRange.Top = wdShapeCenter
ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_fmt()
On Error Resume Next
For x = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
        ActiveDocument.Tables(x).Rows.Height = InchesToPoints(0)
        For Row = 1 To ActiveDocument.Tables(x).Rows.Count
                For Col = 1 To ActiveDocument.Tables(x).Columns.Count
                        'ActiveDocument.Tables(X).Cell(Row, Col).Range.Text
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Size = 9
                        ' .Font.Size = 8
                        Next
                        Next
                        
                Next x
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_subtable_element()
On Error Resume Next
For q = 1 To 1 'top table
        
        ActiveDocument.Tables(q).AutoFitBehavior wdAutoFitWindow
        ActiveDocument.Tables(q).Rows.Height = InchesToPoints(0)
        
        For t = 1 To ActiveDocument.Tables(q).Tables.Count
                xStyleTable = xStyleTable + 1
                If xStyleTable > 6 Then xStyleTable = 1
                        
                        ActiveDocument.Tables(q).Tables(t).Style = "Light List - Accent 5"
                        'ActiveDocument.Tables(q).Tables(t).Style = "Light List - Accent " & t
                        'ActiveDocument.Tables(q).Tables(t).Style = "Light sHADING - Accent " & xStyleTable
                        'ActiveDocument.Tables(q).Tables(t).Style = "Table Grid"
                        ' ActiveDocument.Tables(q).Tables(t).AutoFitBehavior wdAutoFitWindow
                        'AMEND_CELLS = "yes"
                        If AMEND_CELLS = "yes" Then
                                For qRow = 1 To ActiveDocument.Tables(q).Tables(t).Rows.Count
                                        For qCol = 1 To ActiveDocument.Tables(q).Tables(t).Columns.Count
                                                
                                                ActiveDocument.Tables(q).Tables(t).Cell(qRow, qCol).Range.Font.Size = 9
                                                'ActiveDocument.Tables(q).Tables(t).Style = "Table Grid"
                                                
                                                Next
                                                Next
                                        End If
                                Next t
                                
                        Next q
                        MsgBox "done"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_XZXZXZ_candara()
On Error Resume Next
For x = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
        ActiveDocument.Tables(x).Rows.Height = InchesToPoints(0)
        For Row = 1 To ActiveDocument.Tables(x).Rows.Count
                For Col = 1 To ActiveDocument.Tables(x).Columns.Count
                        'ActiveDocument.Tables(X).Cell(Row, Col).Range.Text
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Size = 11
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Color = wdColorBlack
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Name = "Calibri"
                        '  ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Name = "Candara"
                        
                        ' .Font.Size = 8
                        Next
                        Next
                        ActiveDocument.Tables(x).Style = "Table Grid"
                        'ActiveDocument.Tables(x).Style = "Light List - Accent 1"
                        '  ActiveDocument.Tables(x).Style = "Light gRID - Accent 3"
                        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
                Next x
                
                
                
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_agenct_12_blue()
Selection.Font.Name = "Agency FB"
Selection.Font.Size = 10
Selection.Font.Size = 12
Selection.Font.ColorIndex = wdDarkBlue
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_cal_11_teal()
Selection.Font.Name = "CAlibri"
Selection.Font.Size = 10
Selection.Font.Size = 11
Selection.Font.Color = RGB(0, 128, 128)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_cal_12_blk()
Selection.Font.Name = "CAlibri"
Selection.Font.Size = 10
Selection.Font.Size = 12
Selection.Font.Color = RGB(0, 0, 0)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub whoami()
x = ActiveDocument.Name
y = ActiveDocument.Path & "\" & x
Z = InputBox(x, x, x)
Z = InputBox(y, y, y)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_extract()
xtext = Selection.Range.Text
xtext = Replace(xtext, vbCrLf, " ")
xtext = Replace(xtext, vbCr, " ")
xtext = Replace(xtext, vbLf, " ")
For q = 1 To 32
        xtext = Replace(xtext, Chr(q), " ")
Next q
xpage = Selection.Information(wdActiveEndPageNumber)
x = " '..." & xtext & "..' [Line: " & GetLineNum(Selection.Range) & " on page " & xpage & " ]"
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub WhereAmI()
MsgBox "Paragraph number: " & GetParNum(Selection.Range) & vbCrLf & _
"Absolute line number: " & GetAbsoluteLineNum(Selection.Range) & vbCrLf & _
"Relative line number: " & GetLineNum(Selection.Range)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetParNum(r As Range) As Integer
Dim rParagraphs As Range
Dim CurPos As Long
r.Select
CurPos = ActiveDocument.Bookmarks("\startOfSel").Start
Set rParagraphs = ActiveDocument.Range(Start:=0, End:=CurPos)
GetParNum = rParagraphs.Paragraphs.Count
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetLineNum(r As Range) As Integer
relative to current page
GetLineNum = r.Information(wdFirstCharacterLineNumber)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetAbsoluteLineNum(r As Range) As Integer
Dim i1 As Integer, i2 As Integer, Count As Integer, rTemp As Range
r.Select
Do
i1 = Selection.Information(wdFirstCharacterLineNumber)
Selection.GoTo what:=wdGoToLine, which:=wdGoToPrevious, Count:=1, Name:=""
Count = Count + 1
i2 = Selection.Information(wdFirstCharacterLineNumber)
Loop Until i1 = i2
r.Select
GetAbsoluteLineNum = Count
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xlist2line()
xlist2line Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
.Text = "^p"
.Replacement.Text = "; "
.Forward = True
.Wrap = wdFindAsk
.Format = False
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_ascii()
x = Selection
For q = 1 To Len(x)
        Z = Z & Mid(x, q, 1) & "(" & Asc(Mid(x, q, 1)) & ")"
        
Next q
Z = InputBox(Z, Z, Z)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_oneline()
x = Selection
x = Replace(x, Chr(7), " ")
x = Replace(x, Chr(10), " ")
x = Replace(x, vbCrLf, " ")
x = Replace(x, Chr(13), " ")
On Error Resume Next
For q = 1 To 31
        x = Replace(x, q, " ")
Next q
For q = 127 To 250
        x = Replace(x, q, " ")
Next q
fname = ActiveDocument.Path & "\TEMP23456.TXT"
Call PRINT_INFO(x, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_oneline2()
x = Selection
x = Replace(x, Chr(7), " ")
x = Replace(x, Chr(10), " ")
x = Replace(x, vbCrLf, " ")
x = Replace(x, Chr(13), " ")
On Error Resume Next
For q = 1 To 31
        x = Replace(x, q, " ")
Next q
For q = 127 To 250
        x = Replace(x, q, " ")
Next q
Selection.Text = x & vbNewLine
End Sub
Attribute VB_Name = "formsx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1_pdftext()
PDFtext.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1_userform4()
UserForm4.Show
End Sub
Attribute VB_Name = "Module1"
Attribute VB_Name = "NewMacros"
Attribute VB_Name = "testingx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test_tyle()
Debug.Print Selection.Range.Text
Debug.Print Selection.Range.Style
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub testtabs()
Selection.Paragraphs.TabStops.ClearAll
With Selection.Paragraphs.TabStops
.Add Position:=InchesToPoints(1.5), Alignment:=wdAlignTabLeft
.Add Position:=InchesToPoints(2), Alignment:=wdAlignTabLeft
.Add Position:=InchesToPoints(3), Alignment:=wdAlignTabLeft
.Add Position:=InchesToPoints(4), Alignment:=wdAlignTabLeft
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ClrFmtg()
ActiveDocument.Select
Selection.ClearFormatting
Selection.Font.Reset
End Sub
Attribute VB_Name = "legal"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2017_legal()
xfont = "Calibri"
XSIZE = 13
fnormal = 13
XCOLOR1 = RGB(0, 128, 128)
XCOLOR2 = RGB(128, 32, 0)
XCOLOR3 = RGB(128, 96, 0)
XCOLOR4 = RGB(64, 0, 128)
XCOLOR5 = vbBlack
Call legal_headings("Heading 1", xfont, 13, "", XCOLOR1)
Call legal_headings("Heading 2", xfont, 13, "", XCOLOR5)
Call legal_headings("Heading 3", xfont, 13, "", XCOLOR5)
Call legal_headings("Heading 4", xfont, 13, "", XCOLOR4)
Call legal_headings("Normal", xfont, fnormal, "", "")
Call legal_headings("List Paragraph", xfont, fnormal, "", "")
Call legal_headings("No Spacing", xfont, fnormal, "", "")
Call legal_headings("TOC Heading", xfont, fnormal, "", "")
Call legal_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function legal_headings(xstyle, xfont, XSIZE, xbold, xcolor)
With ActiveDocument.Styles(xstyle).Font
.Name = xfont
.Size = XSIZE
.Bold = False
.Italic = False
If Len(xbold) > 1 Then .Bold = True
        
        'http://dmcritchie.mvps.org/excel/colors.htm
        .ColorIndex = wdBlack
        .ColorIndex = wdBlack
        
        
        If Len(xcolor) > 0 Then
                If xcolor > 10 Then
                        .Color = xcolor
                        Else
                        .ColorIndex = xcolor
                End If
        End If
        
        
        End With
        xindent = 0
        If xstyle = "Heading 1" Then xindent = 0
                If xstyle = "Heading 2" Then xindent = 0
                        If xstyle = "Heading 3" Then xindent = 0 '2
                                If xstyle = "Heading 4" Then xindent = 1 '3
                                        
                                        With ActiveDocument.Styles(xstyle).ParagraphFormat
                                        .LeftIndent = CentimetersToPoints(xindent)
                                        .RightIndent = CentimetersToPoints(0)
                                        .FirstLineIndent = CentimetersToPoints(1.5)
                                        
                                        .TabStops.ClearAll
                                        If xstyle = "Heading 1" Then .TabStops(InchesToPoints(0.5)).Alignment = wdAlignTabLeft
                                                If xstyle = "Heading 2" Then .TabStops(InchesToPoints(1)).Alignment = wdAlignTabLeft
                                                        If xstyle = "Heading 3" Then .TabStops(InchesToPoints(1)).Alignment = wdAlignTabLeft
                                                                If xstyle = "Heading 4" Then .TabStops(InchesToPoints(1)).Alignment = wdAlignTabLeft
                                                                        
                                                                        .SpaceBefore = 1
                                                                        .SpaceBeforeAuto = False
                                                                        .SpaceAfter = 1
                                                                        .SpaceAfterAuto = False
                                                                        .LineSpacingRule = wdLineSpace0pt0
                                                                        .Alignment = wdAlignParagraphLeft
                                                                        .WidowControl = True
                                                                        .KeepWithNext = False
                                                                        .KeepTogether = False
                                                                        .PageBreakBefore = False
                                                                        .NoLineNumber = True
                                                                        .Hyphenation = True
                                                                        .FirstLineIndent = CentimetersToPoints(0)
                                                                        .OutlineLevel = wdOutlineLevelBodyText
                                                                        .CharacterUnitLeftIndent = 0
                                                                        .CharacterUnitRightIndent = 0
                                                                        
                                                                        .LineUnitBefore = 1
                                                                        .LineUnitAfter = 1
                                                                        .MirrorIndents = False
                                                                        .TextboxTightWrap = wdTightNone
                                                                        End With
                                                                        
                                                                        
End Function
Attribute VB_Name = "exportx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub vba_export_modules_V()
#http://www.cpearson.com/Excel/VBE.aspx
 reference to extensibility library
xprefix = "V:\Data2017\VBA\VBAWord\vba_"
Dim objMyProj As VBProject
Dim objVBComp As VBComponent
Set objMyProj = Application.VBE.ActiveVBProject
For Each objVBComp In objMyProj.VBComponents
        If objVBComp.Type = vbext_ct_StdModule Then
                
                
                'xprefix = "V:\Data2016\VBA\VBAWord\word_"
                'objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".bas"
                ' objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
                xprefix = "V:\Data2017\VBA\VBAWord\word02_"
                objVBComp.Export xprefix & objVBComp.Name & ".bas"
                'objVBComp.Export xprefix & objVBComp.Name & ".txt"
                
                Debug.Print xprefix
                
        End If
        Next
        Shell ("explorer.exe " & "V:\Data2017\VBA\VBAWord\")
End Sub
Attribute VB_Name = "XZXZXZ_word_normal"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub A2_FORM1()
zzbuttons_highlands.Show
buttons.Show
ListCommentsFrm.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PrintScreen()
WordBasic.SendKeys "{prtsc}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub f3()
SendKeys "{f3}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub f9()
SendKeys "{f9}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub af8()
SendKeys "%{f8}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_infuse_font()
Selection.Font.Color = RGB(73, 23, 109)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_infuse_back()
Selection.Interior.Color = RGB(73, 23, 109)
Selection.Font.Color = RGB(0, 0, 0)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_list()
For c = 1 To ActiveDocument.Comments.Count
        Z = Z & vbCrLf & c & " " & ActiveDocument.Comments(c).Scope
        https://social.msdn.microsoft.com/Forums/en-US/9a109c23-e29d-49a2-a563-a4d4ea50659e/vba-word-get-line-number-of-comment-object?forum=isvvba
        
        p = "Page" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdActiveEndPageNumber)
        l = "Line" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdFirstCharacterLineNumber)
        
        x = x & vbCrLf & c & " " & ActiveDocument.Comments(c).Range.Text
        q = q & vbCrLf & vbCrLf & "Your text: '..." & ActiveDocument.Comments(c).Scope & "...' [" & p & l & "] Feedback: " & ActiveDocument.Comments(c).Range.Text
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_zap()
For c = ActiveDocument.Comments.Count To 1 Step -1
        ActiveDocument.Comments(c).Delete
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_quote()
For c = 1 To ActiveDocument.Comments.Count
        Z = Z & vbCrLf & c & " " & ActiveDocument.Comments(c).Scope
        https://social.msdn.microsoft.com/Forums/en-US/9a109c23-e29d-49a2-a563-a4d4ea50659e/vba-word-get-line-number-of-comment-object?forum=isvvba
        
        p = "Page" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdActiveEndPageNumber)
        l = "Line" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdFirstCharacterLineNumber)
        
        x = x & vbCrLf & c & " " & ActiveDocument.Comments(c).Range.Text
        q = q & vbCrLf & vbCrLf & "Your text: '..." & ActiveDocument.Comments(c).Scope & "...' [" & p & l & "] Feedback: " & ActiveDocument.Comments(c).Range.Text
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RemoveAllComments()
Dim n As Long
Dim oComments As Comments
Set oComments = ActiveDocument.Comments
For n = oComments.Count To 1 Step -1
        oComments(n).Delete
Next 'n
Set oComments = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Commentslist()
Dim n As Long
Dim oComments As Comments
Set oComments = ActiveDocument.Comments
For n = oComments.Count To 1 Step -1
        If oComments(n).Date > #2/29/2016# Then
                xc = xc + 1
                Debug.Print xc & " " & oComments(n).Range.Text & " (" & oComments(n).Author & " " & oComments(n).Date & ")"
                
        End If
        
Next 'n
Set oComments = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1()
x = "1=UserFormOutlookXZXZXZ, 2=UserFormInputOutput"
x = InputBox(x, x, x)
If x = 1 Then UserFormOutlookXZXZXZ.Show
        If x = 2 Then UserFormInputOutput.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub CreateAppt()
Dim myItem As Object
Dim myRequiredAttendee, myOptionalAttendee, myResourceAttendee As Outlook.Recipient
xtext1 = "DIARY: Meeting at location at time with person re subject"
xtext2 = "Regards, XZXZXZ0XZXZXZXZXZXZ051 Email XZXZXZ@XZXZXZXZXZXZXZXZXZ.com"
xtext3 = "(Copied to my other diaries)"
xtext4 = "T.XZXZXZ@HEALTH.GOV.JE; t.XZXZXZ@gov.je; XZXZXZ@XZXZXZXZXZXZXZXZXZ.com; tim.XZXZXZ@XZXZXZi.co; XZXZXZ@XZXZXZ.com"
Dim appOL As Object
Dim objReminder As Object
Set appOL = GetObject(, "Outlook.application")
Set myItem = appOL.CreateItem(olAppointmentItem)
myItem.MeetingStatus = olMeeting
myItem.Subject = xtext1
myItem.Body = xtext1 & vbCrLf & xtext2 & vbCrLf & xtext3
myItem.Location = ""
myItem.Start = #9/24/2009 1:30:00 PM#
myItem.Start = Now()
myItem.Duration = 90
Set myRequiredAttendee = myItem.Recipients.Add("Nate Sun")
Set myRequiredAttendee = myItem.Recipients.Add(xtext4)
myRequiredAttendee.Type = olRequired
Set myOptionalAttendee = myItem.Recipients.Add("Kevin Kennedy")
Set myOptionalAttendee = myItem.Recipients.Add(xtext3)
myOptionalAttendee.Type = olOptional
Set myResourceAttendee = myItem.Recipients.Add(xtext3)
myResourceAttendee.Type = olResource
myItem.Display
myItem.Send
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a2_save_temp()
xdate = Format(Now, "yymmdd")
x = "V:\Data2017\temp\zztemp" & xdate
ActiveDocument.SaveAs FileName:=x, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
x = x & ".docx"
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_saveas()
fname1 = ActiveDocument.Path & "\" & ActiveDocument.Name
xdate = Format(Now, "yymmdd")
fname2 = Replace(fname1, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=fname2, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
ActiveDocument.SaveAs FileName:=fname1, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
x = fname1
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST()
Debug.Print ActiveDocument.Path & "\" & ActiveDocument.Name
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub saveas_timed()
xpath = ActiveDocument.Path & "\"
xdate = Format(Now, "yyyymmdd HHMM")
xname = xpath & ActiveDocument.Name
xname2 = Replace(xname, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=xname2
ActiveDocument.SaveAs FileName:=xname
x = xname2
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub whoami()
x = ActiveDocument.Path & "\" & ActiveDocument.Name
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_resize()
Dim i As Long
With ActiveDocument
For i = 1 To .InlineShapes.Count
        With .InlineShapes(i)
        .ScaleHeight = 50
        .ScaleWidth = 50
        End With
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ScalePictures40()
Dim i As Long
With ActiveDocument
For i = 1 To .InlineShapes.Count
        With .InlineShapes(i)
        .ScaleHeight = 40
        .ScaleWidth = 40
        End With
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AA_addautotext()
http://msdn.microsoft.com/en-us/library/office/ff195437.aspx
NormalTemplate.AutoTextEntries("#test1").Value = "The Johnson Company"
Dim XAUTOTEXT_HANDLE As String
Dim p As Integer
XAUTOTEXT_HANDLE = "#zz" 'Left(Trim(Selection.Range), 4)
p = InStr(1, Selection.Range, ".")
XAUTOTEXT_HANDLE = Left(Trim(Selection.Range), p)
MsgBox XAUTOTEXT_HANDLE
NormalTemplate.AutoTextEntries.Add Name:=XAUTOTEXT_HANDLE, Range:=Selection.Range
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ListAutoText()
Dim oAutoText   As Word.AutoTextEntry
With Application
 \\ Turn screenupdating off
.ScreenUpdating = False
 \\ Add new document
.Documents.Add
 \\ Loop through all Autotext entries in Normal.dot
For Each oAutoText In NormalTemplate.AutoTextEntries
        ' \\ Work with selection
        With .Selection
        ' \\ Make all Autotext names Bold
        .Font.Bold = True
        .TypeText Text:=oAutoText.Name
        .TypeParagraph ' \\ Insert Para
        
        ' \\ Turn of Bold for the Autotext entries
        .Font.Bold = False
        ' \\ Insert entry
        oAutoText.Insert Where:=.Range, RichText:=True
        
        ' \\ Insert two paragraphs
        .TypeParagraph
        .TypeText Text:="==============================================="
        .TypeParagraph
        End With
        Next
        
        ' \\ Turn screenupdating back on
        .ScreenUpdating = True
        End With
        xdate = Format(Now, "yyyymmdd")
        fname = "V:\Data2017\VBA\VBAWord\word_autotext_backup" & xdate & ".docx"
        ActiveDocument.SaveAs FileName:=fname
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function halfdays(x)
halfdays = Int(x)
If x > Int(x) + 0.49 Then halfdays = Int(x) + 0.5
        
End Function
Call ports2013_headings_multi_function("Normal", "Calibri", 11, "", wdBlue)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub bold_2hyphen()
Dim oPara As Paragraph
Dim xpos As Integer
For Each oPara In ActiveDocument.Paragraphs
For Each oPara In Selection.Paragraphs
        Debug.Print oPara.Range.Text
        '      If oPara.Range.Words(2).Characters(1) = ":" Then
        oPara.Range.Words(1).Font.Bold = True
        xpos = InStr(1, oPara.Range.Text, "-")
        For c = 1 To xpos
                oPara.Range.Characters(c).Font.Bold = True
        Next c
        '     End If
Next oPara
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub bold_firstword()
Dim oPara As Paragraph
For Each oPara In ActiveDocument.Paragraphs
For Each oPara In Selection.Paragraphs
        
        '      If oPara.Range.Words(2).Characters(1) = ":" Then
        oPara.Range.Words(1).Font.Bold = True
        oPara.Range.Characters(2).Font.Bold = False
        '     End If
Next oPara
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2017_Candara()
xfont = "Candara"
XSIZE = 11
fnormal = 11
XCOLOR1 = RGB(0, 128, 128)
XCOLOR2 = RGB(128, 32, 0)
XCOLOR3 = RGB(128, 96, 0)
XCOLOR4 = RGB(64, 0, 128)
Call set2016_headings("Heading 1", xfont, 14, "bold", XCOLOR1)
Call set2016_headings("Heading 2", xfont, 12, "bold", XCOLOR2)
Call set2016_headings("Heading 3", xfont, 12, "bold", XCOLOR3)
Call set2016_headings("Heading 4", xfont, 12, "bold", XCOLOR4)
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2017_calibri()
xfont = "Calibri"
XSIZE = 13
fnormal = 13
XCOLOR1 = RGB(0, 128, 128)
XCOLOR2 = RGB(128, 32, 0)
XCOLOR3 = RGB(128, 96, 0)
XCOLOR4 = RGB(64, 0, 128)
Call set2016_headings("Heading 1", xfont, 14, "bold", XCOLOR1)
Call set2016_headings("Heading 2", xfont, 12, "bold", XCOLOR2)
Call set2016_headings("Heading 3", xfont, 12, "bold", XCOLOR3)
Call set2016_headings("Heading 4", xfont, 12, "bold", XCOLOR4)
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2017_gothic()
xfont = "Century Gothic"
XSIZE = 10
fnormal = 10
XCOLOR1 = RGB(0, 128, 128)
XCOLOR2 = RGB(128, 32, 0)
XCOLOR3 = RGB(128, 96, 0)
XCOLOR4 = RGB(64, 0, 128)
Call set2016_headings("Heading 1", xfont, 14, "bold", XCOLOR1)
Call set2016_headings("Heading 2", xfont, 12, "bold", XCOLOR2)
Call set2016_headings("Heading 3", xfont, 12, "bold", XCOLOR3)
Call set2016_headings("Heading 4", xfont, 12, "bold", XCOLOR4)
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD()
For p = 1 To ActiveDocument.Paragraphs.Count
        
        If ActiveDocument.Paragraphs(p).Range.Information(wdWithInTable) Then
                'What ever you'd like to do
                'skip
                Else
                
                
                If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                        xtext = ActiveDocument.Paragraphs(p).Range.Text
                        If UCase(xtext) = xtext Then
                                ActiveDocument.Paragraphs(p).Range.Font.Size = 12
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 128, 128)
                                ' ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 80, 80)
                                
                                If InStr(1, UCase(xtext), UCase("Appendix")) Then
                                        ActiveDocument.Paragraphs(p).Range.Font.Size = 18
                                End If
                                
                                
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                End If
                
        End If
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub highlight_asterix()
For p = 1 To ActiveDocument.Paragraphs.Count
        x = ActiveDocument.Paragraphs(p).Range.Text
        If Left(x, 1) = "*" Then
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 80, 80) ' RGB(255, 0, 0)
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(200, 0, 0) ' RGB(255, 0, 0)
                
                Z = Z & vbCrLf & x
        End If
        
        
Next p
fname = ActiveDocument.Path & "\zztemp45678.txt"
Call PRINT_INFO(Z, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD_XZXZXZ()
XCOLOR1 = RGB(0, 128, 128)
XCOLOR2 = RGB(128, 32, 0)
XCOLOR3 = RGB(128, 96, 0)
XCOLOR4 = RGB(64, 0, 128)
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range.Text
        If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                        
                        
                        If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = XCOLOR1 ' RGB(255, 0, 0)
                                Else
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = XCOLOR1 ' RGB(0, 80, 80)
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                        
                        If InStr(1, UCase(xtext), UCase("APPENDIX")) Then ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                        End If
                End If
                
                
        Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD_infuse()
infuse = RGB(73, 23, 109)
For p = 1 To ActiveDocument.Paragraphs.Count
        
        
        If ActiveDocument.Paragraphs(p).Range.Information(wdWithInTable) Then
                'What ever you'd like to do
                'skip
                Else
                xtext = ActiveDocument.Paragraphs(p).Range.Text
                If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                        If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                                
                                
                                If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                        ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                        ActiveDocument.Paragraphs(p).Range.Font.Color = infuse
                                        ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                                        
                                        Else
                                        ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                        ActiveDocument.Paragraphs(p).Range.Font.Color = infuse
                                        Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                                End If
                                
                                If InStr(1, UCase(xtext), UCase("APPENDIX")) Then ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                                End If
                        End If
                        
                End If
        Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_format_text()
text_to_find = "1234567890"
For p = 1 To ActiveDocument.Paragraphs.Count
        found_text = Left(ActiveDocument.Paragraphs(p).Range.Text, 1)
        If InStr(1, text_to_find, found_text) Then
                
                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
                ActiveDocument.Paragraphs(p).Range.Font.Size = 16
                
        End If
        
        
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_legal_para()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range.Text
        
        For q = 1 To 9
                If Left(xtext, 1) = CStr(q) Then
                        ActiveDocument.Paragraphs(p).Range.Text = "~" & ActiveDocument.Paragraphs(p).Range.Text
                End If
        Next q
        x = 0
        looktext = Left(Trim(xtext), 6)
        x = count_find(looktext, ".")
        
        If x = 2 Then
                ActiveDocument.Paragraphs(p).Range.Text = "~" & vbTab & ActiveDocument.Paragraphs(p).Range.Text
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 200, 0)
                Debug.Print looktext, x, ActiveDocument.Paragraphs(p).Range.Text
        End If
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function count_find(xtext, thingtofind)
Dim xc As Integer
xc = 0
For c = 1 To Len(xtext)
        If Mid(xtext, c, 1) = thingtofind Then xc = xc + 1
        Next c
        count_find = xc
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_extract_text()
text_to_find = "Appendix"
For p = 1 To ActiveDocument.Paragraphs.Count
        If InStr(1, ActiveDocument.Paragraphs(p).Range.Text, text_to_find) Then
                xc = xc + 1
                x = x & " " & xc & ". " & ActiveDocument.Paragraphs(p).Range.Text & vbCrLf
                '' ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
        End If
        
        
        
Next p
Z = Replace(x, Chr(13), "")
Z = Replace(Z, text_to_find, ",  ")
Debug.Print x
Debug.Print LCase(Z)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function set2016_headings(xstyle, xfont, XSIZE, xbold, xcolor)
With ActiveDocument.Styles(xstyle).Font
.Name = xfont
.Size = XSIZE
.Bold = False
.Italic = False
If Len(xbold) > 1 Then .Bold = True
        
        'http://dmcritchie.mvps.org/excel/colors.htm
        .ColorIndex = wdBlack
        .ColorIndex = wdBlack
        
        
        If Len(xcolor) > 0 Then
                If xcolor > 10 Then
                        .Color = xcolor
                        Else
                        .ColorIndex = xcolor
                End If
        End If
        
        
        End With
        xindent = 0
        If xstyle = "Heading 1" Then xindent = 0
                If xstyle = "Heading 2" Then xindent = 0
                        If xstyle = "Heading 3" Then xindent = 0 '2
                                If xstyle = "Heading 4" Then xindent = 0 '3
                                        
                                        With ActiveDocument.Styles(xstyle).ParagraphFormat
                                        .LeftIndent = CentimetersToPoints(xindent)
                                        .RightIndent = CentimetersToPoints(0)
                                        .FirstLineIndent = CentimetersToPoints(1.5)
                                        
                                        .TabStops.ClearAll
                                        
                                        .SpaceBefore = 0
                                        .SpaceBeforeAuto = False
                                        .SpaceAfter = 0
                                        .SpaceAfterAuto = False
                                        .LineSpacingRule = wdLineSpace0pt0
                                        .Alignment = wdAlignParagraphLeft
                                        .WidowControl = True
                                        .KeepWithNext = False
                                        .KeepTogether = False
                                        .PageBreakBefore = False
                                        .NoLineNumber = False
                                        .Hyphenation = True
                                        .FirstLineIndent = CentimetersToPoints(0)
                                        .OutlineLevel = wdOutlineLevelBodyText
                                        .CharacterUnitLeftIndent = 0
                                        .CharacterUnitRightIndent = 0
                                        
                                        .LineUnitBefore = 0
                                        .LineUnitAfter = 0
                                        .MirrorIndents = False
                                        .TextboxTightWrap = wdTightNone
                                        End With
                                        
                                        
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test01()
Call attach_word_file
Call attach_excel_file
Call attach_ppt_file
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_word_file()
fname = "H:\XZXZXZD_ReOrg\Updates\XZXZXZD_ReDesign_Update No001.docx"
xlabel = "XZXZXZD_ReDesign_Update No001.docx"
Selection.InlineShapes.AddOLEObject ClassType:="Word.Document.12", _
FileName:=fname, _
LinkToFile:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\PROGRA~1\MICROS~2\Office12\Moc.exe", IconIndex:=7, IconLabel:= _
xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_excel_file()
fname = "H:\XZXZXZD_ReOrg\Initiation\XZXZXZD Governance Stakeholder Map v1.xlsm"
xlabel = "XZXZXZD Governance Stakeholder Map v1.xlsm"
Selection.InlineShapes.AddOLEObject ClassType:= _
"Excel.SheetMacroEnabled.12", FileName:= _
fname, _
LinkToFile:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\PROGRA~1\MICROS~2\Office12\Moc.exe", IconIndex:=10, IconLabel:= _
xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_ppt_file()
fname = "H:\XZXZXZD_ReOrg\Initiation\XZXZXZD_Initiation_Presentation.pptm"
xlabel = "XZXZXZD_Initiation_Presentation.pptm"
Selection.InlineShapes.AddOLEObject ClassType:= _
"PowerPoint.ShowMacroEnabled.12", FileName:= _
fname, LinkToFile _
:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\WINDOWS\Installer\{90120000-0011-0000-0000-0000000FF1CE}\pptico.exe", _
IconIndex:=19, IconLabel:=xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF2PRINT()
ppath = "z:\print" & "\" & ActiveDocument.Name
ppath = Replace(ppath, ".docx", ".pdf")
ppath = Replace(ppath, ".doc", ".pdf")
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
Call DeleteFile(FName)
ActiveDocument.ExportAsFixedFormat OutputFileName:= _
fname _
, ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
wdExportOptimizeForOnScreen, Range:=wdExportAllDocument, From:=1, To:=1, _
Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
BitmapMissingFonts:=True, UseISO19005_1:=False
 ChangeFileOpenDirectory "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\"
 MsgBox "DONE"
x = fname
FileCopy fname, ppath
x = InputBox(x, x, x)
x = InputBox(ppath, ppath, ppath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF2parent_dir()
newpath = getParentFolder2(ActiveDocument.Path & "\") & "\"
oldpath = ActiveDocument.Path & "\"
Call PDF
fname = ActiveDocument.Name
fname = Replace(fname, ".docm", ".pdf")
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
FileCopy oldpath & fname, newpath & fname
ReturnValue = Shell("explorer.EXE " & newpath, 1)  ' Run Calculator.
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function getParentFolder2(ByVal strFolder0)
Dim strFolder
strFolder = Left(strFolder0, InStrRev(strFolder0, "\") - 1)
getParentFolder2 = Left(strFolder, InStrRev(strFolder, "\") - 1)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF()
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
fname = Replace(fname, ".docm", ".pdf")
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
Call DeleteFile(FName)
ActiveDocument.ExportAsFixedFormat OutputFileName:= _
fname _
, ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
wdExportOptimizeForOnScreen, Range:=wdExportAllDocument, From:=1, To:=1, _
Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
BitmapMissingFonts:=True, UseISO19005_1:=False
 ChangeFileOpenDirectory "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\"
 MsgBox "DONE"
x = fname
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function FileExists(ByVal FileToTest As String) As Boolean
FileExists = (Dir(FileToTest) <> "")
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub DeleteFile(ByVal FileToDelete As String)
If FileExists(FileToDelete) Then 'See above
        SetAttr FileToDelete, vbNormal
        Kill FileToDelete
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp()
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
Debug.Print fname
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub zzdir_html()
Dim MyFile As String
Dim Counter As Long
xpath = ActiveDocument.Path & "\"
xpath = InputBox(xpath, xpath, xpath)
Dim DirectoryListArray() As String
ReDim DirectoryListArray(1000)
website = "http://www.XZXZXZXZXZXZcompany.com/JIBS/"
website = InputBox(website, website, website)
website = ""
Counter = 1
MyFile = Dir$("c:\temp\*.*")
MyFile = Dir$(xpath & "*.*")
MyFile = Dir$(xpath & "app*.*")
Do While MyFile <> ""
        DirectoryListArray(Counter) = MyFile
        
        
        
        xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
        'xtext2 = xtext2 & xpath & MyFile & vbCrLf
        Debug.Print MyFile
        MyFile = Dir$
        Counter = Counter + 1
        Loop
        xtext3 = xtext1 & vbCrLf & xtext2
        fname = xpath & "display.html"
        Call PRINT_INFO(xtext3, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub zzdir_pdf()
Dim MyFile As String
Dim Counter As Long
xpath = ActiveDocument.Path & "\"
xpath = InputBox(xpath, xpath, xpath)
Dim DirectoryListArray() As String
ReDim DirectoryListArray(10000)
website = "http://www.XZXZXZXZXZXZcompany.com/JIBS/"
website = InputBox(website, website, website)
website = ""
Counter = 1
MyFile = Dir$("c:\temp\*.*")
MyFile = Dir$(xpath & "*.*")
MyFile = Dir$(xpath & "app*.*")
Do While MyFile <> ""
        DirectoryListArray(Counter) = MyFile
        
        If InStr(1, UCase(MyFile), UCase("PDF")) Then
                'xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
                'xtext2 = xtext2 & xpath & MyFile & vbCrLf
                xtext2 = xtext2 & MyFile & vbCrLf
        End If
        
        If InStr(1, UCase(MyFile), UCase("DOC")) Then
                'xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
                'xtext2 = xtext2 & xpath & MyFile & vbCrLf
                xtext3 = xtext3 & MyFile & vbCrLf
        End If
        
        Debug.Print MyFile
        MyFile = Dir$
        Counter = Counter + 1
        Loop
        xtext3 = xtext1 & vbCrLf & xtext2 & vbCrLf & xtext3
        fname = xpath & "zzdir.txt"
        Call PRINT_INFO(xtext3, fname)
End Sub
Attribute VB_Name = "WORD2BLOG"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_old()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = xtext & ActiveDocument.Paragraphs(p).Range.Text & vbCrLf
Next p
fname = ActiveDocument.Path & "\temptext.txt"
Call PRINT_INFO(xtext, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_Blog_Word_Linked()
x = "[B]logger or [W]ordpress or [L]linked_in"
x = InputBox(x, x, x)
x = LCase(x)
xnewline = vbCrLf ' for blogger
If x = "w" Then xnewline = Chr(10) ' for wordpress
        If x = "b" Then xnewline = vbCrLf & "<br/>" ' for blogger
                If x = "b" Then xnewline = "<p/>"  ' for blogger
                        If x = "l" Then xnewline = "" ' for linkedin
                                
                                For p = 1 To ActiveDocument.Paragraphs.Count
                                        line2add = ActiveDocument.Paragraphs(p).Range.ListStyle
                                        
                                        line2add = ActiveDocument.Paragraphs(p).Range.ListFormat.ListString
                                        line2add = line2add & ActiveDocument.Paragraphs(p).Range.Text
                                        
                                        If ActiveDocument.Paragraphs(p).Range.Font.Italic = True Then
                                                If (x = "b" And Len(line2add) > 2) Then line2add = "<i>" & line2add & "</i>"
                                                End If
                                                
                                                If line2add = UCase(line2add) Then
                                                        If (x = "b" And Len(line2add) > 2) Then line2add = "<b>" & line2add & "</b>"
                                                        End If
                                                        
                                                        xtext = xtext & line2add & xnewline
                                                Next p
                                                
                                                
                                                If x = "l" Then
                                                        xtext = Replace(xtext, Chr(10), vbCrLf)
                                                        xtext = Replace(xtext, Chr(12), vbCrLf)
                                                        xtext = Replace(xtext, Chr(13), vbCrLf)
                                                        xtext = Replace(xtext, vbCrLf & vbCrLf, vbCrLf)
                                                End If
                                                fname = ActiveDocument.Path & "\temptext.txt"
                                                Call PRINT_INFO(xtext, fname)
                                                newname = Replace(fname, ".txt", ".html")
                                                FileCopy fname, newname
                                                ReturnValue = Shell("explorer.EXE " & newname, 1)  ' Run Calculator.
                                                Debug.Print ActiveDocument.Path
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_html_XZXZXZwebpage()
b1 = "<b style='color: #008080;'>"
b2 = "</b>"
h11 = "<h1 style='color: #008080;'>"
h12 = "</h1>"
For p = 1 To ActiveDocument.Paragraphs.Count
        XLINE = ActiveDocument.Paragraphs(p).Range.Text
        XLINE = Trim(XLINE)
        XLINE = Replace(XLINE, Chr(13), "")
        
        If p = 1 Then xtext = xtext & h11 & XLINE & h12 & vbCrLf
                
                
                If UCase(XLINE) = XLINE And Len(XLINE) > 3 Then
                        xtext = xtext & b1 & XLINE & b2 & vbCrLf
                        ElseIf InStr(1, XLINE, "Case Study") Then
                        xtext = xtext & h11 & XLINE & h12 & vbCrLf
                        Else
                        xtext = xtext & XLINE & "<BR>" & vbCrLf
                End If
                
                
                
                
                
        Next p
        fname = ActiveDocument.Path & "\temptext.txt"
        Call PRINT_INFO(xtext, fname)
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_html()
b1 = "<b style='color: red;'>"
b2 = "</b>"
h11 = "<h1 style='color: red;'>"
h12 = "</h1>"
For p = 1 To ActiveDocument.Paragraphs.Count
        XLINE = ActiveDocument.Paragraphs(p).Range.Text
        XLINE = Trim(XLINE)
        XLINE = Replace(XLINE, Chr(13), "")
        
        If p = 1 Then xtext = xtext & h11 & XLINE & h12 & vbCrLf
                
                If UCase(XLINE) = XLINE And Len(XLINE) > 3 Then
                        xtext = xtext & b1 & XLINE & b2 & vbCrLf
                        Else
                        xtext = xtext & XLINE & "<BR>" & vbCrLf
                End If
                
                
                
                
                
        Next p
        fname = ActiveDocument.Path & "\temptext.txt"
        Call PRINT_INFO(xtext, fname)
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function TRFMT(x)
xx = ""
x = tr_regex(x)
x = Replace(x, Chr(13), xx)
x = Replace(x, Chr(10), xx)
x = Replace(x, Chr(12), xx)
x = Replace(x, Chr(11), xx)
X = Replace(X, Chr(13), "!13!")
X = Replace(X, Chr(10), "!10!")
X = Replace(X, Chr(12), "!12!")
X = Replace(X, Chr(11), "!11!")
If InStr(1, UCase(Trim(x)), UCase("http")) Then
        X = "<a href=" & X & ">" & Trim(X) & "</a>" '/// using regex instead
End If
If x = UCase(x) Then
        If Len(x) > 2 Then
                x = "<b>" & Trim(x) & "</b>"
        End If
End If
TRFMT = Trim(x)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_html(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_html(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_html(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("explorer.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub tr_regex_URLtest()
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex_url(x)
Debug.Print y
Debug.Print "======================================"
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex_email(x)
Debug.Print y
Debug.Print "======================================"
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex(x)
Debug.Print y
Debug.Print "======================================"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex(xinput_string)
x = xinput_string
x = tr_regex_url(x)
x = tr_regex_email(x)
tr_regex = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex_url(xinput_string)
Dim reg
Dim rng As Range, i As Long, j As Long
Dim mtch, mt, tmpStr As String
Set reg = CreateObject("vbscript.regexp")
With reg
.IgnoreCase = True
.MultiLine = False
http://regexlib.com/Search.aspx?k=url&AspxAutoDetectCookieSupport=1
.Pattern = "(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?"
 .Pattern = "[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}"
.Global = True
End With
Set mtch = reg.Execute(xinput_string)
xoutput_string = xinput_string
For Each mt In mtch ' what you want to change
        now change the output string by find and replace stuff for each match of what you want to change
        xoutput_string = Replace(xoutput_string, mt, "<a href=" & mt & ">" & mt & "</a>" & vbCrLf)
Next mt
tr_regex_url = xoutput_string
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex_email(xinput_string)
Dim reg
Dim rng As Range, i As Long, j As Long
Dim mtch, mt, tmpStr As String
Set reg = CreateObject("vbscript.regexp")
With reg
.IgnoreCase = True
.MultiLine = False
http://regexlib.com/Search.aspx?k=url&AspxAutoDetectCookieSupport=1
.Pattern = "(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?"
.Pattern = "[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}"
.Global = True
End With
Set mtch = reg.Execute(xinput_string)
xoutput_string = xinput_string
For Each mt In mtch ' what you want to change
        now change the output string by find and replace stuff for each match of what you want to change
        xoutput_string = Replace(xoutput_string, mt, "<a href=mailto:" & mt & ">" & mt & "</a>" & vbCrLf)
Next mt
tr_regex_email = xoutput_string
End Function
Attribute VB_Name = "xfit_tables"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AutoFitToWind()
Selection.WholeStory
Selection.Font.Size = 9
Dim tbl As Table
Dim tbl2 As Table
For Each tbl In ActiveDocument.Tables
        tbl.AutoFitBehavior wdAutoFitWindow
        For Each tbl2 In ActiveDocument.Tables
                tbl2.AutoFitBehavior wdAutoFitWindow
                
                
        Next tbl2
        
Next tbl
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub VBA_WORD_FORMAT_SUBTABLES()
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(t).AutoFitBehavior wdAutoFitWindow
        
        
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                
                Next
                
                
                Next
                
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST_movewithtext()
For t = 1 To ActiveDocument.Tables.Count
        With ActiveDocument.Tables(t).Rows
        .WrapAroundText = True
        .HorizontalPosition = wdTableLeft
        .RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
        .DistanceLeft = CentimetersToPoints(0.32)
        .DistanceRight = CentimetersToPoints(0.32)
        .VerticalPosition = CentimetersToPoints(0)
        .RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
        .DistanceTop = CentimetersToPoints(0)
        .DistanceBottom = CentimetersToPoints(0)
        .AllowOverlap = False
        End With
        
Next t
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TESTt2()
With Selection.Tables(1).Rows
.WrapAroundText = True
.HorizontalPosition = wdTableLeft
.RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
.DistanceLeft = CentimetersToPoints(0.32)
.DistanceRight = CentimetersToPoints(0.32)
.VerticalPosition = CentimetersToPoints(0)
.RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
.DistanceTop = CentimetersToPoints(0)
.DistanceBottom = CentimetersToPoints(0)
.AllowOverlap = False
End With
End Sub
Attribute VB_Name = "TABLE_FONT_HTML"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub STEP3_A3FORMAT_SUBTABLES_a4()
Z = 260
ActiveDocument.Tables(1).Columns(1).Width = Z ' COL1
ActiveDocument.Tables(1).Columns(2).Width = Z ' COL2
ActiveDocument.Tables(1).Columns(3).Width = Z ' COL3
On Error Resume Next
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                '    ActiveDocument.Tables(T).Tables(Z).AutoFitBehavior wdAutoFitContent
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                
                
                Next
                
                ' ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitWindow
                'ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitContent
                
                
                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub STEP3_A3FORMAT_SUBTABLES_a3()
Z = 370
ActiveDocument.Tables(1).Columns(1).Width = Z ' COL1
ActiveDocument.Tables(1).Columns(2).Width = Z ' COL2
ActiveDocument.Tables(1).Columns(3).Width = Z ' COL3
On Error Resume Next
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        
        For Z = 1 To ActiveDocument.Tables(t).Tables.Count
                '    ActiveDocument.Tables(T).Tables(Z).AutoFitBehavior wdAutoFitContent
                ActiveDocument.Tables(t).Tables(Z).AutoFitBehavior wdAutoFitWindow
                '######
                ' Loop through each row in the table.
                For Each oRow In ActiveDocument.Tables(t).Tables(Z).Rows
                        
                        ' Loop through each cell in the current row.
                        For Each oCell In oRow.Cells
                                ' Set sCellText equal to text of the cell.
                                ' Note: This section can be modified to suit
                                ' your programming purposes.
                                sCellText = oCell.Range
                                If Left(sCellText, 5) = "GREEN" Then oCell.Range.Shading.ForegroundPatternColor = RGB(0, 222, 0)
                                        If Left(sCellText, 5) = "GREEN" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                
                                                If Left(sCellText, 5) = "AMBER" Then oCell.Range.Shading.ForegroundPatternColor = RGB(255, 102, 0)
                                                        If Left(sCellText, 5) = "AMBER" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                                
                                                                
                                                                If Left(sCellText, 3) = "RED" Then oCell.Range.Shading.ForegroundPatternColor = RGB(222, 0, 0)
                                                                        If Left(sCellText, 3) = "RED" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                                                
                                                                                ' Remove table cell markers from the text.
                                                                                'sCellText = Left$(sCellText, Len(sCellText) - 2)
                                                                                'MsgBox sCellText
                                                                                
                                                                        Next oCell
                                                                        
                                                                Next oRow
                                                                '######
                                                                
                                                                Next
                                                                
                                                                ' ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitWindow
                                                                'ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitContent
                                                                
                                                                
                                                                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RetrieveTableItems()
Dim oRow As Row
Dim oCell As Cell
Dim sCellText As String
 Turn on error checking.
On Error GoTo ErrorHandler
For Each tbl In ActiveDocument.Tables
        x = x + 1
        ' Loop through each row in the table.
        For Each oRow In ActiveDocument.Tables(x).Rows
                
                ' Loop through each cell in the current row.
                For Each oCell In oRow.Cells
                        ' Set sCellText equal to text of the cell.
                        ' Note: This section can be modified to suit
                        ' your programming purposes.
                        sCellText = oCell.Range
                        ' Debug.Print sCellText
                        oCell.Range.Font.Size = 10
                        
                        oCell.Range.Font.ColorIndex = 1
                        ' Remove table cell markers from the text.
                        ' sCellText = Left$(sCellText, Len(sCellText) - 2)
                        'MsgBox sCellText
                        
                Next oCell
                
        Next oRow
Next ' TABLE
ErrorHandler:
If Err <> 0 Then
        Dim Msg As String
        Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description _
        & Chr(13) & "Make sure there is a table in the current document."
        MsgBox Msg, , "Error"
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub color_cells()
Dim oRow As Row
Dim oCell As Cell
Dim sCellText As String
 Turn on error checking.
On Error GoTo ErrorHandler
For Each tbl In ActiveDocument.Tables
        x = x + 1
        ' Loop through each row in the table.
        For Each oRow In ActiveDocument.Tables(x).Rows
                
                ' Loop through each cell in the current row.
                For Each oCell In oRow.Cells
                        ' Set sCellText equal to text of the cell.
                        ' Note: This section can be modified to suit
                        ' your programming purposes.
                        sCellText = oCell.Range
                        ' Debug.Print sCellText
                        ' oCell.Range.Font.ColorIndex = 1
                        If Left(sCellText, 5) = "AMBER" Then oCell.Range.Font.TextColor = RGB(222, 0, 0)
                                
                                If InStr(1, sCellText, "AMBER") Then oCell.Range.Shading.ForegroundPatternColor = RGB(5, 55, 880)
                                        If InStr(1, sCellText, "AMBER") Then oCell.Range.Font.TextColor = RGB(222, 0, 0)
                                                
                                                
                                                
                                                oCell.Range.Font.Size = 10
                                                
                                                
                                                
                                                ' Remove table cell markers from the text.
                                                ' sCellText = Left$(sCellText, Len(sCellText) - 2)
                                                'MsgBox sCellText
                                                
                                        Next oCell
                                        
                                Next oRow
                        Next ' TABLE
                        ErrorHandler:
                        If Err <> 0 Then
                                Dim Msg As String
                                Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description _
                                & Chr(13) & "Make sure there is a table in the current document."
                                MsgBox Msg, , "Error"
                        End If
                        
End Sub
Attribute VB_Name = "header_footer_imagex"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub header_footer_image()
Call EditHeadersAndFooters
Call Insert_SqWrap_Image ' InsertImage
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub EditHeadersAndFooters()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = "ISO 14001 2015 ENVIRONMENTAL MANAGEMENT"
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 22
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub HeadersAndFooters_tri()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZ.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub HeadersAndFooters_XZXZXZheaded()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
x = x & vbCrLf & "XZXZXZ XZXZXZ Company Limited. Registered 121355 RC 23 May 2016"
x = x & vbCrLf & "Office Address: La Belle XZXZXZ, Belle XZXZXZ Ave, Grouville, Jersey JE3 9BL"
Dim i As Long
XHEADER = Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = True
        '.Headers(wdHeaderFooterPrimary).Range.Font.Size = 38
        '.Headers(wdHeaderFooterPrimary).Range.Text = "XZXZXZXZXZXZCompany"
        
        
        ' .Footers(wdHeaderFooterPrimary).Range.Font.Size = 15
        ' .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        '.Footers(wdHeaderFooterPrimary).Range.Font.Size = 20
        
        
        
        .Headers(2).Range.Font.Size = 35
        .Headers(2).Range.Text = "" '"XZXZXZXZXZXZCompany"
        .Headers(2).Range.Paragraphs.Alignment = 1 'wdAlignParagraphRight 1=centre, 2=right, 3=left
        imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\XZXZXZlogo.png"
        'imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\acc.png"
        
        '.Headers(2).Shapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True, Left:=70, Top:=3 ', Width:=60, Height:=60
        
        ' .Headers(2).Shapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True, Left:=70, Top:=3, Width:=60, Height:=60
        .Headers(2).Shapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True, Left:=70, Top:=-10 ', Width:=80, Height:=80
        
        .Headers(1).Range.Font.Size = 15
        .Headers(1).Range.Text = XHEADER
        .Headers(1).Range.Paragraphs.Alignment = 1 'wdAlignParagraphRight
        
        .Footers(1).Range.Font.Size = 10
        .Footers(1).Range.Text = XFOOTER
        .Footers(1).Range.Paragraphs.Alignment = 1 'wdAlignParagraphRight
        
        .Footers(2).Range.Font.Size = 10
        .Footers(2).Range.Text = x
        .Footers(2).Range.Paragraphs.Alignment = 1 'wdAlignParagraphRight
        
        
        End With
        
        Next
        
        
        
        ' ActiveDocument.Shapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub HeadersAndFooters_XZXZXZ()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = UCase("XZXZXZXZXZXZCompany - ") & Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub HeadersAndFooters_tim()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = UCase("XZXZXZ - ") & Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZ.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImage()
Dim imagePath As String
imagePath = "C:\\picture.jpg"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, _
LinkToFile:=False, _
SaveWithDocument:=True, _
Left:=370, _
Top:=-30, _
Anchor:=Selection.Range, _
Width:=60, _
Height:=60
Anchor:=Selection.Range, _
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Insert_SqWrap_Image()
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
With shp
.WrapFormat.Type = wdWrapSquare
.Left = 380
.Top = -50
.Width = 70
.Height = 70
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AddImageToHeader()
PURPOSE: Insert an image into a Word document heading
SOURCE: www.TheSpreadsheetGuru.com
Dim SrcePath As String
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\x1i-GEQY.png"
ThisDocument.Sections.Item(1).Headers(wdHeaderFooterPrimary) _
.Range.InlineShapes.AddPicture (SrcePath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Word_Insert_Image_in_Header()
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim oWD As Word.Document
Set oWD = ActiveDocument
With oWD.Sections(1)
.Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
.Headers(wdHeaderFooterPrimary).Range.Text = "Text as Header"
 .Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphRight
 .Headers(wdHeaderFooterPrimary).Range.InlineShapes.AddPicture SrcePath
End With
End Sub
Public Function ChangeHeadersAndFooters()
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .Headers(wdHeaderFooterPrimary).LinkToPrevious = True
        .Headers(wdHeaderFooterPrimary).Range.Text = "Koptekst vanaf pagina 2"
        .Footers(wdHeaderFooterPrimary).Range.Text = "Voettekst vanaf pagina 2"
        End With
Next i
ActiveDocument.Sections(1).PageSetup.DifferentFirstPageHeaderFooter = True
ActiveDocument.Sections(1).Headers(wdHeaderFooterFirstPage).Range.Text = "test"
With ActiveDocument.Sections(1)
.PageSetup.DifferentFirstPageHeaderFooter = True
.Headers(wdHeaderFooterFirstPage).LinkToPrevious = False
.Headers(wdHeaderFooterFirstPage).Range.Text = "eerste pagina koptekst"
.Footers(wdHeaderFooterFirstPage).Range.Text = "eerste pagina voettekst"
End With
Attribute VB_Name = "temp_buttons"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button1()
Call name_doc
Call HeadersAndFooters_tim
Call PDF
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button2()
Call quote_cal_12_blk
Call HeadersAndFooters_XZXZXZ
Call PDF
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button3()
Call header_footer_image
Selection.Font.Size = 10
 Selection.Font.Name = "Calibri"
 Selection.Font.ColorIndex = wdBlack
Call HeadersAndFooters_XZXZXZheaded
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button4()
Call header_footer_image
Call PDFtext.Show
Selection.Range.Case = wdTitleWord
Selection.Style = ActiveDocument.Styles("Heading 1")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button8()
Call HeadersAndFooters_XZXZXZheaded
Call aa_headings2017_calibri
Call PDF
End Sub
Attribute VB_Name = "word_templates_opath"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ChangeAttachedTemplate()
Dim oDoc As Document  'make sure you're getting info on the right document
Set oDoc = ActiveDocument
If oDoc.Type = wdTypeTemplate Then Exit Sub
        Dim oTemplate As Template
        Dim strTemplatePath
        Set oTemplate = oDoc.AttachedTemplate
        If InStr(UCase(oTemplate.FullName), "OLDPATH") > 0 Then
                oDoc.AttachedTemplate = "FULLNEWPATH" & oTemplate.Name
        End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub FindTemplate()
MsgBox ThisDocument.AttachedTemplate.FullName
MsgBox ActiveDocument.AttachedTemplate.FullName
x = ActiveDocument.AttachedTemplate.FullName
Debug.Print x
End Sub
Attribute VB_Name = "temp_nameword"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub name_doc()
For p = 1 To ActiveDocument.Paragraphs.Count
        
        
        x = x & ActiveDocument.Paragraphs(p).Range.Text
        
        If Len(x) > 50 Then Exit For
                
        Next p
        For q = 1 To 47
                x = Replace(x, Chr(q), " ")
                x = Replace(x, "  ", " ")
        Next q
        For q = 58 To 64
                x = Replace(x, Chr(q), " ")
                x = Replace(x, "  ", " ")
        Next q
        fname = ActiveDocument.Path & "\CMI_" & Trim(x)
        Debug.Print fname
        
        ActiveDocument.SaveAs FileName:=fname
End Sub
Attribute VB_Name = "XFINDANDREPLACE"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub fandr()
replace 1,2,3,4, with crlf
For xnumber = 1 To 9
        
        
        Selection.Find.ClearFormatting
        Selection.Find.Replacement.ClearFormatting
        With Selection.Find
        .Text = xnumber
        .Replacement.Text = "^p"
        .Forward = True
        .Wrap = wdFindAsk
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
        End With
        Selection.Find.Execute Replace:=wdReplaceAll
        Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub FandR_macro()
XFIND = "(yes)"
XREPLACE = "(YES)"
Call XFINDANDREPLACE(XFIND, XREPLACE)
Call XFINDANDREPLACE("(PARTIALLY)", "(PARTIALLY)")
Call XFINDANDREPLACE("(NO)", "(NO)")
Call XFINDANDREPLACE("XZXZXZ", "XZXZXZ")
For r = 1 To 9
        
        Call XFINDANDREPLACE("Appendix " & r, "Appendix " & r)
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ClrFmtg2()
ActiveDocument.Select
Selection.ClearFormatting
Selection.Font.Reset
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function XFINDANDREPLACE(XFIND, XREPLACE)
Macro1 Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
Selection.Find.Replacement.Font.Bold = False
Selection.Find.Replacement.Font.ColorIndex = wdDarkRed
With Selection.Find
.Text = XFIND
.Replacement.Text = XREPLACE
.Forward = True
.Wrap = wdFindContinue
.Format = True
  .Font.ColorIndex = wdDarkRed
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
End Function
Attribute VB_Name = "Module2"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test876()
xtext = "The cat sat on the mat and did "
x = reverse_string(6, xtext, " ")
Debug.Print Right(xtext, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function reverse_string(xno, xtext, XFIND)
xlen = Len(xtext)
For Z = xlen To 1 Step -1 ' go backwards
        If Mid(xtext, Z, 1) = XFIND Then xqty = xqty + 1
                If xqty = xno Then Exit For
                        
                Next Z
                xresult = xlen - Z
                reverse_string = xresult
                
End Function
Attribute VB_Name = "ScreenPrintx"
Declare Windows API Functions
Private Declare Sub keybd_event Lib "user32" (ByVal bVk As Byte, ByVal _
bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
Declare Virtual Key Codes
Private Const VK_SNAPSHOT = &H2C
Private Const VK_KEYUP = &H2
Private Const VK_MENU = &H12
Public Const VK_TAB = &H9
Public Const VK_ENTER = &HD
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ScreenPrint()
Press Alt + TAB Keys -- Step1
Alt_Tab
Press Print Screen key using Windows API -- Step2.
keybd_event VK_SNAPSHOT, 1, 0, 0 'Print Screen key down
keybd_event VK_SNAPSHOT, 1, VK_KEYUP, 0 'Print key Up - Screenshot to Clipboard
Paste Image in Chart and Export it to Image file. -- Step3
Charts.Add
ThisWorkbook.Charts(1).AutoScaling = True
ThisWorkbook.Charts(1).Paste
ThisWorkbook.Charts(1).Export FileName:="E:\ClipBoardToPic.jpg", FilterName:="jpg"
Supress warning message and Delete the Chart
Application.DisplayAlerts = False
ThisWorkbook.Charts(1).Delete
Application.DisplayAlerts = True
Attach the file to Excel -- Step4
Attach_File
ThisWorkbook.Activate
ThisWorkbook.Sheets(1).Select
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Alt_Tab()
DoEvents
keybd_event VK_MENU, 1, 0, 0 'Alt key down
DoEvents
keybd_event VK_TAB, 0, 0, 0 'Tab key down
DoEvents
keybd_event VK_TAB, 1, VK_KEYUP, 0 'Tab key up
DoEvents
keybd_event VK_ENTER, 1, 0, 0 'Tab key down
DoEvents
keybd_event VK_ENTER, 1, VK_KEYUP, 0 'Tab key up
DoEvents
keybd_event VK_MENU, 1, VK_KEYUP, 0 'Alt key up
DoEvents
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Attach_File()
ActiveCell.Select
ActiveSheet.OLEObjects.Add(FileName:="E:\ClipBoardToPic.jpg", Link:=False, _
DisplayAsIcon:=True, IconFileName:= _
"C:\Program Files\Internet Explorer\iexplore.exe", IconIndex:=10, IconLabel _
:="ClipBoardToPic.jpg").Select
End Sub
Attribute VB_Name = "images_word_pictures"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImages()
http://word.tips.net/T010726_Inserting_Multiple_Graphics_in_a_Document.html
Dim doc As Word.Document
Dim fd As FileDialog
Dim vItem As Variant
Dim mg1 As Range
Dim mg2 As Range
Set fd = Application.FileDialog(msoFileDialogFilePicker)
Set doc = ActiveDocument
With fd
.Filters.Add "Images", "*.gif; *.jpg; *.jpeg", 1
.FilterIndex = 1
If .Show = -1 Then
        For Each vItem In .SelectedItems
                Set mg2 = ActiveDocument.Range
                mg2.Collapse wdCollapseEnd
                doc.InlineShapes.AddPicture _
                FileName:=vItem, _
                LinkToFile:=False, SaveWithDocument:=True, Range:=mg2
                Set mg1 = ActiveDocument.Range
                mg1.Collapse wdCollapseEnd
                
                mg1.Text = vbCrLf & vbCrLf
        Next vItem
End If
End With
Set fd = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub GetPictures()
Dim sPic As String
Dim sPath As String
fname = "XZXZXZlogo.png"
sPath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\"
sPath = "V:\Data2016\RichardRolfe\XZXZXZ_LeanPM (Film)\" 'c:\myfolder\"
sPath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\XZXZXZlogo.png"
 sPic = Dir(sPath & "*.png")
Do While sPic <> ""
        Selection.InlineShapes.AddPicture _
        FileName:=sPath & sPic, _
        LinkToFile:=False, SaveWithDocument:=True
        sPic = Dir
        Selection.TypeParagraph
        Selection.TypeParagraph
        Loop
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_resize_tim()
x = ActiveDocument.InlineShapes.Count
For i = 1 To x
        ActiveDocument.InlineShapes(i).Height = 200 ' * 1.2
        ActiveDocument.InlineShapes(i).Width = 300 '* 1.2
        
        
        
        
Next i
MsgBox x
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ResizePics()
Dim shp As Word.Shape
Dim ishp As Word.InlineShape
If Word.Selection.Type <> wdSelectionInlineShape And _
        Word.Selection.Type <> wdSelectionShape Then
        Exit Sub
End If
If Word.Selection.Type = wdSelectionInlineShape Then
        Set ishp = Word.Selection.Range.InlineShapes(1)
        ishp.LockAspectRatio = False
        ishp.Height = 55 'InchesToPoints(1.78)
        ishp.Width = 44 'InchesToPoints(3.17)
        Else
        If Word.Selection.Type = wdSelectionShape Then
                Set shp = Word.Selection.ShapeRange(1)
                shp.LockAspectRatio = False
                shp.Height = 33 'InchesToPoints(1.78)
                shp.Width = 22 'InchesToPoints(3.17)
        End If
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ResizePics_all()
Dim shp As Word.Shape
Dim ishp As Word.InlineShape
If Word.Selection.Type <> wdSelectionInlineShape And _
        Word.Selection.Type <> wdSelectionShape Then
        Exit Sub
End If
If Word.Selection.Type = wdSelectionInlineShape Then
        Set ishp = Word.Selection.Range.InlineShapes(1)
        ishp.LockAspectRatio = False
        ishp.Height = 55 'InchesToPoints(1.78)
        ishp.Width = 44 'InchesToPoints(3.17)
        Else
        If Word.Selection.Type = wdSelectionShape Then
                Set shp = Word.Selection.ShapeRange(1)
                shp.LockAspectRatio = False
                shp.Height = 33 'InchesToPoints(1.78)
                shp.Width = 22 'InchesToPoints(3.17)
        End If
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImage()
Dim imagePath As String
imagePath = "C:\\picture.jpg"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\XZXZXZlogo.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, _
LinkToFile:=False, _
SaveWithDocument:=True, _
Left:=370, _
Top:=-30, _
Anchor:=Selection.Range, _
Width:=60, _
Height:=60
Anchor:=Selection.Range, _
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\XZXZXZlogo.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function Insert_bunch_images(fname)
imagePath = fname ' "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
 Selection.TypeParagraph
  Selection.TypeText Text:="Title" & fname
 Selection.TypeParagraph
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
  Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True)
With shp
 .WrapFormat.Type = 4  'wdWrapSquare
.WrapFormat.Type = wdWrapInline
.Width = 500
.Height = 500
End With
Selection.TypeParagraph
Selection.TypeText Text:="Title" & fname
Selection.TypeParagraph
End Function
Private Sub cmdFileDialog_Click()
Requires reference to Microsoft Office 12.0 Object Library.
Dim fDialog As Office.FileDialog
Dim varFile As Variant
Set up the File Dialog.
Set fDialog = Application.FileDialog(msoFileDialogFilePicker)
With fDialog
Allow user to make multiple selections in dialog box.
.AllowMultiSelect = True
Set the title of the dialog box.
.Title = "Please select one or more files"
Clear out the current filters, and add our own.
.Filters.Clear
.Filters.Add "Access Databases", "*.MDB; *.ACCDB"
.Filters.Add "Access Projects", "*.ADP"
.Filters.Add "All Files", "*.png"
Show the dialog box. If the .Show method returns True, the
user picked at least one file. If the .Show method returns
False, the user clicked Cancel.
If .Show = True Then
        'Loop through each file selected and add it to the list box.
        For Each varFile In .SelectedItems
                'Me.FileList.AddItem varFile
                Debug.Print varFile
                Call Insert_bunch_images(varFile)
                Next
                Else
                MsgBox "You clicked Cancel in the file dialog box."
        End If
        End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Insert_SqWrap_Image()
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
With shp
.WrapFormat.Type = wdWrapSquare
.Left = 380
.Top = -50
.Width = 70
.Height = 70
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AddImageToHeader()
PURPOSE: Insert an image into a Word document heading
SOURCE: www.TheSpreadsheetGuru.com
Dim SrcePath As String
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\x1i-GEQY.png"
ThisDocument.Sections.Item(1).Headers(wdHeaderFooterPrimary) _
.Range.InlineShapes.AddPicture (SrcePath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Word_Insert_Image_in_Header()
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim oWD As Word.Document
Set oWD = ActiveDocument
With oWD.Sections(1)
.Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
.Headers(wdHeaderFooterPrimary).Range.Text = "Text as Header"
 .Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphRight
 .Headers(wdHeaderFooterPrimary).Range.InlineShapes.AddPicture SrcePath
End With
End Sub
Attribute VB_Name = "SELETEXTX"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xlist()
xlist Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
.Text = ";"
.Replacement.Text = ";^p"
.Forward = True
.Wrap = wdFindAsk
.Format = False
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
Selection.Sort ExcludeHeader:=False, FieldNumber:="Paragraphs", _
SortFieldType:=wdSortFieldAlphanumeric, SortOrder:=wdSortOrderAscending, _
FieldNumber2:="", SortFieldType2:=wdSortFieldAlphanumeric, SortOrder2:= _
wdSortOrderAscending, FieldNumber3:="", SortFieldType3:= _
wdSortFieldAlphanumeric, SortOrder3:=wdSortOrderAscending, Separator:= _
wdSortSeparateByTabs, SortColumn:=False, CaseSensitive:=False, LanguageID _
:=wdEnglishUK, SubFieldNumber:="Paragraphs", SubFieldNumber2:= _
"Paragraphs", SubFieldNumber3:="Paragraphs"
With ListGalleries(wdBulletGallery).ListTemplates(1).ListLevels(1)
.NumberFormat = ChrW(61623)
.TrailingCharacter = wdTrailingTab
.NumberStyle = wdListNumberStyleBullet
.NumberPosition = CentimetersToPoints(0.63)
.Alignment = wdListLevelAlignLeft
.TextPosition = CentimetersToPoints(1.27)
.TabPosition = wdUndefined
.ResetOnHigher = 0
.StartAt = 1
With .Font
.Bold = wdUndefined
.Italic = wdUndefined
.StrikeThrough = wdUndefined
.Subscript = wdUndefined
.Superscript = wdUndefined
.Shadow = wdUndefined
.Outline = wdUndefined
.Emboss = wdUndefined
.Engrave = wdUndefined
.AllCaps = wdUndefined
.Hidden = wdUndefined
.Underline = wdUndefined
.Color = wdUndefined
.Size = wdUndefined
.Animation = wdUndefined
.DoubleStrikeThrough = wdUndefined
.Name = "Symbol"
End With
.LinkedStyle = ""
End With
ListGalleries(wdBulletGallery).ListTemplates(1).Name = ""
Selection.Range.ListFormat.ApplyListTemplateWithLevel ListTemplate:= _
ListGalleries(wdBulletGallery).ListTemplates(1), ContinuePreviousList:= _
False, ApplyTo:=wdListApplyToWholeList, DefaultListBehavior:= _
wdWord10ListBehavior
Selection.Range.ListFormat.RemoveNumbers NumberType:=wdNumberParagraph
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_fmt()
On Error Resume Next
For x = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
        ActiveDocument.Tables(x).Rows.Height = InchesToPoints(0)
        For Row = 1 To ActiveDocument.Tables(x).Rows.Count
                For Col = 1 To ActiveDocument.Tables(x).Columns.Count
                        'ActiveDocument.Tables(X).Cell(Row, Col).Range.Text
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Size = 9
                        ' .Font.Size = 8
                        Next
                        Next
                        
                Next x
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_subtable_element()
On Error Resume Next
For q = 1 To 1 'top table
        
        ActiveDocument.Tables(q).AutoFitBehavior wdAutoFitWindow
        ActiveDocument.Tables(q).Rows.Height = InchesToPoints(0)
        
        For t = 1 To ActiveDocument.Tables(q).Tables.Count
                xStyleTable = xStyleTable + 1
                If xStyleTable > 6 Then xStyleTable = 1
                        
                        ActiveDocument.Tables(q).Tables(t).Style = "Light List - Accent 5"
                        'ActiveDocument.Tables(q).Tables(t).Style = "Light List - Accent " & t
                        'ActiveDocument.Tables(q).Tables(t).Style = "Light sHADING - Accent " & xStyleTable
                        'ActiveDocument.Tables(q).Tables(t).Style = "Table Grid"
                        ' ActiveDocument.Tables(q).Tables(t).AutoFitBehavior wdAutoFitWindow
                        'AMEND_CELLS = "yes"
                        If AMEND_CELLS = "yes" Then
                                For qRow = 1 To ActiveDocument.Tables(q).Tables(t).Rows.Count
                                        For qCol = 1 To ActiveDocument.Tables(q).Tables(t).Columns.Count
                                                
                                                ActiveDocument.Tables(q).Tables(t).Cell(qRow, qCol).Range.Font.Size = 9
                                                'ActiveDocument.Tables(q).Tables(t).Style = "Table Grid"
                                                
                                                Next
                                                Next
                                        End If
                                Next t
                                
                        Next q
                        MsgBox "done"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_XZXZXZ_candara()
On Error Resume Next
For x = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
        ActiveDocument.Tables(x).Rows.Height = InchesToPoints(0)
        For Row = 1 To ActiveDocument.Tables(x).Rows.Count
                For Col = 1 To ActiveDocument.Tables(x).Columns.Count
                        'ActiveDocument.Tables(X).Cell(Row, Col).Range.Text
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Size = 11
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Color = wdColorBlack
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Name = "Calibri"
                        '  ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Name = "Candara"
                        
                        ' .Font.Size = 8
                        Next
                        Next
                        ActiveDocument.Tables(x).Style = "Table Grid"
                        'ActiveDocument.Tables(x).Style = "Light List - Accent 1"
                        '  ActiveDocument.Tables(x).Style = "Light gRID - Accent 3"
                        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
                Next x
                
                
                
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_agenct_12_blue()
Selection.Font.Name = "Agency FB"
Selection.Font.Size = 10
Selection.Font.Size = 12
Selection.Font.ColorIndex = wdDarkBlue
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_cal_11_teal()
Selection.Font.Name = "CAlibri"
Selection.Font.Size = 10
Selection.Font.Size = 11
Selection.Font.Color = RGB(0, 128, 128)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_cal_12_blk()
Selection.Font.Name = "CAlibri"
Selection.Font.Size = 10
Selection.Font.Size = 12
Selection.Font.Color = RGB(0, 0, 0)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub whoami()
x = ActiveDocument.Name
y = ActiveDocument.Path & "\" & x
Z = InputBox(x, x, x)
Z = InputBox(y, y, y)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_extract()
xtext = Selection.Range.Text
xtext = Replace(xtext, vbCrLf, " ")
xtext = Replace(xtext, vbCr, " ")
xtext = Replace(xtext, vbLf, " ")
For q = 1 To 32
        xtext = Replace(xtext, Chr(q), " ")
Next q
xpage = Selection.Information(wdActiveEndPageNumber)
x = " '..." & xtext & "..' [Line: " & GetLineNum(Selection.Range) & " on page " & xpage & " ]"
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub WhereAmI()
MsgBox "Paragraph number: " & GetParNum(Selection.Range) & vbCrLf & _
"Absolute line number: " & GetAbsoluteLineNum(Selection.Range) & vbCrLf & _
"Relative line number: " & GetLineNum(Selection.Range)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub whoami()
x = ActiveDocument.Path & "\" & ActiveDocument.Name
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetParNum(r As Range) As Integer
Dim rParagraphs As Range
Dim CurPos As Long
r.Select
CurPos = ActiveDocument.Bookmarks("\startOfSel").Start
Set rParagraphs = ActiveDocument.Range(Start:=0, End:=CurPos)
GetParNum = rParagraphs.Paragraphs.Count
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetLineNum(r As Range) As Integer
relative to current page
GetLineNum = r.Information(wdFirstCharacterLineNumber)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetAbsoluteLineNum(r As Range) As Integer
Dim i1 As Integer, i2 As Integer, Count As Integer, rTemp As Range
r.Select
Do
i1 = Selection.Information(wdFirstCharacterLineNumber)
Selection.GoTo what:=wdGoToLine, which:=wdGoToPrevious, Count:=1, Name:=""
Count = Count + 1
i2 = Selection.Information(wdFirstCharacterLineNumber)
Loop Until i1 = i2
r.Select
GetAbsoluteLineNum = Count
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xlist2line()
xlist2line Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
.Text = "^p"
.Replacement.Text = "; "
.Forward = True
.Wrap = wdFindAsk
.Format = False
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_ascii()
x = Selection
For q = 1 To Len(x)
        Z = Z & Mid(x, q, 1) & "(" & Asc(Mid(x, q, 1)) & ")"
        
Next q
Z = InputBox(Z, Z, Z)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_oneline()
x = Selection
x = Replace(x, Chr(7), " ")
x = Replace(x, Chr(10), " ")
x = Replace(x, vbCrLf, " ")
x = Replace(x, Chr(13), " ")
On Error Resume Next
For q = 1 To 31
        x = Replace(x, q, " ")
Next q
For q = 127 To 250
        x = Replace(x, q, " ")
Next q
fname = ActiveDocument.Path & "\TEMP23456.TXT"
Call PRINT_INFO(x, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_oneline2()
x = Selection
x = Replace(x, Chr(7), " ")
x = Replace(x, Chr(10), " ")
x = Replace(x, vbCrLf, " ")
x = Replace(x, Chr(13), " ")
On Error Resume Next
For q = 1 To 31
        x = Replace(x, q, " ")
Next q
For q = 127 To 250
        x = Replace(x, q, " ")
Next q
Selection.Text = x & vbNewLine
End Sub
Attribute VB_Name = "formsx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1_pdftext()
PDFtext.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1_userform4()
UserForm4.Show
End Sub
Attribute VB_Name = "testingx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test_tyle()
Debug.Print Selection.Range.Text
Debug.Print Selection.Range.Style
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub testtabs()
Selection.Paragraphs.TabStops.ClearAll
With Selection.Paragraphs.TabStops
.Add Position:=InchesToPoints(1.5), Alignment:=wdAlignTabLeft
.Add Position:=InchesToPoints(2), Alignment:=wdAlignTabLeft
.Add Position:=InchesToPoints(3), Alignment:=wdAlignTabLeft
.Add Position:=InchesToPoints(4), Alignment:=wdAlignTabLeft
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ClrFmtg()
ActiveDocument.Select
Selection.ClearFormatting
Selection.Font.Reset
End Sub
Attribute VB_Name = "exportx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub vba_export_modules_V()
#http://www.cpearson.com/Excel/VBE.aspx
 reference to extensibility library
xprefix = "V:\Data2017\VBA\VBAWord\vba_"
Dim objMyProj As VBProject
Dim objVBComp As VBComponent
Set objMyProj = Application.VBE.ActiveVBProject
For Each objVBComp In objMyProj.VBComponents
        If objVBComp.Type = vbext_ct_StdModule Then
                
                
                'xprefix = "V:\Data2016\VBA\VBAWord\word_"
                'objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".bas"
                ' objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
                xprefix = "V:\Data2017\VBA\VBAWord\word03_"
                objVBComp.Export xprefix & objVBComp.Name & ".bas"
                'objVBComp.Export xprefix & objVBComp.Name & ".txt"
                
                Debug.Print xprefix
                
        End If
        Next
        Shell ("explorer.exe " & "V:\Data2017\VBA\VBAWord\")
End Sub
Attribute VB_Name = "legal"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2017_legal()
xfont = "Calibri"
XSIZE = 13
fnormal = 13
XCOLOR1 = RGB(0, 128, 128)
XCOLOR2 = RGB(128, 32, 0)
XCOLOR3 = RGB(128, 96, 0)
XCOLOR4 = RGB(64, 0, 128)
XCOLOR5 = vbBlack
Call legal_headings("Heading 1", xfont, 13, "", XCOLOR1)
Call legal_headings("Heading 2", xfont, 13, "", XCOLOR5)
Call legal_headings("Heading 3", xfont, 13, "", XCOLOR5)
Call legal_headings("Heading 4", xfont, 13, "", XCOLOR4)
Call legal_headings("Normal", xfont, fnormal, "", "")
Call legal_headings("List Paragraph", xfont, fnormal, "", "")
Call legal_headings("No Spacing", xfont, fnormal, "", "")
Call legal_headings("TOC Heading", xfont, fnormal, "", "")
Call legal_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function legal_headings(xstyle, xfont, XSIZE, xbold, xcolor)
With ActiveDocument.Styles(xstyle).Font
.Name = xfont
.Size = XSIZE
.Bold = False
.Italic = False
If Len(xbold) > 1 Then .Bold = True
        
        'http://dmcritchie.mvps.org/excel/colors.htm
        .ColorIndex = wdBlack
        .ColorIndex = wdBlack
        
        
        If Len(xcolor) > 0 Then
                If xcolor > 10 Then
                        .Color = xcolor
                        Else
                        .ColorIndex = xcolor
                End If
        End If
        
        
        End With
        xindent = 0
        If xstyle = "Heading 1" Then xindent = 0
                If xstyle = "Heading 2" Then xindent = 0
                        If xstyle = "Heading 3" Then xindent = 0 '2
                                If xstyle = "Heading 4" Then xindent = 1 '3
                                        
                                        With ActiveDocument.Styles(xstyle).ParagraphFormat
                                        .LeftIndent = CentimetersToPoints(xindent)
                                        .RightIndent = CentimetersToPoints(0)
                                        .FirstLineIndent = CentimetersToPoints(1.5)
                                        
                                        .TabStops.ClearAll
                                        If xstyle = "Heading 1" Then .TabStops(InchesToPoints(0.5)).Alignment = wdAlignTabLeft
                                                If xstyle = "Heading 2" Then .TabStops(InchesToPoints(1)).Alignment = wdAlignTabLeft
                                                        If xstyle = "Heading 3" Then .TabStops(InchesToPoints(1)).Alignment = wdAlignTabLeft
                                                                If xstyle = "Heading 4" Then .TabStops(InchesToPoints(1)).Alignment = wdAlignTabLeft
                                                                        
                                                                        .SpaceBefore = 1
                                                                        .SpaceBeforeAuto = False
                                                                        .SpaceAfter = 1
                                                                        .SpaceAfterAuto = False
                                                                        .LineSpacingRule = wdLineSpace0pt0
                                                                        .Alignment = wdAlignParagraphLeft
                                                                        .WidowControl = True
                                                                        .KeepWithNext = False
                                                                        .KeepTogether = False
                                                                        .PageBreakBefore = False
                                                                        .NoLineNumber = True
                                                                        .Hyphenation = True
                                                                        .FirstLineIndent = CentimetersToPoints(0)
                                                                        .OutlineLevel = wdOutlineLevelBodyText
                                                                        .CharacterUnitLeftIndent = 0
                                                                        .CharacterUnitRightIndent = 0
                                                                        
                                                                        .LineUnitBefore = 1
                                                                        .LineUnitAfter = 1
                                                                        .MirrorIndents = False
                                                                        .TextboxTightWrap = wdTightNone
                                                                        End With
                                                                        
                                                                        
End Function
Attribute VB_Name = "NewMacros"
Attribute VB_Name = "watermarkS"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RemoveWaterMark()
http://www.vbaexpress.com/kb/getarticle.php?kb_id=588
Dim strWMName As String
On Error GoTo ErrHandler
ActiveDocument.Sections(1).Range.Select
strWMName = ActiveDocument.Sections(1).Index
ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
Selection.HeaderFooter.Shapes(strWMName).Select
Selection.Delete
ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
Exit Sub
ErrHandler:
MsgBox "An error occured trying to remove the watermark." & Chr(13) & _
"Error Number: " & Err.Number & Chr(13) & _
"Decription: " & Err.Description, vbOKOnly + vbCritical, "Error"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub watermarkx()
xtext = "DISCUSSION DRAFT "
xtext = "NOT LEGAL ADVICE "
XH = 4
XW = 15
ActiveDocument.Sections(1).Range.Select
ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
Selection.HeaderFooter.Shapes.AddTextEffect( _
PowerPlusWaterMarkObject4559526, xtext, "Calibri", 1, False _
, False, 0, 0).Select
 Selection.ShapeRange.Name = "PowerPlusWaterMarkObject4559526"
Selection.ShapeRange.TextEffect.NormalizedHeight = False
Selection.ShapeRange.Line.Visible = False
Selection.ShapeRange.Fill.Visible = True
Selection.ShapeRange.Fill.Solid
Selection.ShapeRange.Fill.ForeColor.RGB = RGB(192, 192, 192)
Selection.ShapeRange.Fill.Transparency = 0.5
Selection.ShapeRange.Rotation = 315
Selection.ShapeRange.LockAspectRatio = True
Selection.ShapeRange.Height = CentimetersToPoints(XH)
Selection.ShapeRange.Width = CentimetersToPoints(XW)
Selection.ShapeRange.WrapFormat.AllowOverlap = True
Selection.ShapeRange.WrapFormat.Side = wdWrapNone
Selection.ShapeRange.WrapFormat.Type = 3
Selection.ShapeRange.RelativeHorizontalPosition = _
wdRelativeVerticalPositionMargin
Selection.ShapeRange.RelativeVerticalPosition = _
wdRelativeVerticalPositionMargin
Selection.ShapeRange.Left = wdShapeCenter
Selection.ShapeRange.Top = wdShapeCenter
ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
End Sub
Attribute VB_Name = "XZXZXZ_word_normal"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub A2_FORM1()
zzbuttons_highlands.Show
buttons.Show
ListCommentsFrm.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PrintScreen()
WordBasic.SendKeys "{prtsc}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub f3()
SendKeys "{f3}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub f9()
SendKeys "{f9}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub af8()
SendKeys "%{f8}"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_infuse_font()
Selection.Font.Color = RGB(73, 23, 109)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_infuse_back()
Selection.Interior.Color = RGB(73, 23, 109)
Selection.Font.Color = RGB(0, 0, 0)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_list()
For c = 1 To ActiveDocument.Comments.Count
        z = z & vbCrLf & c & " " & ActiveDocument.Comments(c).Scope
        https://social.msdn.microsoft.com/Forums/en-US/9a109c23-e29d-49a2-a563-a4d4ea50659e/vba-word-get-line-number-of-comment-object?forum=isvvba
        
        p = "Page" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdActiveEndPageNumber)
        l = "Line" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdFirstCharacterLineNumber)
        
        x = x & vbCrLf & c & " " & ActiveDocument.Comments(c).Range.Text
        q = q & vbCrLf & vbCrLf & "Your text: '..." & ActiveDocument.Comments(c).Scope & "...' [" & p & l & "] Feedback: " & ActiveDocument.Comments(c).Range.Text
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_zap()
For c = ActiveDocument.Comments.Count To 1 Step -1
        ActiveDocument.Comments(c).Delete
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comments_quote()
For c = 1 To ActiveDocument.Comments.Count
        z = z & vbCrLf & c & " " & ActiveDocument.Comments(c).Scope
        https://social.msdn.microsoft.com/Forums/en-US/9a109c23-e29d-49a2-a563-a4d4ea50659e/vba-word-get-line-number-of-comment-object?forum=isvvba
        
        p = "Page" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdActiveEndPageNumber)
        l = "Line" & ActiveDocument.Comments(c).Scope.Paragraphs(1).Range.Information(wdFirstCharacterLineNumber)
        
        x = x & vbCrLf & c & " " & ActiveDocument.Comments(c).Range.Text
        q = q & vbCrLf & vbCrLf & "Your text: '..." & ActiveDocument.Comments(c).Scope & "...' [" & p & l & "] Feedback: " & ActiveDocument.Comments(c).Range.Text
Next c
Debug.Print q
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RemoveAllComments()
Dim n As Long
Dim oComments As Comments
Set oComments = ActiveDocument.Comments
For n = oComments.Count To 1 Step -1
        oComments(n).Delete
Next 'n
Set oComments = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Commentslist()
Dim n As Long
Dim oComments As Comments
Set oComments = ActiveDocument.Comments
For n = oComments.Count To 1 Step -1
        If oComments(n).Date > #2/29/2016# Then
                xc = xc + 1
                Debug.Print xc & " " & oComments(n).Range.Text & " (" & oComments(n).Author & " " & oComments(n).Date & ")"
                
        End If
        
Next 'n
Set oComments = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1()
x = "1=UserFormOutlookXZXZXZ, 2=UserFormInputOutput"
x = InputBox(x, x, x)
If x = 1 Then UserFormOutlookXZXZXZ.Show
        If x = 2 Then UserFormInputOutput.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub CreateAppt()
Dim myItem As Object
Dim myRequiredAttendee, myOptionalAttendee, myResourceAttendee As Outlook.Recipient
xtext1 = "DIARY: Meeting at location at time with person re subject"
xtext2 = "Regards, XZXZXZ0XZXZXZXZXZXZ051 Email XZXZXZ@XZXZXZXZXZXZXZXZXZ.com"
xtext3 = "(Copied to my other diaries)"
xtext4 = "T.XZXZXZ@HEALTH.GOV.JE; t.XZXZXZ@gov.je; XZXZXZ@XZXZXZXZXZXZXZXZXZ.com; tim.XZXZXZ@XZXZXZi.co; XZXZXZ@XZXZXZ.com"
Dim appOL As Object
Dim objReminder As Object
Set appOL = GetObject(, "Outlook.application")
Set myItem = appOL.CreateItem(olAppointmentItem)
myItem.MeetingStatus = olMeeting
myItem.Subject = xtext1
myItem.Body = xtext1 & vbCrLf & xtext2 & vbCrLf & xtext3
myItem.Location = ""
myItem.Start = #9/24/2009 1:30:00 PM#
myItem.Start = Now()
myItem.Duration = 90
Set myRequiredAttendee = myItem.Recipients.Add("Nate Sun")
Set myRequiredAttendee = myItem.Recipients.Add(xtext4)
myRequiredAttendee.Type = olRequired
Set myOptionalAttendee = myItem.Recipients.Add("Kevin Kennedy")
Set myOptionalAttendee = myItem.Recipients.Add(xtext3)
myOptionalAttendee.Type = olOptional
Set myResourceAttendee = myItem.Recipients.Add(xtext3)
myResourceAttendee.Type = olResource
myItem.Display
myItem.Send
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a2_save_temp()
xdate = Format(Now, "yymmdd")
x = "V:\Data2017\temp\zztemp" & xdate
ActiveDocument.SaveAs FileName:=x, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
x = x & ".docx"
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_saveas()
fname1 = ActiveDocument.Path & "\" & ActiveDocument.Name
xdate = Format(Now, "yymmdd")
fname2 = Replace(fname1, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=fname2, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
ActiveDocument.SaveAs FileName:=fname1, FileFormat:= _
wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _
:=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _
:=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _
SaveAsAOCELetter:=False
x = fname1
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub saveas_timed()
xpath = ActiveDocument.Path & "\"
xdate = Format(Now, "yyyymmdd HHMM")
xname = xpath & ActiveDocument.Name
xname2 = Replace(xname, ".doc", "_" & xdate & ".doc")
ActiveDocument.SaveAs FileName:=xname2
ActiveDocument.SaveAs FileName:=xname
x = xname2
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub whoami()
x = ActiveDocument.Path & "\" & ActiveDocument.Name
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_resize()
Dim i As Long
With ActiveDocument
For i = 1 To .InlineShapes.Count
        With .InlineShapes(i)
        .ScaleHeight = 50
        .ScaleWidth = 50
        End With
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ScalePictures40()
Dim i As Long
With ActiveDocument
For i = 1 To .InlineShapes.Count
        With .InlineShapes(i)
        .ScaleHeight = 40
        .ScaleWidth = 40
        End With
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AA_addautotext()
http://msdn.microsoft.com/en-us/library/office/ff195437.aspx
NormalTemplate.AutoTextEntries("#test1").Value = "The Johnson Company"
Dim XAUTOTEXT_HANDLE As String
Dim p As Integer
XAUTOTEXT_HANDLE = "#zz" 'Left(Trim(Selection.Range), 4)
p = InStr(1, Selection.Range, ".")
XAUTOTEXT_HANDLE = Left(Trim(Selection.Range), p)
MsgBox XAUTOTEXT_HANDLE
NormalTemplate.AutoTextEntries.Add Name:=XAUTOTEXT_HANDLE, Range:=Selection.Range
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ListAutoText()
Dim oAutoText   As Word.AutoTextEntry
With Application
 \\ Turn screenupdating off
.ScreenUpdating = False
 \\ Add new document
.Documents.Add
 \\ Loop through all Autotext entries in Normal.dot
For Each oAutoText In NormalTemplate.AutoTextEntries
        ' \\ Work with selection
        With .Selection
        ' \\ Make all Autotext names Bold
        .Font.Bold = True
        .TypeText Text:=oAutoText.Name
        .TypeParagraph ' \\ Insert Para
        
        ' \\ Turn of Bold for the Autotext entries
        .Font.Bold = False
        ' \\ Insert entry
        oAutoText.Insert Where:=.Range, RichText:=True
        
        ' \\ Insert two paragraphs
        .TypeParagraph
        .TypeText Text:="==============================================="
        .TypeParagraph
        End With
        Next
        
        ' \\ Turn screenupdating back on
        .ScreenUpdating = True
        End With
        xdate = Format(Now, "yyyymmdd")
        fname = "V:\Data2017\VBA\VBAWord\word_autotext_backup" & xdate & ".docx"
        ActiveDocument.SaveAs FileName:=fname
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function halfdays(x)
halfdays = Int(x)
If x > Int(x) + 0.49 Then halfdays = Int(x) + 0.5
        
End Function
Call ports2013_headings_multi_function("Normal", "Calibri", 11, "", wdBlue)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub bold_2hyphen()
Dim oPara As Paragraph
Dim xpos As Integer
For Each oPara In ActiveDocument.Paragraphs
For Each oPara In Selection.Paragraphs
        Debug.Print oPara.Range.Text
        '      If oPara.Range.Words(2).Characters(1) = ":" Then
        oPara.Range.Words(1).Font.Bold = True
        xpos = InStr(1, oPara.Range.Text, "-")
        For c = 1 To xpos
                oPara.Range.Characters(c).Font.Bold = True
        Next c
        '     End If
Next oPara
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub bold_firstword()
Dim oPara As Paragraph
For Each oPara In ActiveDocument.Paragraphs
For Each oPara In Selection.Paragraphs
        
        '      If oPara.Range.Words(2).Characters(1) = ":" Then
        oPara.Range.Words(1).Font.Bold = True
        oPara.Range.Characters(2).Font.Bold = False
        '     End If
Next oPara
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2017_Candara()
xfont = "Candara"
XSIZE = 11
fnormal = 11
XCOLOR1 = RGB(0, 128, 128)
XCOLOR2 = RGB(128, 32, 0)
XCOLOR3 = RGB(128, 96, 0)
XCOLOR4 = RGB(64, 0, 128)
Call set2016_headings("Heading 1", xfont, 14, "bold", XCOLOR1)
Call set2016_headings("Heading 2", xfont, 12, "bold", XCOLOR2)
Call set2016_headings("Heading 3", xfont, 12, "bold", XCOLOR3)
Call set2016_headings("Heading 4", xfont, 12, "bold", XCOLOR4)
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2017_calibri()
xfont = "Calibri"
XSIZE = 13
fnormal = 13
XCOLOR1 = RGB(0, 128, 128)
XCOLOR2 = RGB(128, 32, 0)
XCOLOR3 = RGB(128, 96, 0)
XCOLOR4 = RGB(64, 0, 128)
Call set2016_headings("Heading 1", xfont, 14, "bold", XCOLOR1)
Call set2016_headings("Heading 2", xfont, 12, "bold", XCOLOR2)
Call set2016_headings("Heading 3", xfont, 12, "bold", XCOLOR3)
Call set2016_headings("Heading 4", xfont, 12, "bold", XCOLOR4)
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2017_gothic()
xfont = "Century Gothic"
XSIZE = 10
fnormal = 10
XCOLOR1 = RGB(0, 128, 128)
XCOLOR2 = RGB(128, 32, 0)
XCOLOR3 = RGB(128, 96, 0)
XCOLOR4 = RGB(64, 0, 128)
Call set2016_headings("Heading 1", xfont, 14, "bold", XCOLOR1)
Call set2016_headings("Heading 2", xfont, 12, "bold", XCOLOR2)
Call set2016_headings("Heading 3", xfont, 12, "bold", XCOLOR3)
Call set2016_headings("Heading 4", xfont, 12, "bold", XCOLOR4)
Call set2016_headings("Normal", xfont, fnormal, "", "")
Call set2016_headings("List Paragraph", xfont, fnormal, "", "")
Call set2016_headings("No Spacing", xfont, fnormal, "", "")
Call set2016_headings("TOC Heading", xfont, fnormal, "", "")
Call set2016_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD()
For p = 1 To ActiveDocument.Paragraphs.Count
        
        If ActiveDocument.Paragraphs(p).Range.Information(wdWithInTable) Then
                'What ever you'd like to do
                'skip
                Else
                
                
                If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                        xtext = ActiveDocument.Paragraphs(p).Range.Text
                        If UCase(xtext) = xtext Then
                                ActiveDocument.Paragraphs(p).Range.Font.Size = 12
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 128, 128)
                                ' ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 80, 80)
                                
                                If InStr(1, UCase(xtext), UCase("Appendix")) Then
                                        ActiveDocument.Paragraphs(p).Range.Font.Size = 18
                                End If
                                
                                
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                End If
                
        End If
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub highlight_asterix()
For p = 1 To ActiveDocument.Paragraphs.Count
        x = ActiveDocument.Paragraphs(p).Range.Text
        If Left(x, 1) = "*" Then
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 80, 80) ' RGB(255, 0, 0)
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(200, 0, 0) ' RGB(255, 0, 0)
                
                z = z & vbCrLf & x
        End If
        
        
Next p
fname = ActiveDocument.Path & "\zztemp45678.txt"
Call PRINT_INFO(z, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD_XZXZXZ()
XCOLOR1 = RGB(0, 128, 128)
XCOLOR2 = RGB(128, 32, 0)
XCOLOR3 = RGB(128, 96, 0)
XCOLOR4 = RGB(64, 0, 128)
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range.Text
        If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                        
                        
                        If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = XCOLOR1 ' RGB(255, 0, 0)
                                Else
                                ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                ActiveDocument.Paragraphs(p).Range.Font.Color = XCOLOR1 ' RGB(0, 80, 80)
                                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                        End If
                        
                        If InStr(1, UCase(xtext), UCase("APPENDIX")) Then ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                        End If
                End If
                
                
        Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPERISBOLD_infuse()
infuse = RGB(73, 23, 109)
For p = 1 To ActiveDocument.Paragraphs.Count
        
        
        If ActiveDocument.Paragraphs(p).Range.Information(wdWithInTable) Then
                'What ever you'd like to do
                'skip
                Else
                xtext = ActiveDocument.Paragraphs(p).Range.Text
                If Len(ActiveDocument.Paragraphs(p).Range.Text) > 2 Then
                        If UCase(ActiveDocument.Paragraphs(p).Range.Text) = ActiveDocument.Paragraphs(p).Range.Text Then
                                
                                
                                If ActiveDocument.Paragraphs(p).Range.Tables.Count < 1 Then ' not in a table
                                        ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                        ActiveDocument.Paragraphs(p).Range.Font.Color = infuse
                                        ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                                        
                                        Else
                                        ActiveDocument.Paragraphs(p).Range.Font.Bold = True
                                        ActiveDocument.Paragraphs(p).Range.Font.Color = infuse
                                        Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                                End If
                                
                                If InStr(1, UCase(xtext), UCase("APPENDIX")) Then ActiveDocument.Paragraphs(p).Range.Font.Size = 13
                                End If
                        End If
                        
                End If
        Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_format_text()
text_to_find = "1234567890"
For p = 1 To ActiveDocument.Paragraphs.Count
        found_text = Left(ActiveDocument.Paragraphs(p).Range.Text, 1)
        If InStr(1, text_to_find, found_text) Then
                
                Debug.Print ActiveDocument.Paragraphs(p).Range.Text
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
                ActiveDocument.Paragraphs(p).Range.Font.Size = 16
                
        End If
        
        
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_legal_para()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = ActiveDocument.Paragraphs(p).Range.Text
        
        For q = 1 To 9
                If Left(xtext, 1) = CStr(q) Then
                        ActiveDocument.Paragraphs(p).Range.Text = "~" & ActiveDocument.Paragraphs(p).Range.Text
                End If
        Next q
        x = 0
        looktext = Left(Trim(xtext), 6)
        x = count_find(looktext, ".")
        
        If x = 2 Then
                ActiveDocument.Paragraphs(p).Range.Text = "~" & vbTab & ActiveDocument.Paragraphs(p).Range.Text
                ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(0, 200, 0)
                Debug.Print looktext, x, ActiveDocument.Paragraphs(p).Range.Text
        End If
Next p
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function count_find(xtext, thingtofind)
Dim xc As Integer
xc = 0
For c = 1 To Len(xtext)
        If Mid(xtext, c, 1) = thingtofind Then xc = xc + 1
        Next c
        count_find = xc
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub UPPER_extract_text()
text_to_find = "Appendix"
For p = 1 To ActiveDocument.Paragraphs.Count
        If InStr(1, ActiveDocument.Paragraphs(p).Range.Text, text_to_find) Then
                xc = xc + 1
                x = x & " " & xc & ". " & ActiveDocument.Paragraphs(p).Range.Text & vbCrLf
                '' ActiveDocument.Paragraphs(p).Range.Font.Color = RGB(255, 0, 0)
        End If
        
        
        
Next p
Z = Replace(x, Chr(13), "")
Z = Replace(Z, text_to_find, ",  ")
Debug.Print x
Debug.Print LCase(Z)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function set2016_headings(xstyle, xfont, XSIZE, xbold, xcolor)
With ActiveDocument.Styles(xstyle).Font
.Name = xfont
.Size = XSIZE
.Bold = False
.Italic = False
If Len(xbold) > 1 Then .Bold = True
        
        'http://dmcritchie.mvps.org/excel/colors.htm
        .ColorIndex = wdBlack
        .ColorIndex = wdBlack
        
        
        If Len(xcolor) > 0 Then
                If xcolor > 10 Then
                        .Color = xcolor
                        Else
                        .ColorIndex = xcolor
                End If
        End If
        
        
        End With
        xindent = 0
        If xstyle = "Heading 1" Then xindent = 0
                If xstyle = "Heading 2" Then xindent = 0
                        If xstyle = "Heading 3" Then xindent = 0 '2
                                If xstyle = "Heading 4" Then xindent = 0 '3
                                        
                                        With ActiveDocument.Styles(xstyle).ParagraphFormat
                                        .LeftIndent = CentimetersToPoints(xindent)
                                        .RightIndent = CentimetersToPoints(0)
                                        .FirstLineIndent = CentimetersToPoints(1.5)
                                        
                                        .TabStops.ClearAll
                                        
                                        .SpaceBefore = 0
                                        .SpaceBeforeAuto = False
                                        .SpaceAfter = 0
                                        .SpaceAfterAuto = False
                                        .LineSpacingRule = wdLineSpace0pt0
                                        .Alignment = wdAlignParagraphLeft
                                        .WidowControl = True
                                        .KeepWithNext = False
                                        .KeepTogether = False
                                        .PageBreakBefore = False
                                        .NoLineNumber = False
                                        .Hyphenation = True
                                        .FirstLineIndent = CentimetersToPoints(0)
                                        .OutlineLevel = wdOutlineLevelBodyText
                                        .CharacterUnitLeftIndent = 0
                                        .CharacterUnitRightIndent = 0
                                        
                                        .LineUnitBefore = 0
                                        .LineUnitAfter = 0
                                        .MirrorIndents = False
                                        .TextboxTightWrap = wdTightNone
                                        End With
                                        
                                        
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test01()
Call attach_word_file
Call attach_excel_file
Call attach_ppt_file
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_word_file()
fname = "H:\XZXZXZD_ReOrg\Updates\XZXZXZD_ReDesign_Update No001.docx"
xlabel = "XZXZXZD_ReDesign_Update No001.docx"
Selection.InlineShapes.AddOLEObject ClassType:="Word.Document.12", _
FileName:=fname, _
LinkToFile:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\PROGRA~1\MICROS~2\Office12\Moc.exe", IconIndex:=7, IconLabel:= _
xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_excel_file()
fname = "H:\XZXZXZD_ReOrg\Initiation\XZXZXZD Governance Stakeholder Map v1.xlsm"
xlabel = "XZXZXZD Governance Stakeholder Map v1.xlsm"
Selection.InlineShapes.AddOLEObject ClassType:= _
"Excel.SheetMacroEnabled.12", FileName:= _
fname, _
LinkToFile:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\PROGRA~1\MICROS~2\Office12\Moc.exe", IconIndex:=10, IconLabel:= _
xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub attach_ppt_file()
fname = "H:\XZXZXZD_ReOrg\Initiation\XZXZXZD_Initiation_Presentation.pptm"
xlabel = "XZXZXZD_Initiation_Presentation.pptm"
Selection.InlineShapes.AddOLEObject ClassType:= _
"PowerPoint.ShowMacroEnabled.12", FileName:= _
fname, LinkToFile _
:=False, DisplayAsIcon:=True, IconFileName:= _
"C:\WINDOWS\Installer\{90120000-0011-0000-0000-0000000FF1CE}\pptico.exe", _
IconIndex:=19, IconLabel:=xlabel
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF2PRINT()
ppath = "z:\print" & "\" & ActiveDocument.Name
ppath = Replace(ppath, ".docx", ".pdf")
ppath = Replace(ppath, ".doc", ".pdf")
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
Call DeleteFile(FName)
ActiveDocument.ExportAsFixedFormat OutputFileName:= _
fname _
, ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
wdExportOptimizeForOnScreen, Range:=wdExportAllDocument, From:=1, To:=1, _
Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
BitmapMissingFonts:=True, UseISO19005_1:=False
 ChangeFileOpenDirectory "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\"
 MsgBox "DONE"
x = fname
FileCopy fname, ppath
x = InputBox(x, x, x)
x = InputBox(ppath, ppath, ppath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF2parent_dir()
newpath = getParentFolder2(ActiveDocument.Path & "\") & "\"
oldpath = ActiveDocument.Path & "\"
Call PDF
fname = ActiveDocument.Name
fname = Replace(fname, ".docm", ".pdf")
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
FileCopy oldpath & fname, newpath & fname
ReturnValue = Shell("explorer.EXE " & newpath, 1)  ' Run Calculator.
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function getParentFolder2(ByVal strFolder0)
Dim strFolder
strFolder = Left(strFolder0, InStrRev(strFolder0, "\") - 1)
getParentFolder2 = Left(strFolder, InStrRev(strFolder, "\") - 1)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub PDF()
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
fname = Replace(fname, ".docm", ".pdf")
fname = Replace(fname, ".docx", ".pdf")
fname = Replace(fname, ".doc", ".pdf")
Call DeleteFile(FName)
ActiveDocument.ExportAsFixedFormat OutputFileName:= _
fname _
, ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
wdExportOptimizeForOnScreen, Range:=wdExportAllDocument, From:=1, To:=1, _
Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
BitmapMissingFonts:=True, UseISO19005_1:=False
 ChangeFileOpenDirectory "H:\XZXZXZD_ReOrg\Budget\KPMG Contract Docs\"
 MsgBox "DONE"
x = fname
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function FileExists(ByVal FileToTest As String) As Boolean
FileExists = (Dir(FileToTest) <> "")
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub DeleteFile(ByVal FileToDelete As String)
If FileExists(FileToDelete) Then 'See above
        SetAttr FileToDelete, vbNormal
        Kill FileToDelete
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp()
fname = ActiveDocument.Path & "\" & ActiveDocument.Name
Debug.Print fname
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub zzdir_html()
Dim MyFile As String
Dim Counter As Long
xpath = ActiveDocument.Path & "\"
xpath = InputBox(xpath, xpath, xpath)
Dim DirectoryListArray() As String
ReDim DirectoryListArray(1000)
website = "http://www.XZXZXZXZXZXZcompany.com/JIBS/"
website = InputBox(website, website, website)
website = ""
Counter = 1
MyFile = Dir$("c:\temp\*.*")
MyFile = Dir$(xpath & "*.*")
MyFile = Dir$(xpath & "app*.*")
Do While MyFile <> ""
        DirectoryListArray(Counter) = MyFile
        
        
        
        xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
        'xtext2 = xtext2 & xpath & MyFile & vbCrLf
        Debug.Print MyFile
        MyFile = Dir$
        Counter = Counter + 1
        Loop
        xtext3 = xtext1 & vbCrLf & xtext2
        fname = xpath & "display.html"
        Call PRINT_INFO(xtext3, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub zzdir_pdf()
Dim MyFile As String
Dim Counter As Long
xpath = ActiveDocument.Path & "\"
xpath = InputBox(xpath, xpath, xpath)
Dim DirectoryListArray() As String
ReDim DirectoryListArray(10000)
website = "http://www.XZXZXZXZXZXZcompany.com/JIBS/"
website = InputBox(website, website, website)
website = ""
Counter = 1
MyFile = Dir$("c:\temp\*.*")
MyFile = Dir$(xpath & "*.*")
MyFile = Dir$(xpath & "app*.*")
Do While MyFile <> ""
        DirectoryListArray(Counter) = MyFile
        
        If InStr(1, UCase(MyFile), UCase("PDF")) Then
                'xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
                'xtext2 = xtext2 & xpath & MyFile & vbCrLf
                xtext2 = xtext2 & MyFile & vbCrLf
        End If
        
        If InStr(1, UCase(MyFile), UCase("DOC")) Then
                'xtext1 = xtext1 & "<br><a href=" & website & Trim(MyFile) & ">" & MyFile & "</a>" & vbCrLf
                'xtext2 = xtext2 & xpath & MyFile & vbCrLf
                xtext3 = xtext3 & MyFile & vbCrLf
        End If
        
        Debug.Print MyFile
        MyFile = Dir$
        Counter = Counter + 1
        Loop
        xtext3 = xtext1 & vbCrLf & xtext2 & vbCrLf & xtext3
        fname = xpath & "zzdir.txt"
        Call PRINT_INFO(xtext3, fname)
End Sub
Attribute VB_Name = "WORD2BLOG"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_old()
For p = 1 To ActiveDocument.Paragraphs.Count
        xtext = xtext & ActiveDocument.Paragraphs(p).Range.Text & vbCrLf
Next p
fname = ActiveDocument.Path & "\temptext.txt"
Call PRINT_INFO(xtext, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_Blog_Word_Linked()
x = "[B]logger or [W]ordpress or [L]linked_in"
x = InputBox(x, x, x)
x = LCase(x)
xnewline = vbCrLf ' for blogger
If x = "w" Then xnewline = Chr(10) ' for wordpress
        If x = "b" Then xnewline = vbCrLf & "<br/>" ' for blogger
                If x = "b" Then xnewline = "<p/>"  ' for blogger
                        If x = "l" Then xnewline = "" ' for linkedin
                                
                                For p = 1 To ActiveDocument.Paragraphs.Count
                                        line2add = ActiveDocument.Paragraphs(p).Range.ListStyle
                                        
                                        line2add = ActiveDocument.Paragraphs(p).Range.ListFormat.ListString
                                        line2add = line2add & ActiveDocument.Paragraphs(p).Range.Text
                                        
                                        If ActiveDocument.Paragraphs(p).Range.Font.Italic = True Then
                                                If (x = "b" And Len(line2add) > 2) Then line2add = "<i>" & line2add & "</i>"
                                                End If
                                                
                                                If line2add = UCase(line2add) Then
                                                        If (x = "b" And Len(line2add) > 2) Then line2add = "<b>" & line2add & "</b>"
                                                        End If
                                                        
                                                        xtext = xtext & line2add & xnewline
                                                Next p
                                                
                                                
                                                If x = "l" Then
                                                        xtext = Replace(xtext, Chr(10), vbCrLf)
                                                        xtext = Replace(xtext, Chr(12), vbCrLf)
                                                        xtext = Replace(xtext, Chr(13), vbCrLf)
                                                        xtext = Replace(xtext, vbCrLf & vbCrLf, vbCrLf)
                                                End If
                                                fname = ActiveDocument.Path & "\temptext.txt"
                                                Call PRINT_INFO(xtext, fname)
                                                newname = Replace(fname, ".txt", ".html")
                                                FileCopy fname, newname
                                                ReturnValue = Shell("explorer.EXE " & newname, 1)  ' Run Calculator.
                                                Debug.Print ActiveDocument.Path
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_html_XZXZXZwebpage()
b1 = "<b style='color: #008080;'>"
b2 = "</b>"
h11 = "<h1 style='color: #008080;'>"
h12 = "</h1>"
For p = 1 To ActiveDocument.Paragraphs.Count
        XLINE = ActiveDocument.Paragraphs(p).Range.Text
        XLINE = Trim(XLINE)
        XLINE = Replace(XLINE, Chr(13), "")
        
        If p = 1 Then xtext = xtext & h11 & XLINE & h12 & vbCrLf
                
                
                If UCase(XLINE) = XLINE And Len(XLINE) > 3 Then
                        xtext = xtext & b1 & XLINE & b2 & vbCrLf
                        ElseIf InStr(1, XLINE, "Case Study") Then
                        xtext = xtext & h11 & XLINE & h12 & vbCrLf
                        Else
                        xtext = xtext & XLINE & "<BR>" & vbCrLf
                End If
                
                
                
                
                
        Next p
        fname = ActiveDocument.Path & "\temptext.txt"
        Call PRINT_INFO(xtext, fname)
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub word2notepad_html()
b1 = "<b style='color: red;'>"
b2 = "</b>"
h11 = "<h1 style='color: red;'>"
h12 = "</h1>"
For p = 1 To ActiveDocument.Paragraphs.Count
        XLINE = ActiveDocument.Paragraphs(p).Range.Text
        XLINE = Trim(XLINE)
        XLINE = Replace(XLINE, Chr(13), "")
        
        If p = 1 Then xtext = xtext & h11 & XLINE & h12 & vbCrLf
                
                If UCase(XLINE) = XLINE And Len(XLINE) > 3 Then
                        xtext = xtext & b1 & XLINE & b2 & vbCrLf
                        Else
                        xtext = xtext & XLINE & "<BR>" & vbCrLf
                End If
                
                
                
                
                
        Next p
        fname = ActiveDocument.Path & "\temptext.txt"
        Call PRINT_INFO(xtext, fname)
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function TRFMT(x)
xx = ""
x = tr_regex(x)
x = Replace(x, Chr(13), xx)
x = Replace(x, Chr(10), xx)
x = Replace(x, Chr(12), xx)
x = Replace(x, Chr(11), xx)
X = Replace(X, Chr(13), "!13!")
X = Replace(X, Chr(10), "!10!")
X = Replace(X, Chr(12), "!12!")
X = Replace(X, Chr(11), "!11!")
If InStr(1, UCase(Trim(x)), UCase("http")) Then
        X = "<a href=" & X & ">" & Trim(X) & "</a>" '/// using regex instead
End If
If x = UCase(x) Then
        If Len(x) > 2 Then
                x = "<b>" & Trim(x) & "</b>"
        End If
End If
TRFMT = Trim(x)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_html(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_html(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_html(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("explorer.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub tr_regex_URLtest()
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex_url(x)
Debug.Print y
Debug.Print "======================================"
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex_email(x)
Debug.Print y
Debug.Print "======================================"
x = "heoj#ojd tim@houge.com luyuy http://www.tef.com ibpiugpuv"
y = tr_regex(x)
Debug.Print y
Debug.Print "======================================"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex(xinput_string)
x = xinput_string
x = tr_regex_url(x)
x = tr_regex_email(x)
tr_regex = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex_url(xinput_string)
Dim reg
Dim rng As Range, i As Long, j As Long
Dim mtch, mt, tmpStr As String
Set reg = CreateObject("vbscript.regexp")
With reg
.IgnoreCase = True
.MultiLine = False
http://regexlib.com/Search.aspx?k=url&AspxAutoDetectCookieSupport=1
.Pattern = "(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?"
 .Pattern = "[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}"
.Global = True
End With
Set mtch = reg.Execute(xinput_string)
xoutput_string = xinput_string
For Each mt In mtch ' what you want to change
        now change the output string by find and replace stuff for each match of what you want to change
        xoutput_string = Replace(xoutput_string, mt, "<a href=" & mt & ">" & mt & "</a>" & vbCrLf)
Next mt
tr_regex_url = xoutput_string
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_regex_email(xinput_string)
Dim reg
Dim rng As Range, i As Long, j As Long
Dim mtch, mt, tmpStr As String
Set reg = CreateObject("vbscript.regexp")
With reg
.IgnoreCase = True
.MultiLine = False
http://regexlib.com/Search.aspx?k=url&AspxAutoDetectCookieSupport=1
.Pattern = "(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?"
.Pattern = "[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}"
.Global = True
End With
Set mtch = reg.Execute(xinput_string)
xoutput_string = xinput_string
For Each mt In mtch ' what you want to change
        now change the output string by find and replace stuff for each match of what you want to change
        xoutput_string = Replace(xoutput_string, mt, "<a href=mailto:" & mt & ">" & mt & "</a>" & vbCrLf)
Next mt
tr_regex_email = xoutput_string
End Function
Attribute VB_Name = "xfit_tables"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AutoFitToWind()
Selection.WholeStory
Selection.Font.Size = 9
Dim tbl As Table
Dim tbl2 As Table
For Each tbl In ActiveDocument.Tables
        tbl.AutoFitBehavior wdAutoFitWindow
        For Each tbl2 In ActiveDocument.Tables
                tbl2.AutoFitBehavior wdAutoFitWindow
                
                
        Next tbl2
        
Next tbl
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub VBA_WORD_FORMAT_SUBTABLES()
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(t).AutoFitBehavior wdAutoFitWindow
        
        
        
        For z = 1 To ActiveDocument.Tables(t).Tables.Count
                ActiveDocument.Tables(t).Tables(z).AutoFitBehavior wdAutoFitWindow
                
                Next
                
                
                Next
                
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TEST_movewithtext()
For t = 1 To ActiveDocument.Tables.Count
        With ActiveDocument.Tables(t).Rows
        .WrapAroundText = True
        .HorizontalPosition = wdTableLeft
        .RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
        .DistanceLeft = CentimetersToPoints(0.32)
        .DistanceRight = CentimetersToPoints(0.32)
        .VerticalPosition = CentimetersToPoints(0)
        .RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
        .DistanceTop = CentimetersToPoints(0)
        .DistanceBottom = CentimetersToPoints(0)
        .AllowOverlap = False
        End With
        
Next t
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub TESTt2()
With Selection.Tables(1).Rows
.WrapAroundText = True
.HorizontalPosition = wdTableLeft
.RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
.DistanceLeft = CentimetersToPoints(0.32)
.DistanceRight = CentimetersToPoints(0.32)
.VerticalPosition = CentimetersToPoints(0)
.RelativeVerticalPosition = wdRelativeVerticalPositionParagraph
.DistanceTop = CentimetersToPoints(0)
.DistanceBottom = CentimetersToPoints(0)
.AllowOverlap = False
End With
End Sub
Attribute VB_Name = "TABLE_FONT_HTML"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub STEP3_A3FORMAT_SUBTABLES_a4()
z = 260
ActiveDocument.Tables(1).Columns(1).Width = z ' COL1
ActiveDocument.Tables(1).Columns(2).Width = z ' COL2
ActiveDocument.Tables(1).Columns(3).Width = z ' COL3
On Error Resume Next
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        
        For z = 1 To ActiveDocument.Tables(t).Tables.Count
                '    ActiveDocument.Tables(T).Tables(Z).AutoFitBehavior wdAutoFitContent
                ActiveDocument.Tables(t).Tables(z).AutoFitBehavior wdAutoFitWindow
                
                
                Next
                
                ' ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitWindow
                'ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitContent
                
                
                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub STEP3_A3FORMAT_SUBTABLES_a3()
z = 370
ActiveDocument.Tables(1).Columns(1).Width = z ' COL1
ActiveDocument.Tables(1).Columns(2).Width = z ' COL2
ActiveDocument.Tables(1).Columns(3).Width = z ' COL3
On Error Resume Next
Dim oTable As Table
For t = 1 To ActiveDocument.Tables.Count
        
        For z = 1 To ActiveDocument.Tables(t).Tables.Count
                '    ActiveDocument.Tables(T).Tables(Z).AutoFitBehavior wdAutoFitContent
                ActiveDocument.Tables(t).Tables(z).AutoFitBehavior wdAutoFitWindow
                '######
                ' Loop through each row in the table.
                For Each oRow In ActiveDocument.Tables(t).Tables(z).Rows
                        
                        ' Loop through each cell in the current row.
                        For Each oCell In oRow.Cells
                                ' Set sCellText equal to text of the cell.
                                ' Note: This section can be modified to suit
                                ' your programming purposes.
                                sCellText = oCell.Range
                                If Left(sCellText, 5) = "GREEN" Then oCell.Range.Shading.ForegroundPatternColor = RGB(0, 222, 0)
                                        If Left(sCellText, 5) = "GREEN" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                
                                                If Left(sCellText, 5) = "AMBER" Then oCell.Range.Shading.ForegroundPatternColor = RGB(255, 102, 0)
                                                        If Left(sCellText, 5) = "AMBER" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                                
                                                                
                                                                If Left(sCellText, 3) = "RED" Then oCell.Range.Shading.ForegroundPatternColor = RGB(222, 0, 0)
                                                                        If Left(sCellText, 3) = "RED" Then oCell.Range.Font.TextColor = RGB(1, 1, 1)
                                                                                
                                                                                ' Remove table cell markers from the text.
                                                                                'sCellText = Left$(sCellText, Len(sCellText) - 2)
                                                                                'MsgBox sCellText
                                                                                
                                                                        Next oCell
                                                                        
                                                                Next oRow
                                                                '######
                                                                
                                                                Next
                                                                
                                                                ' ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitWindow
                                                                'ActiveDocument.Tables(T).AutoFitBehavior wdAutoFitContent
                                                                
                                                                
                                                                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RetrieveTableItems()
Dim oRow As Row
Dim oCell As Cell
Dim sCellText As String
 Turn on error checking.
On Error GoTo ErrorHandler
For Each tbl In ActiveDocument.Tables
        x = x + 1
        ' Loop through each row in the table.
        For Each oRow In ActiveDocument.Tables(x).Rows
                
                ' Loop through each cell in the current row.
                For Each oCell In oRow.Cells
                        ' Set sCellText equal to text of the cell.
                        ' Note: This section can be modified to suit
                        ' your programming purposes.
                        sCellText = oCell.Range
                        ' Debug.Print sCellText
                        oCell.Range.Font.Size = 10
                        
                        oCell.Range.Font.ColorIndex = 1
                        ' Remove table cell markers from the text.
                        ' sCellText = Left$(sCellText, Len(sCellText) - 2)
                        'MsgBox sCellText
                        
                Next oCell
                
        Next oRow
Next ' TABLE
ErrorHandler:
If Err <> 0 Then
        Dim Msg As String
        Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description _
        & Chr(13) & "Make sure there is a table in the current document."
        MsgBox Msg, , "Error"
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub color_cells()
Dim oRow As Row
Dim oCell As Cell
Dim sCellText As String
 Turn on error checking.
On Error GoTo ErrorHandler
For Each tbl In ActiveDocument.Tables
        x = x + 1
        ' Loop through each row in the table.
        For Each oRow In ActiveDocument.Tables(x).Rows
                
                ' Loop through each cell in the current row.
                For Each oCell In oRow.Cells
                        ' Set sCellText equal to text of the cell.
                        ' Note: This section can be modified to suit
                        ' your programming purposes.
                        sCellText = oCell.Range
                        ' Debug.Print sCellText
                        ' oCell.Range.Font.ColorIndex = 1
                        If Left(sCellText, 5) = "AMBER" Then oCell.Range.Font.TextColor = RGB(222, 0, 0)
                                
                                If InStr(1, sCellText, "AMBER") Then oCell.Range.Shading.ForegroundPatternColor = RGB(5, 55, 880)
                                        If InStr(1, sCellText, "AMBER") Then oCell.Range.Font.TextColor = RGB(222, 0, 0)
                                                
                                                
                                                
                                                oCell.Range.Font.Size = 10
                                                
                                                
                                                
                                                ' Remove table cell markers from the text.
                                                ' sCellText = Left$(sCellText, Len(sCellText) - 2)
                                                'MsgBox sCellText
                                                
                                        Next oCell
                                        
                                Next oRow
                        Next ' TABLE
                        ErrorHandler:
                        If Err <> 0 Then
                                Dim Msg As String
                                Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description _
                                & Chr(13) & "Make sure there is a table in the current document."
                                MsgBox Msg, , "Error"
                        End If
                        
End Sub
Attribute VB_Name = "header_footer_imagex"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub header_footer_image()
Call EditHeadersAndFooters
Call Insert_SqWrap_Image ' InsertImage
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub EditHeadersAndFooters()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = "ISO 14001 2015 ENVIRONMENTAL MANAGEMENT"
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 22
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub HeadersAndFooters_tri()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZ.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub HeadersAndFooters_XZXZXZheaded()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
x = x & vbCrLf & "XZXZXZ XZXZXZ Company Limited. Registered 121355 RC 23 May 2016"
x = x & vbCrLf & "Office Address: La Belle XZXZXZ, Belle XZXZXZ Ave, Grouville, Jersey JE3 9BL"
Dim i As Long
XHEADER = Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = True
        '.Headers(wdHeaderFooterPrimary).Range.Font.Size = 38
        '.Headers(wdHeaderFooterPrimary).Range.Text = "XZXZXZXZXZXZCompany"
        
        
        ' .Footers(wdHeaderFooterPrimary).Range.Font.Size = 15
        ' .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        '.Footers(wdHeaderFooterPrimary).Range.Font.Size = 20
        
        
        
        .Headers(2).Range.Font.Size = 35
        .Headers(2).Range.Text = "" '"XZXZXZXZXZXZCompany"
        .Headers(2).Range.Paragraphs.Alignment = 1 'wdAlignParagraphRight 1=centre, 2=right, 3=left
        imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\XZXZXZlogo.png"
        'imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\acc.png"
        
        '.Headers(2).Shapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True, Left:=70, Top:=3 ', Width:=60, Height:=60
        
        ' .Headers(2).Shapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True, Left:=70, Top:=3, Width:=60, Height:=60
        .Headers(2).Shapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True, Left:=70, Top:=-10 ', Width:=80, Height:=80
        
        .Headers(1).Range.Font.Size = 15
        .Headers(1).Range.Text = XHEADER
        .Headers(1).Range.Paragraphs.Alignment = 1 'wdAlignParagraphRight
        
        .Footers(1).Range.Font.Size = 10
        .Footers(1).Range.Text = XFOOTER
        .Footers(1).Range.Paragraphs.Alignment = 1 'wdAlignParagraphRight
        
        .Footers(2).Range.Font.Size = 10
        .Footers(2).Range.Text = x
        .Footers(2).Range.Paragraphs.Alignment = 1 'wdAlignParagraphRight
        
        
        End With
        
        Next
        
        
        
        ' ActiveDocument.Shapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True
        
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub HeadersAndFooters_XZXZXZ()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = UCase("XZXZXZXZXZXZCompany - ") & Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZXZXZXZCompany.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub HeadersAndFooters_tim()
http://www.vbaexpress.com/forum/showthread.php?51460-How-to-left-and-right-justify-elements-in-a-footer-range
Dim i As Long
XHEADER = UCase("XZXZXZ - ") & Replace(UCase(ActiveDocument.Name), ".DOCX", "")
XFOOTER = XHEADER & vbCrLf & "XZXZXZ@XZXZXZ.com Mob 0XZXZXZXZXZXZ051"
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .PageSetup.DifferentFirstPageHeaderFooter = False
        .Headers(wdHeaderFooterPrimary).Range.Text = XHEADER ' "Handout CMI Course"
        .Headers(wdHeaderFooterPrimary).Range.Font.Size = 15
        .Footers(wdHeaderFooterPrimary).Range.Text = XFOOTER
        .Footers(wdHeaderFooterPrimary).Range.Font.Size = 8
        
        
        End With
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImage()
Dim imagePath As String
imagePath = "C:\\picture.jpg"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, _
LinkToFile:=False, _
SaveWithDocument:=True, _
Left:=370, _
Top:=-30, _
Anchor:=Selection.Range, _
Width:=60, _
Height:=60
Anchor:=Selection.Range, _
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Insert_SqWrap_Image()
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
With shp
.WrapFormat.Type = wdWrapSquare
.Left = 380
.Top = -50
.Width = 70
.Height = 70
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AddImageToHeader()
PURPOSE: Insert an image into a Word document heading
SOURCE: www.TheSpreadsheetGuru.com
Dim SrcePath As String
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\x1i-GEQY.png"
ThisDocument.Sections.Item(1).Headers(wdHeaderFooterPrimary) _
.Range.InlineShapes.AddPicture (SrcePath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Word_Insert_Image_in_Header()
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim oWD As Word.Document
Set oWD = ActiveDocument
With oWD.Sections(1)
.Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
.Headers(wdHeaderFooterPrimary).Range.Text = "Text as Header"
 .Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphRight
 .Headers(wdHeaderFooterPrimary).Range.InlineShapes.AddPicture SrcePath
End With
End Sub
Public Function ChangeHeadersAndFooters()
For i = 1 To ActiveDocument.Sections.Count
        With ActiveDocument.Sections(i)
        .Headers(wdHeaderFooterPrimary).LinkToPrevious = True
        .Headers(wdHeaderFooterPrimary).Range.Text = "Koptekst vanaf pagina 2"
        .Footers(wdHeaderFooterPrimary).Range.Text = "Voettekst vanaf pagina 2"
        End With
Next i
ActiveDocument.Sections(1).PageSetup.DifferentFirstPageHeaderFooter = True
ActiveDocument.Sections(1).Headers(wdHeaderFooterFirstPage).Range.Text = "test"
With ActiveDocument.Sections(1)
.PageSetup.DifferentFirstPageHeaderFooter = True
.Headers(wdHeaderFooterFirstPage).LinkToPrevious = False
.Headers(wdHeaderFooterFirstPage).Range.Text = "eerste pagina koptekst"
.Footers(wdHeaderFooterFirstPage).Range.Text = "eerste pagina voettekst"
End With
Attribute VB_Name = "temp_buttons"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button1()
Call name_doc
Call HeadersAndFooters_tim
Call PDF
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button2()
Call quote_cal_12_blk
Call HeadersAndFooters_XZXZXZ
Call PDF
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button3()
Call header_footer_image
Selection.Font.Size = 10
 Selection.Font.Name = "Calibri"
 Selection.Font.ColorIndex = wdBlack
Call HeadersAndFooters_XZXZXZheaded
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button4()
Call header_footer_image
Call PDFtext.Show
Selection.Range.Case = wdTitleWord
Selection.Style = ActiveDocument.Styles("Heading 1")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp_button8()
Call HeadersAndFooters_XZXZXZheaded
Call aa_headings2017_calibri
Call PDF
End Sub
Attribute VB_Name = "word_templates_opath"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ChangeAttachedTemplate()
Dim oDoc As Document  'make sure you're getting info on the right document
Set oDoc = ActiveDocument
If oDoc.Type = wdTypeTemplate Then Exit Sub
        Dim oTemplate As Template
        Dim strTemplatePath
        Set oTemplate = oDoc.AttachedTemplate
        If InStr(UCase(oTemplate.FullName), "OLDPATH") > 0 Then
                oDoc.AttachedTemplate = "FULLNEWPATH" & oTemplate.Name
        End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub FindTemplate()
MsgBox ThisDocument.AttachedTemplate.FullName
MsgBox ActiveDocument.AttachedTemplate.FullName
x = ActiveDocument.AttachedTemplate.FullName
Debug.Print x
End Sub
Attribute VB_Name = "temp_nameword"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub name_doc()
For p = 1 To ActiveDocument.Paragraphs.Count
        
        
        x = x & ActiveDocument.Paragraphs(p).Range.Text
        
        If Len(x) > 50 Then Exit For
                
        Next p
        For q = 1 To 47
                x = Replace(x, Chr(q), " ")
                x = Replace(x, "  ", " ")
        Next q
        For q = 58 To 64
                x = Replace(x, Chr(q), " ")
                x = Replace(x, "  ", " ")
        Next q
        fname = ActiveDocument.Path & "\CMI_" & Trim(x)
        Debug.Print fname
        
        ActiveDocument.SaveAs FileName:=fname
End Sub
Attribute VB_Name = "XFINDANDREPLACE"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub fandr()
replace 1,2,3,4, with crlf
For xnumber = 1 To 9
        
        
        Selection.Find.ClearFormatting
        Selection.Find.Replacement.ClearFormatting
        With Selection.Find
        .Text = xnumber
        .Replacement.Text = "^p"
        .Forward = True
        .Wrap = wdFindAsk
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
        End With
        Selection.Find.Execute Replace:=wdReplaceAll
        Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub FandR_macro()
XFIND = "(yes)"
XREPLACE = "(YES)"
Call XFINDANDREPLACE(XFIND, XREPLACE)
Call XFINDANDREPLACE("(PARTIALLY)", "(PARTIALLY)")
Call XFINDANDREPLACE("(NO)", "(NO)")
Call XFINDANDREPLACE("XZXZXZ", "XZXZXZ")
For r = 1 To 9
        
        Call XFINDANDREPLACE("Appendix " & r, "Appendix " & r)
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ClrFmtg2()
ActiveDocument.Select
Selection.ClearFormatting
Selection.Font.Reset
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function XFINDANDREPLACE(XFIND, XREPLACE)
Macro1 Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
Selection.Find.Replacement.Font.Bold = False
Selection.Find.Replacement.Font.ColorIndex = wdDarkRed
With Selection.Find
.Text = XFIND
.Replacement.Text = XREPLACE
.Forward = True
.Wrap = wdFindContinue
.Format = True
  .Font.ColorIndex = wdDarkRed
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
End Function
Attribute VB_Name = "Module2"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test876()
xtext = "The cat sat on the mat and did "
x = reverse_string(6, xtext, " ")
Debug.Print Right(xtext, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function reverse_string(xno, xtext, XFIND)
xlen = Len(xtext)
For z = xlen To 1 Step -1 ' go backwards
        If Mid(xtext, z, 1) = XFIND Then xqty = xqty + 1
                If xqty = xno Then Exit For
                        
                Next z
                xresult = xlen - z
                reverse_string = xresult
                
End Function
Attribute VB_Name = "ScreenPrintx"
Declare Windows API Functions
Private Declare Sub keybd_event Lib "user32" (ByVal bVk As Byte, ByVal _
bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
Declare Virtual Key Codes
Private Const VK_SNAPSHOT = &H2C
Private Const VK_KEYUP = &H2
Private Const VK_MENU = &H12
Public Const VK_TAB = &H9
Public Const VK_ENTER = &HD
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ScreenPrint()
Press Alt + TAB Keys -- Step1
Alt_Tab
Press Print Screen key using Windows API -- Step2.
keybd_event VK_SNAPSHOT, 1, 0, 0 'Print Screen key down
keybd_event VK_SNAPSHOT, 1, VK_KEYUP, 0 'Print key Up - Screenshot to Clipboard
Paste Image in Chart and Export it to Image file. -- Step3
Charts.Add
ThisWorkbook.Charts(1).AutoScaling = True
ThisWorkbook.Charts(1).Paste
ThisWorkbook.Charts(1).Export FileName:="E:\ClipBoardToPic.jpg", FilterName:="jpg"
Supress warning message and Delete the Chart
Application.DisplayAlerts = False
ThisWorkbook.Charts(1).Delete
Application.DisplayAlerts = True
Attach the file to Excel -- Step4
Attach_File
ThisWorkbook.Activate
ThisWorkbook.Sheets(1).Select
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Alt_Tab()
DoEvents
keybd_event VK_MENU, 1, 0, 0 'Alt key down
DoEvents
keybd_event VK_TAB, 0, 0, 0 'Tab key down
DoEvents
keybd_event VK_TAB, 1, VK_KEYUP, 0 'Tab key up
DoEvents
keybd_event VK_ENTER, 1, 0, 0 'Tab key down
DoEvents
keybd_event VK_ENTER, 1, VK_KEYUP, 0 'Tab key up
DoEvents
keybd_event VK_MENU, 1, VK_KEYUP, 0 'Alt key up
DoEvents
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Attach_File()
ActiveCell.Select
ActiveSheet.OLEObjects.Add(FileName:="E:\ClipBoardToPic.jpg", Link:=False, _
DisplayAsIcon:=True, IconFileName:= _
"C:\Program Files\Internet Explorer\iexplore.exe", IconIndex:=10, IconLabel _
:="ClipBoardToPic.jpg").Select
End Sub
Attribute VB_Name = "images_word_pictures"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImages()
http://word.tips.net/T010726_Inserting_Multiple_Graphics_in_a_Document.html
Dim doc As Word.Document
Dim fd As FileDialog
Dim vItem As Variant
Dim mg1 As Range
Dim mg2 As Range
Set fd = Application.FileDialog(msoFileDialogFilePicker)
Set doc = ActiveDocument
With fd
.Filters.Add "Images", "*.gif; *.jpg; *.jpeg", 1
.FilterIndex = 1
If .Show = -1 Then
        For Each vItem In .SelectedItems
                Set mg2 = ActiveDocument.Range
                mg2.Collapse wdCollapseEnd
                doc.InlineShapes.AddPicture _
                FileName:=vItem, _
                LinkToFile:=False, SaveWithDocument:=True, Range:=mg2
                Set mg1 = ActiveDocument.Range
                mg1.Collapse wdCollapseEnd
                
                mg1.Text = vbCrLf & vbCrLf
        Next vItem
End If
End With
Set fd = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub GetPictures()
Dim sPic As String
Dim sPath As String
fname = "XZXZXZlogo.png"
sPath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\"
sPath = "V:\Data2016\RichardRolfe\XZXZXZ_LeanPM (Film)\" 'c:\myfolder\"
sPath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\XZXZXZlogo.png"
 sPic = Dir(sPath & "*.png")
Do While sPic <> ""
        Selection.InlineShapes.AddPicture _
        FileName:=sPath & sPic, _
        LinkToFile:=False, SaveWithDocument:=True
        sPic = Dir
        Selection.TypeParagraph
        Selection.TypeParagraph
        Loop
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_resize_tim()
x = ActiveDocument.InlineShapes.Count
For i = 1 To x
        ActiveDocument.InlineShapes(i).Height = 200 ' * 1.2
        ActiveDocument.InlineShapes(i).Width = 300 '* 1.2
        
        
        
        
Next i
MsgBox x
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ResizePics()
Dim shp As Word.Shape
Dim ishp As Word.InlineShape
If Word.Selection.Type <> wdSelectionInlineShape And _
        Word.Selection.Type <> wdSelectionShape Then
        Exit Sub
End If
If Word.Selection.Type = wdSelectionInlineShape Then
        Set ishp = Word.Selection.Range.InlineShapes(1)
        ishp.LockAspectRatio = False
        ishp.Height = 55 'InchesToPoints(1.78)
        ishp.Width = 44 'InchesToPoints(3.17)
        Else
        If Word.Selection.Type = wdSelectionShape Then
                Set shp = Word.Selection.ShapeRange(1)
                shp.LockAspectRatio = False
                shp.Height = 33 'InchesToPoints(1.78)
                shp.Width = 22 'InchesToPoints(3.17)
        End If
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub image_ResizePics_all()
Dim shp As Word.Shape
Dim ishp As Word.InlineShape
If Word.Selection.Type <> wdSelectionInlineShape And _
        Word.Selection.Type <> wdSelectionShape Then
        Exit Sub
End If
If Word.Selection.Type = wdSelectionInlineShape Then
        Set ishp = Word.Selection.Range.InlineShapes(1)
        ishp.LockAspectRatio = False
        ishp.Height = 55 'InchesToPoints(1.78)
        ishp.Width = 44 'InchesToPoints(3.17)
        Else
        If Word.Selection.Type = wdSelectionShape Then
                Set shp = Word.Selection.ShapeRange(1)
                shp.LockAspectRatio = False
                shp.Height = 33 'InchesToPoints(1.78)
                shp.Width = 22 'InchesToPoints(3.17)
        End If
End If
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub InsertImage()
Dim imagePath As String
imagePath = "C:\\picture.jpg"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\XZXZXZlogo.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, _
LinkToFile:=False, _
SaveWithDocument:=True, _
Left:=370, _
Top:=-30, _
Anchor:=Selection.Range, _
Width:=60, _
Height:=60
Anchor:=Selection.Range, _
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\XZXZXZlogo.png"
ActiveDocument.Shapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function Insert_bunch_images(fname)
imagePath = fname ' "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
 Selection.TypeParagraph
  Selection.TypeText Text:="Title" & fname
 Selection.TypeParagraph
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
  Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True)
With shp
 .WrapFormat.Type = 4  'wdWrapSquare
.WrapFormat.Type = wdWrapInline
.Width = 500
.Height = 500
End With
Selection.TypeParagraph
Selection.TypeText Text:="Title" & fname
Selection.TypeParagraph
End Function
Private Sub cmdFileDialog_Click()
Requires reference to Microsoft Office 12.0 Object Library.
Dim fDialog As Office.FileDialog
Dim varFile As Variant
Set up the File Dialog.
Set fDialog = Application.FileDialog(msoFileDialogFilePicker)
With fDialog
Allow user to make multiple selections in dialog box.
.AllowMultiSelect = True
Set the title of the dialog box.
.Title = "Please select one or more files"
Clear out the current filters, and add our own.
.Filters.Clear
.Filters.Add "Access Databases", "*.MDB; *.ACCDB"
.Filters.Add "Access Projects", "*.ADP"
.Filters.Add "All Files", "*.png"
Show the dialog box. If the .Show method returns True, the
user picked at least one file. If the .Show method returns
False, the user clicked Cancel.
If .Show = True Then
        'Loop through each file selected and add it to the list box.
        For Each varFile In .SelectedItems
                'Me.FileList.AddItem varFile
                Debug.Print varFile
                Call Insert_bunch_images(varFile)
                Next
                Else
                MsgBox "You clicked Cancel in the file dialog box."
        End If
        End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Insert_SqWrap_Image()
imagePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim shp As Shape
Set shp = ActiveDocument.Shapes.AddPicture( _
FileName:=imagePath, _
SaveWithDocument:=True, _
Anchor:=Selection.Range)
With shp
.WrapFormat.Type = wdWrapSquare
.Left = 380
.Top = -50
.Width = 70
.Height = 70
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub AddImageToHeader()
PURPOSE: Insert an image into a Word document heading
SOURCE: www.TheSpreadsheetGuru.com
Dim SrcePath As String
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\x1i-GEQY.png"
ThisDocument.Sections.Item(1).Headers(wdHeaderFooterPrimary) _
.Range.InlineShapes.AddPicture (SrcePath)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Word_Insert_Image_in_Header()
SrcePath = "C:\Documents and Settings\Administrator\My Documents\My Pictures\highlands1.png"
Dim oWD As Word.Document
Set oWD = ActiveDocument
With oWD.Sections(1)
.Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
.Headers(wdHeaderFooterPrimary).Range.Text = "Text as Header"
 .Headers(wdHeaderFooterPrimary).Range.ParagraphFormat.Alignment = wdAlignParagraphRight
 .Headers(wdHeaderFooterPrimary).Range.InlineShapes.AddPicture SrcePath
End With
End Sub
Attribute VB_Name = "SELETEXTX"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xlist()
xlist Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
.Text = ";"
.Replacement.Text = ";^p"
.Forward = True
.Wrap = wdFindAsk
.Format = False
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
Selection.Sort ExcludeHeader:=False, FieldNumber:="Paragraphs", _
SortFieldType:=wdSortFieldAlphanumeric, SortOrder:=wdSortOrderAscending, _
FieldNumber2:="", SortFieldType2:=wdSortFieldAlphanumeric, SortOrder2:= _
wdSortOrderAscending, FieldNumber3:="", SortFieldType3:= _
wdSortFieldAlphanumeric, SortOrder3:=wdSortOrderAscending, Separator:= _
wdSortSeparateByTabs, SortColumn:=False, CaseSensitive:=False, LanguageID _
:=wdEnglishUK, SubFieldNumber:="Paragraphs", SubFieldNumber2:= _
"Paragraphs", SubFieldNumber3:="Paragraphs"
With ListGalleries(wdBulletGallery).ListTemplates(1).ListLevels(1)
.NumberFormat = ChrW(61623)
.TrailingCharacter = wdTrailingTab
.NumberStyle = wdListNumberStyleBullet
.NumberPosition = CentimetersToPoints(0.63)
.Alignment = wdListLevelAlignLeft
.TextPosition = CentimetersToPoints(1.27)
.TabPosition = wdUndefined
.ResetOnHigher = 0
.StartAt = 1
With .Font
.Bold = wdUndefined
.Italic = wdUndefined
.StrikeThrough = wdUndefined
.Subscript = wdUndefined
.Superscript = wdUndefined
.Shadow = wdUndefined
.Outline = wdUndefined
.Emboss = wdUndefined
.Engrave = wdUndefined
.AllCaps = wdUndefined
.Hidden = wdUndefined
.Underline = wdUndefined
.Color = wdUndefined
.Size = wdUndefined
.Animation = wdUndefined
.DoubleStrikeThrough = wdUndefined
.Name = "Symbol"
End With
.LinkedStyle = ""
End With
ListGalleries(wdBulletGallery).ListTemplates(1).Name = ""
Selection.Range.ListFormat.ApplyListTemplateWithLevel ListTemplate:= _
ListGalleries(wdBulletGallery).ListTemplates(1), ContinuePreviousList:= _
False, ApplyTo:=wdListApplyToWholeList, DefaultListBehavior:= _
wdWord10ListBehavior
Selection.Range.ListFormat.RemoveNumbers NumberType:=wdNumberParagraph
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_fmt()
On Error Resume Next
For x = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
        ActiveDocument.Tables(x).Rows.Height = InchesToPoints(0)
        For Row = 1 To ActiveDocument.Tables(x).Rows.Count
                For Col = 1 To ActiveDocument.Tables(x).Columns.Count
                        'ActiveDocument.Tables(X).Cell(Row, Col).Range.Text
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Size = 9
                        ' .Font.Size = 8
                        Next
                        Next
                        
                Next x
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_subtable_element()
On Error Resume Next
For q = 1 To 1 'top table
        
        ActiveDocument.Tables(q).AutoFitBehavior wdAutoFitWindow
        ActiveDocument.Tables(q).Rows.Height = InchesToPoints(0)
        
        For t = 1 To ActiveDocument.Tables(q).Tables.Count
                xStyleTable = xStyleTable + 1
                If xStyleTable > 6 Then xStyleTable = 1
                        
                        ActiveDocument.Tables(q).Tables(t).Style = "Light List - Accent 5"
                        'ActiveDocument.Tables(q).Tables(t).Style = "Light List - Accent " & t
                        'ActiveDocument.Tables(q).Tables(t).Style = "Light sHADING - Accent " & xStyleTable
                        'ActiveDocument.Tables(q).Tables(t).Style = "Table Grid"
                        ' ActiveDocument.Tables(q).Tables(t).AutoFitBehavior wdAutoFitWindow
                        'AMEND_CELLS = "yes"
                        If AMEND_CELLS = "yes" Then
                                For qRow = 1 To ActiveDocument.Tables(q).Tables(t).Rows.Count
                                        For qCol = 1 To ActiveDocument.Tables(q).Tables(t).Columns.Count
                                                
                                                ActiveDocument.Tables(q).Tables(t).Cell(qRow, qCol).Range.Font.Size = 9
                                                'ActiveDocument.Tables(q).Tables(t).Style = "Table Grid"
                                                
                                                Next
                                                Next
                                        End If
                                Next t
                                
                        Next q
                        MsgBox "done"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub table_XZXZXZ_candara()
On Error Resume Next
For x = 1 To ActiveDocument.Tables.Count
        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
        ActiveDocument.Tables(x).Rows.Height = InchesToPoints(0)
        For Row = 1 To ActiveDocument.Tables(x).Rows.Count
                For Col = 1 To ActiveDocument.Tables(x).Columns.Count
                        'ActiveDocument.Tables(X).Cell(Row, Col).Range.Text
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Size = 11
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Color = wdColorBlack
                        ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Name = "Calibri"
                        '  ActiveDocument.Tables(x).Cell(Row, Col).Range.Font.Name = "Candara"
                        
                        ' .Font.Size = 8
                        Next
                        Next
                        ActiveDocument.Tables(x).Style = "Table Grid"
                        'ActiveDocument.Tables(x).Style = "Light List - Accent 1"
                        '  ActiveDocument.Tables(x).Style = "Light gRID - Accent 3"
                        ActiveDocument.Tables(x).AutoFitBehavior wdAutoFitWindow
                Next x
                
                
                
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_agenct_12_blue()
Selection.Font.Name = "Agency FB"
Selection.Font.Size = 10
Selection.Font.Size = 12
Selection.Font.ColorIndex = wdDarkBlue
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_cal_11_teal()
Selection.Font.Name = "CAlibri"
Selection.Font.Size = 10
Selection.Font.Size = 11
Selection.Font.Color = RGB(0, 128, 128)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_cal_12_blk()
Selection.Font.Name = "CAlibri"
Selection.Font.Size = 10
Selection.Font.Size = 12
Selection.Font.Color = RGB(0, 0, 0)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub whoami()
x = ActiveDocument.Name
y = ActiveDocument.Path & "\" & x
z = InputBox(x, x, x)
z = InputBox(y, y, y)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub quote_extract()
xtext = Selection.Range.Text
xtext = Replace(xtext, vbCrLf, " ")
xtext = Replace(xtext, vbCr, " ")
xtext = Replace(xtext, vbLf, " ")
For q = 1 To 32
        xtext = Replace(xtext, Chr(q), " ")
Next q
xpage = Selection.Information(wdActiveEndPageNumber)
x = " '..." & xtext & "..' [Line: " & GetLineNum(Selection.Range) & " on page " & xpage & " ]"
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub WhereAmI()
MsgBox "Paragraph number: " & GetParNum(Selection.Range) & vbCrLf & _
"Absolute line number: " & GetAbsoluteLineNum(Selection.Range) & vbCrLf & _
"Relative line number: " & GetLineNum(Selection.Range)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub whoami2()
x = ActiveDocument.Path & "\" & ActiveDocument.Name
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetParNum(r As Range) As Integer
Dim rParagraphs As Range
Dim CurPos As Long
r.Select
CurPos = ActiveDocument.Bookmarks("\startOfSel").Start
Set rParagraphs = ActiveDocument.Range(Start:=0, End:=CurPos)
GetParNum = rParagraphs.Paragraphs.Count
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetLineNum(r As Range) As Integer
relative to current page
GetLineNum = r.Information(wdFirstCharacterLineNumber)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function GetAbsoluteLineNum(r As Range) As Integer
Dim i1 As Integer, i2 As Integer, Count As Integer, rTemp As Range
r.Select
Do
i1 = Selection.Information(wdFirstCharacterLineNumber)
Selection.GoTo what:=wdGoToLine, which:=wdGoToPrevious, Count:=1, Name:=""
Count = Count + 1
i2 = Selection.Information(wdFirstCharacterLineNumber)
Loop Until i1 = i2
r.Select
GetAbsoluteLineNum = Count
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xlist2line()
xlist2line Macro
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
.Text = "^p"
.Replacement.Text = "; "
.Forward = True
.Wrap = wdFindAsk
.Format = False
.MatchCase = False
.MatchWholeWord = False
.MatchWildcards = False
.MatchSoundsLike = False
.MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_ascii()
x = Selection
For q = 1 To Len(x)
        z = z & Mid(x, q, 1) & "(" & Asc(Mid(x, q, 1)) & ")"
        
Next q
z = InputBox(z, z, z)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_oneline()
x = Selection
x = Replace(x, Chr(7), " ")
x = Replace(x, Chr(10), " ")
x = Replace(x, vbCrLf, " ")
x = Replace(x, Chr(13), " ")
On Error Resume Next
For q = 1 To 31
        x = Replace(x, q, " ")
Next q
For q = 127 To 250
        x = Replace(x, q, " ")
Next q
fname = ActiveDocument.Path & "\TEMP23456.TXT"
Call PRINT_INFO(x, fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sel_oneline2()
x = Selection
x = Replace(x, Chr(7), " ")
x = Replace(x, Chr(10), " ")
x = Replace(x, vbCrLf, " ")
x = Replace(x, Chr(13), " ")
On Error Resume Next
For q = 1 To 31
        x = Replace(x, q, " ")
Next q
For q = 127 To 250
        x = Replace(x, q, " ")
Next q
Selection.Text = x & vbNewLine
End Sub
Attribute VB_Name = "formsx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1_pdftext()
PDFtext.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub form1_userform4()
UserForm4.Show
End Sub
Attribute VB_Name = "testingx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test_tyle()
Debug.Print Selection.Range.Text
Debug.Print Selection.Range.Style
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub testtabs()
Selection.Paragraphs.TabStops.ClearAll
With Selection.Paragraphs.TabStops
.Add Position:=InchesToPoints(1.5), Alignment:=wdAlignTabLeft
.Add Position:=InchesToPoints(2), Alignment:=wdAlignTabLeft
.Add Position:=InchesToPoints(3), Alignment:=wdAlignTabLeft
.Add Position:=InchesToPoints(4), Alignment:=wdAlignTabLeft
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ClrFmtg()
ActiveDocument.Select
Selection.ClearFormatting
Selection.Font.Reset
End Sub
Attribute VB_Name = "exportx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub vba_export_modules_V()
#http://www.cpearson.com/Excel/VBE.aspx
 reference to extensibility library
xprefix = "V:\Data2017\VBA\VBAWord\vba_"
Dim objMyProj As VBProject
Dim objVBComp As VBComponent
Set objMyProj = Application.VBE.ActiveVBProject
For Each objVBComp In objMyProj.VBComponents
        If objVBComp.Type = vbext_ct_StdModule Then
                
                
                'xprefix = "V:\Data2016\VBA\VBAWord\word_"
                'objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".bas"
                ' objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
                xprefix = "V:\Data2017\VBA\VBAWord\word04_"
                objVBComp.Export xprefix & objVBComp.Name & ".bas"
                'objVBComp.Export xprefix & objVBComp.Name & ".txt"
                
                Debug.Print xprefix
                
        End If
        Next
        Shell ("explorer.exe " & "V:\Data2017\VBA\VBAWord\")
End Sub
Attribute VB_Name = "legal"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub aa_headings2017_legal()
xfont = "Calibri"
XSIZE = 13
fnormal = 13
XCOLOR1 = RGB(0, 128, 128)
XCOLOR2 = RGB(128, 32, 0)
XCOLOR3 = RGB(128, 96, 0)
XCOLOR4 = RGB(64, 0, 128)
XCOLOR5 = vbBlack
Call legal_headings("Heading 1", xfont, 13, "", XCOLOR1)
Call legal_headings("Heading 2", xfont, 13, "", XCOLOR5)
Call legal_headings("Heading 3", xfont, 13, "", XCOLOR5)
Call legal_headings("Heading 4", xfont, 13, "", XCOLOR4)
Call legal_headings("Normal", xfont, fnormal, "", "")
Call legal_headings("List Paragraph", xfont, fnormal, "", "")
Call legal_headings("No Spacing", xfont, fnormal, "", "")
Call legal_headings("TOC Heading", xfont, fnormal, "", "")
Call legal_headings("TOC 1", xfont, fnormal, "", "")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function legal_headings(xstyle, xfont, XSIZE, xbold, xcolor)
With ActiveDocument.Styles(xstyle).Font
.Name = xfont
.Size = XSIZE
.Bold = False
.Italic = False
If Len(xbold) > 1 Then .Bold = True
        
        'http://dmcritchie.mvps.org/excel/colors.htm
        .ColorIndex = wdBlack
        .ColorIndex = wdBlack
        
        
        If Len(xcolor) > 0 Then
                If xcolor > 10 Then
                        .Color = xcolor
                        Else
                        .ColorIndex = xcolor
                End If
        End If
        
        
        End With
        xindent = 0
        If xstyle = "Heading 1" Then xindent = 0
                If xstyle = "Heading 2" Then xindent = 0
                        If xstyle = "Heading 3" Then xindent = 0 '2
                                If xstyle = "Heading 4" Then xindent = 1 '3
                                        
                                        With ActiveDocument.Styles(xstyle).ParagraphFormat
                                        .LeftIndent = CentimetersToPoints(xindent)
                                        .RightIndent = CentimetersToPoints(0)
                                        .FirstLineIndent = CentimetersToPoints(1.5)
                                        
                                        .TabStops.ClearAll
                                        If xstyle = "Heading 1" Then .TabStops(InchesToPoints(0.5)).Alignment = wdAlignTabLeft
                                                If xstyle = "Heading 2" Then .TabStops(InchesToPoints(1)).Alignment = wdAlignTabLeft
                                                        If xstyle = "Heading 3" Then .TabStops(InchesToPoints(1)).Alignment = wdAlignTabLeft
                                                                If xstyle = "Heading 4" Then .TabStops(InchesToPoints(1)).Alignment = wdAlignTabLeft
                                                                        
                                                                        .SpaceBefore = 1
                                                                        .SpaceBeforeAuto = False
                                                                        .SpaceAfter = 1
                                                                        .SpaceAfterAuto = False
                                                                        .LineSpacingRule = wdLineSpace0pt0
                                                                        .Alignment = wdAlignParagraphLeft
                                                                        .WidowControl = True
                                                                        .KeepWithNext = False
                                                                        .KeepTogether = False
                                                                        .PageBreakBefore = False
                                                                        .NoLineNumber = True
                                                                        .Hyphenation = True
                                                                        .FirstLineIndent = CentimetersToPoints(0)
                                                                        .OutlineLevel = wdOutlineLevelBodyText
                                                                        .CharacterUnitLeftIndent = 0
                                                                        .CharacterUnitRightIndent = 0
                                                                        
                                                                        .LineUnitBefore = 1
                                                                        .LineUnitAfter = 1
                                                                        .MirrorIndents = False
                                                                        .TextboxTightWrap = wdTightNone
                                                                        End With
                                                                        
                                                                        
End Function
Attribute VB_Name = "cmi_stuff"
Attribute VB_Name = "watermarkS"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RemoveWaterMark()
http://www.vbaexpress.com/kb/getarticle.php?kb_id=588
Dim strWMName As String
On Error GoTo ErrHandler
ActiveDocument.Sections(1).Range.Select
strWMName = ActiveDocument.Sections(1).Index
ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
Selection.HeaderFooter.Shapes(strWMName).Select
Selection.Delete
ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
Exit Sub
ErrHandler:
MsgBox "An error occured trying to remove the watermark." & Chr(13) & _
"Error Number: " & Err.Number & Chr(13) & _
"Decription: " & Err.Description, vbOKOnly + vbCritical, "Error"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub watermarkx()
xtext = "DISCUSSION DRAFT "
xtext = "NOT LEGAL ADVICE "
XH = 4
XW = 15
ActiveDocument.Sections(1).Range.Select
ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
Selection.HeaderFooter.Shapes.AddTextEffect( _
PowerPlusWaterMarkObject4559526, xtext, "Calibri", 1, False _
, False, 0, 0).Select
 Selection.ShapeRange.Name = "PowerPlusWaterMarkObject4559526"
Selection.ShapeRange.TextEffect.NormalizedHeight = False
Selection.ShapeRange.Line.Visible = False
Selection.ShapeRange.Fill.Visible = True
Selection.ShapeRange.Fill.Solid
Selection.ShapeRange.Fill.ForeColor.RGB = RGB(192, 192, 192)
Selection.ShapeRange.Fill.Transparency = 0.5
Selection.ShapeRange.Rotation = 315
Selection.ShapeRange.LockAspectRatio = True
Selection.ShapeRange.Height = CentimetersToPoints(XH)
Selection.ShapeRange.Width = CentimetersToPoints(XW)
Selection.ShapeRange.WrapFormat.AllowOverlap = True
Selection.ShapeRange.WrapFormat.Side = wdWrapNone
Selection.ShapeRange.WrapFormat.Type = 3
Selection.ShapeRange.RelativeHorizontalPosition = _
wdRelativeVerticalPositionMargin
Selection.ShapeRange.RelativeVerticalPosition = _
wdRelativeVerticalPositionMargin
Selection.ShapeRange.Left = wdShapeCenter
Selection.ShapeRange.Top = wdShapeCenter
ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
End Sub
Attribute VB_Name = "NewMacros"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_saveas()
a1_saveas Macro
End Sub
Attribute VB_Name = "highlands_cmi"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_test()
Dim x, z As String
x = Selection
z = "Your text:" & x
z = Replace(z, vbCrLf, " ")
z = Replace(z, vbCr, " ")
z = Replace(z, vbLf, " ")
z = Replace(z, "  ", " ")
x = z
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a2_test()
Dim x, z As String
x = Selection
z = "Your sections which includes the text:" & x
z = Replace(z, vbCrLf, " ")
z = Replace(z, vbCr, " ")
z = Replace(z, vbLf, " ")
z = Replace(z, "  ", " ")
x = z
x = InputBox(x, x, x)
End Sub
