
Attribute VB_Name = "Module1"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub S1_LoopThroughFiles()
Worksheets(1).Cells.Clear
Dim MyObj As Object, MySource As Object, file As Variant
xpath = ActiveWorkbook.Path & "\"
file = Dir("H:\XZXZXZD_ReOrg\VBA\Word\")
file = Dir(xpath)
While (file <> "")
        If InStr(file, "txt") > 0 Then
                '   MsgBox "found " & file
                '   Exit Sub
                r = r + 1
                Worksheets(1).Cells(r, 1).Value = file
        End If
        
        file = Dir
        Wend
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub S2_readfile()
Worksheets(2).Cells.Clear
Dim fileName As String, textData As String, textRow As String, fileNo As Integer
xpath = ActiveWorkbook.Path & "\"
fileName = "H:\XZXZXZD_ReOrg\VBA\Word\XZXZXZd_word_tr_newstylex20160316-.txt"
For r = 1 To 1000
        
        fileName = Worksheets(1).Cells(r, 1).Value
        If Len(fileName) < 1 Then Exit For
                
                fileNo = FreeFile 'Get first free file number
                Open xpath & fileName For Input As #fileNo
                Do While Not EOF(fileNo)
                        Line Input #fileNo, textRow
                        textData = textData & textRow
                        q = q + 1
                        Worksheets(2).Cells(q, 1).Value = textRow
                        Loop
                        Close #fileNo
                        
                        
                Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_saveas_TIMED()
xpath = ActiveWorkbook.Path & "\"
xdate = Format(Now, "yyyymmdd hhmm")
xname = xpath & ActiveWorkbook.Name
xname2 = Replace(xname, ".xls", "_" & xdate & ".xls")
ActiveWorkbook.SaveAs fileName:= _
xname2, FileFormat:= _
xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
ActiveWorkbook.SaveAs fileName:= _
xname, FileFormat:= _
xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
x = xpath
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub vba_export_modules()
#http://www.cpearson.com/Excel/VBE.aspx
 reference to extensibility library
xprefix = "F:\Data2016\Client_XZXZXZ\VBA\EXcel\vba_"
xprefix = ActiveWorkbook.Path & "\vba_admin_"
xprefix = "V:\Data2017\VBA\VBAExcel\vba_"
Dim objMyProj As VBProject
Dim objVBComp As VBComponent
Set objMyProj = Application.VBE.ActiveVBProject
For Each objVBComp In objMyProj.VBComponents
        If objVBComp.Type = vbext_ct_StdModule Then
                Debug.Print "Exporting " & xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
                objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".bas"
                objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
        End If
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO1(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, I
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
Attribute VB_Name = "normal"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_saveas()
fname = ActiveWorkbook.Path & "\" & ActiveWorkbook.Name
xdate = Format(Now, "yyyymmdd")
bname = Replace(fname, ".xl", xdate & ".xl")
ActiveWorkbook.SaveAs fileName:= _
bname, FileFormat:= _
xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
ActiveWorkbook.SaveAs fileName:= _
fname, FileFormat:= _
xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_saveas_HMS()
fname = ActiveWorkbook.Path & "\" & ActiveWorkbook.Name
xdate = Format(Now, "yyyymmddHHMMSS")
bname = Replace(fname, ".xl", xdate & ".xl")
ActiveWorkbook.SaveAs fileName:= _
bname, FileFormat:= _
xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
ActiveWorkbook.SaveAs fileName:= _
fname, FileFormat:= _
xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_doit()
step1_getfilelist
MsgBox "s1"
step2_readin_each_oneBIG_file
MsgBox "s2"
step3_santiize_for_public
MsgBox "s3"
step4_ouptut_for_public
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_forms()
CommentFrm1.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub stripe()
For r = 700 To 2000
        Rows(r).Interior.ColorIndex = 43
        If r / 2 = Int(r / 2) Then
                Rows(r).Interior.ColorIndex = 0
        End If
        
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Make_html()
For r = 1 To 1000
        x = Range("b" & r).Value
        If Len(x) > 1 Then
                Application.CutCopyMode = False
                ActiveSheet.Hyperlinks.Add Anchor:=Range("b" & r), Address:=x, TextToDisplay:=x
                
        End If
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_val(x)
x = Replace(x, ",", "")
x = Replace(x, "m", "")
x = Val(x)
tr_val = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub A1_TEMP()
For r = 100 To 1 Step -1
        
        
        If Len(Cells(r, 1).Value) < 2 Then
                Rows(r).Delete
        End If
        
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function ExtractEmailAddress(ByVal s As String) As String
Dim AtSignLocation As Long
Dim i As Long
Dim TempStr As String
Const CharList As String = "[A-Za-z0-9._-]"
Get location of the @
AtSignLocation = InStr(s, "@")
If AtSignLocation = 0 Then
        ExtractEmailAddress = "" 'not found
        Else
        TempStr = ""
        'Get 1st half of email address
        For i = AtSignLocation - 1 To 1 Step -1
                If Mid(s, i, 1) Like CharList Then
                        TempStr = Mid(s, i, 1) & TempStr
                        Else
                        Exit For
                End If
        Next i
        If TempStr = "" Then Exit Function
                'get 2nd half
                TempStr = TempStr & "@"
                For i = AtSignLocation + 1 To Len(s)
                        If Mid(s, i, 1) Like CharList Then
                                TempStr = TempStr & Mid(s, i, 1)
                                Else
                                Exit For
                        End If
                Next i
        End If
        'Remove trailing period if it exists
        If Right(TempStr, 1) = "." Then TempStr = _
                Left(TempStr, Len(TempStr) - 1)
                ExtractEmailAddress = TempStr
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub GetEmailaddress()
#### not tested!
Dim lastrow As Long, i As Long
Dim ncol As Integer, spos As Integer
Dim n As Integer, n1 As Integer, n2 As Integer
Dim searchtxt As String
Dim email As String
With Worksheets("club")
lastrow = .Cells(Rows.Count, "A").End(xlUp).row
For i = 1 To lastrow
        searchtxt = .Range("A" & i)
        ncol = 2
        spos = 1
        Do
        n = InStr(spos, searchtxt, "@", vbTextCompare)
        If n <> 0 Then
                n1 = InStrRev(searchtxt, " ", n, vbTextCompare)
                n2 = InStr(n, searchtxt, " ", vbTextCompare)
                If n2 = 0 Then n2 = Len(searchtxt) + 1
                        email = Trim(Mid(searchtxt, n1, n2 - n1))
                        Cells(i, ncol) = email
                        ncol = ncol + 1
                        spos = n2
                End If
        Loop Until n = 0
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub select2line()
For Each xcell In Selection
        x = x & xcell.Value & "; "
        Next
        x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_conc(xfrange)
For Each xc In xfrange
        xvalue = xc.Value
        If IsNumeric(xvalue) Then xvalue = Int(xvalue * 10) / 10
                If IsDate(xvalue) Then xvalue = Format(xvalue, "dd mmm ")
                        x = x & " " & xvalue
                        Next
                        tr_conc = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function twitter_conc(xfrange)
For Each xc In xfrange
        xvalue = xc.Value
        x = x & " " & xvalue
        Next
        twitter_conc = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub tr_con2notepad()
r = ActiveCell.row
c = ActiveCell.Column
For col = 1 To c
        x = x & Cells(r, col).Value & vbCrLf
        Next
        x = InputBox(x, x, x)
End Sub
Attribute VB_Name = "xvalidationx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xvalidation()
Range("f2:f999").Validation.Delete
xtext = "Risk,Issue, Assumption, Dependancy"
xtext = "01-Approval, 02-Initiation, 03-Execution, 04-Close, 05-Review"
xtext = "xRed,xAmber,xGreen"
xtext = Worksheets("validation").Range("a1:a999")
With Worksheets("time").Range("e2:e999").Validation
.Delete
.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
xlBetween, Formula1:=xtext
.IgnoreBlank = True
.InCellDropdown = True
.InputTitle = ""
.ErrorTitle = ""
.InputMessage = ""
.ErrorMessage = ""
.ShowInput = True
.ShowError = True
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xvalid()
Macro1 Macro
Worksheets("time").Columns("E:E").Select
With Selection.Validation
.Delete
.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
xlBetween, Formula1:="=validation!$A:$A"
.IgnoreBlank = True
.InCellDropdown = True
.InputTitle = ""
.ErrorTitle = ""
.InputMessage = ""
.ErrorMessage = ""
.ShowInput = True
.ShowError = True
End With
End Sub
Attribute VB_Name = "selection_loop"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Selection_loop()
Dim rng As Range
Dim row As Range
Dim cell As Range
delim = vbCrLf
Set rng = Selection
For Each row In rng.Rows
        xc = xc + 1
        x = x & vbCrLf & xc & "."
        For Each cell In row.Cells
                'Do Something
                x = x & cell & delim
        Next cell
Next row
Debug.Print x
x = InputBox(x, x, x)
End Sub
Attribute VB_Name = "outlook"
Option Explicit
Public Sub CreateOutlookAppointments()
Sheets("Sheet1").Select
On Error GoTo Err_Execute
Dim olApp As outlook.Application
Dim olAppt As outlook.AppointmentItem
Dim blnCreated As Boolean
 Dim olNs As outlook.Namespace
Dim CalFolder As outlook.MAPIFolder
Dim i As Long
On Error Resume Next
 Set olApp = outlook.Application
If olApp Is Nothing Then
        Set olApp = outlook.Application
        blnCreated = True
        Err.Clear
        Else
        blnCreated = False
End If
On Error GoTo 0
Set olNs = olApp.GetNamespace("MAPI")
Set CalFolder = olNs.GetDefaultFolder(olFolderCalendar)
i = 2
Do Until Trim(Cells(i, 1).Value) = ""
        
        Set olAppt = CalFolder.Items.Add(olAppointmentItem)
        With olAppt
        .MeetingStatus = olMeeting
        'Define calendar item properties
        .Subject = Cells(i, 1)
        
        ' doni use location if using a resource
        ' .Location = Cells(i, 2)
        .Body = Cells(i, 3)
        .Categories = Cells(i, 4)
        .Start = Cells(i, 5) + Cells(i, 6)     '+ TimeValue("9:00:00")
        .End = Cells(i, 7) + Cells(i, 8)       '+TimeValue("10:00:00")
        .BusyStatus = olBusy
        .ReminderMinutesBeforeStart = Cells(i, 9)
        .ReminderSet = True
        
        get the recipients
        Dim RequiredAttendee, OptionalAttendee, ResourceAttendee As outlook.Recipient
        Set RequiredAttendee = .Recipients.Add(Cells(i, 10).Value)
        RequiredAttendee.Type = olRequired
        Set OptionalAttendee = .Recipients.Add(Cells(i, 11).Value)
        OptionalAttendee.Type = olOptional
        Set ResourceAttendee = .Recipients.Add(Cells(i, 12).Value)
        ResourceAttendee.Type = olResource
        For meetings or XZXZXZ Calendars
                .Display
                
                End With
                
                i = i + 1
                Loop
                Set olAppt = Nothing
                Set olApp = Nothing
                
                Exit Sub
                
                Err_Execute:
                MsgBox "An error occurred - Exporting items to Calendar."
                
End Sub
Option Explicit
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function funcAppointments()
Sheets("Sheet1").Select
On Error GoTo Err_Execute
Dim olApp As outlook.Application
Dim olAppt As outlook.AppointmentItem
Dim blnCreated As Boolean
Dim olNs As outlook.Namespace
Dim CalFolder As outlook.MAPIFolder
Dim i As Long
On Error Resume Next
Set olApp = outlook.Application
If olApp Is Nothing Then
        Set olApp = outlook.Application
        blnCreated = True
        Err.Clear
        Else
        blnCreated = False
End If
On Error GoTo 0
Set olNs = olApp.GetNamespace("MAPI")
Set CalFolder = olNs.GetDefaultFolder(olFolderCalendar)
i = 2
Do Until Trim(Cells(i, 1).Value) = ""
        
        Set olAppt = CalFolder.Items.Add(olAppointmentItem)
        With olAppt
        .MeetingStatus = olMeeting
        'Define calendar item properties
        .Subject = Cells(i, 1)
        
        ' doni use location if using a resource
        ' .Location = Cells(i, 2)
        .Body = Cells(i, 3)
        .Categories = Cells(i, 4)
        .Start = Cells(i, 5) + Cells(i, 6)     '+ TimeValue("9:00:00")
        .End = Cells(i, 7) + Cells(i, 8)       '+TimeValue("10:00:00")
        .BusyStatus = olBusy
        .ReminderMinutesBeforeStart = Cells(i, 9)
        .ReminderSet = True
        
        get the recipients
        Dim RequiredAttendee, OptionalAttendee, ResourceAttendee As outlook.Recipient
        Set RequiredAttendee = .Recipients.Add(Cells(i, 10).Value)
        RequiredAttendee.Type = olRequired
        Set OptionalAttendee = .Recipients.Add(Cells(i, 11).Value)
        OptionalAttendee.Type = olOptional
        Set ResourceAttendee = .Recipients.Add(Cells(i, 12).Value)
        ResourceAttendee.Type = olResource
        For meetings or XZXZXZ Calendars
                .Display
                
                End With
                
                i = i + 1
                Loop
                Set olAppt = Nothing
                Set olApp = Nothing
                
                Exit Function
                
                Err_Execute:
                MsgBox "An error occurred - Exporting items to Calendar."
                
End Function
Attribute VB_Name = "export"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub vba_export_modules_local()
xprefix = ActiveWorkbook.Path & "\vba_excel_"
Dim objMyProj As VBProject
Dim objVBComp As VBComponent
Set objMyProj = Application.VBE.ActiveVBProject
For Each objVBComp In objMyProj.VBComponents
        If objVBComp.Type = vbext_ct_StdModule Then
                Debug.Print "Exporting " & xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
                objVBComp.export xprefix & objVBComp.Name & ".bas"
                'objVBComp.export xprefix & objVBComp.Name & ".txt"
                
                'objVBComp.export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".bas"
                'objVBComp.export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
        End If
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub vba_export_modules_central()
xprefix = "V:\Data2017\VBA\VBAExcel\normal01_"
Dim objMyProj As VBProject
Dim objVBComp As VBComponent
Set objMyProj = Application.VBE.ActiveVBProject
For Each objVBComp In objMyProj.VBComponents
        If objVBComp.Type = vbext_ct_StdModule Then
                Debug.Print "Exporting " & xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
                objVBComp.export xprefix & objVBComp.Name & ".bas"
                'objVBComp.export xprefix & objVBComp.Name & ".txt"
                
                'objVBComp.export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".bas"
                'objVBComp.export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
        End If
        Next
        
        Shell ("explorer.exe " & "V:\Data2017\VBA\VBAExcel\")
        
End Sub
Attribute VB_Name = "CONDITIONALFORMATTING"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub setcond()
xrange = "F4:F999"
xsheet = 1
Worksheets(xsheet).Range(xrange).FormatConditions.Delete
Call cond(xsheet, xrange, "1-1", 1, 36)
Call cond(xsheet, xrange, "1-2", 2, 37)
Call cond(xsheet, xrange, "1-3", 3, 38)
Call cond(xsheet, xrange, "1-4", 4, 39)
Call cond(xsheet, xrange, "2-1", 5, 40)
Call cond(xsheet, xrange, "3-1", 6, 41)
Call cond(xsheet, xrange, "4-1", 7, 42)
Call cond(xsheet, xrange, "1-1", 1, 36)
Call cond(xsheet, xrange, "r", 2, 44)
Call cond(xsheet, xrange, "c", 3, 43)
Call cond(xsheet, xrange, "i", 4, 36)
Call cond(xhseet, xrange, "#g", 4, 31)
Call cond(xhseet, xrange, "#a", 5, 5)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function cond(xsheet, xrange, xstring, cond_no, cond_color)
 Worksheets(3).Range("A:z").FormatConditions.Delete
With Worksheets(xsheet).Range(xrange)
.FormatConditions.Add Type:=xlTextString, String:=xstring, TextOperator:=xlContains
.FormatConditions(cond_no).Interior.ColorIndex = cond_color
End With
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub rainbow()
For r = 1 To 100
        Cells(r, 1).Interior.ColorIndex = r
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub setvalidation()
Cells.Validation.Delete
Xlist = UCase("email,newsletter,one-to-one,team-briefing,town-hall,phone,other")
Call xvalidation("D5:D999", Xlist)
Xlist = UCase("D-dominat driven (results), I-influence (enthusiasm), C-cautious careful (accuracy), S-steady stable (support) ")
Call xvalidation("e5:e999", Xlist)
Xlist = x
Xlist = UCase("1.Delighted, 2.Happy, 3.Neutral, 4.Sad, 5.Angry")
Call xvalidation("g5:g999", Xlist)
Xlist = UCase("1.Evangelical, 2.For, 3.Neutral, 4.Against, 5.Anti")
Call xvalidation("h5:h999", Xlist)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function xvalidation(Xcol, Xlist)
With Range(Xcol).Validation
.Delete
.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
xlBetween, Formula1:=Xlist
.IgnoreBlank = True
.InCellDropdown = True
.InputTitle = ""
.ErrorTitle = ""
.InputMessage = ""
.ErrorMessage = ""
.ShowInput = True
.ShowError = True
End With
End Function
Attribute VB_Name = "buttonsx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Button1_Click()
s = "tasks"
rng = "A1:G99"
sort1 = "E2:E99"
sort2 = "A2:A99"
sort3 = "B2:B99"
Cells.Select
ActiveWorkbook.Worksheets(s).Sort.SortFields.Clear
ActiveWorkbook.Worksheets(s).Sort.SortFields.Add Key:=Range(sort1), _
SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
ActiveWorkbook.Worksheets(s).Sort.SortFields.Add Key:=Range(sort2), _
SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
ActiveWorkbook.Worksheets(s).Sort.SortFields.Add Key:=Range(sort3), _
SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
With ActiveWorkbook.Worksheets(s).Sort
.SetRange Range(rng)
.Header = xlYes
.MatchCase = False
.Orientation = xlTopToBottom
.SortMethod = xlPinYin
.Apply
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sort01()
Attribute sort01.VB_ProcData.VB_Invoke_Func = " \n14"
s = "tasks"
rng = "A1:G99"
sort1 = "E2:E99"
sort2 = "A2:A99"
sort3 = "B2:B99"
Cells.Select
ActiveWorkbook.Worksheets(s).Sort.SortFields.Clear
ActiveWorkbook.Worksheets(s).Sort.SortFields.Add Key:=Range(sort1), _
SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
ActiveWorkbook.Worksheets(s).Sort.SortFields.Add Key:=Range(sort2), _
SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
ActiveWorkbook.Worksheets(s).Sort.SortFields.Add Key:=Range(sort3), _
SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
With ActiveWorkbook.Worksheets(s).Sort
.SetRange Range(rng)
.Header = xlYes
.MatchCase = False
.Orientation = xlTopToBottom
.SortMethod = xlPinYin
.Apply
End With
End Sub
Attribute VB_Name = "makewebx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub MAKEWEB()
ws = ActiveSheet.Name
x = getimage(ws)
ws = Replace(ws, " ", "")
fname = ActiveWorkbook.Path & "\zzhtml" & ws & ".html"
Call PRINT_INFO(x, fname)
Shell ("explorer.exe " & fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub MAKEWEB_TABLE()
Worksheets(1).Activate
ws = ActiveSheet.Name
xrows = 7
xcols = 6
x = getimage("html")
x = x & getimage("TOPPAGE")
x = x & gettable(ws, xrows, xcols)
ws = Replace(ws, " ", "")
fname = ActiveWorkbook.Path & "\zzhtml" & ws & ".html"
Call PRINT_INFO(x, fname)
Shell ("explorer.exe " & fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub MAKEWEB_form()
ws = ActiveSheet.Name
ws = "FORM"
x = getimage("html")
x = x & getimage("script")
x = x & getimage("svg")
x = x & getimage("toppage")
x = x & getimage(ws)
x = x & getimage("footer")
pagename = ws
pagename = Replace(pagename, " ", "")
pagename = Replace(pagename, "/", "")
pagename = Replace(pagename, "\", "")
fname = LCase(ActiveWorkbook.Path & "\" & pagename & ".html")
Call PRINT_INFO(x, fname)
Shell ("explorer.exe " & fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub MAKEWEB_multi()
For Z = 1 To Worksheets.Count
        Worksheets(Z).Activate
        
        ws = ActiveSheet.Name
        If ws = "Admin" Then Exit For
                
                x = getimage("html")
                x = x & getimage("svg")
                x = x & getimage("menu")
                x = x & getimage(ws)
                x = x & getimage("footer")
                
                pagename = ws
                pagename = Replace(pagename, " ", "")
                pagename = Replace(pagename, "/", "")
                pagename = Replace(pagename, "\", "")
                
                fname = LCase(ActiveWorkbook.Path & "\" & pagename & ".html")
                Call PRINT_INFO(x, fname)
                'Shell ("explorer.exe " & fname)
                
                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function getimage(ws)
For r = 1 To 900
        For c = 1 To 20
                x = x & " " & (Worksheets(ws).Cells(r, c).Value)
                Worksheets(ws).Cells(r, c).Interior.ColorIndex = 15
        Next c
Next r
getimage = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function gettable(ws, xrows, xcols)
x = "<table   border-collapse: collapse;   border-color: #008080;>"
x = "<table>"
For r = 1 To xrows
        
        If r < 2 Then
                x = x & "<tr STYLE='color: #008080; font-weight: bold;'><B>"
                Else
                x = x & "<tr>"
        End If
        
        For c = 1 To xcols
                x = x & "<td valign=top>"
                x = x & " " & weblink(Worksheets(ws).Cells(r, c).Value)
                Worksheets(ws).Cells(r, c).Interior.ColorIndex = 15
                x = x & "</td>"
        Next c
        
        
        If r < 2 Then
                x = x & "</B></tr>"
                Else
                x = x & "</tr>"
        End If
        
        
Next r
x = x & "</table>"
gettable = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function weblink(x)
If InStr(1, x, "http") Then
        Z = "<a href=" & x & ">" & x & "</a>"
        Z = "Watch video here: <a href=" & x & " target=_blank>" & x & "</a>"
        Else
        Z = x
        Z = Replace(Z, ".", ".<p/>")
End If
weblink = Z
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
ReturnValue = Shell("C:\Program Files\Mozilla Firefox\firefox.exe " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
Attribute VB_Name = "excel_normal"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub saveas_timed()
xpath = ActiveWorkbook.Path & "\"
xdate = Format(Now, "yyyymmdd-HHMMSS")
xdate = Format(Now, "yyyymmdd")
xname = xpath & ActiveWorkbook.Name
xname2 = Replace(xname, ".xls", "_" & xdate & ".xls")
ActiveWorkbook.SaveAs Filename:= _
xname2, FileFormat:= _
xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
ActiveWorkbook.SaveAs Filename:= _
xname, FileFormat:= _
xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
x = xname
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub vba_export_modules()
#http://www.cpearson.com/Excel/VBE.aspx
 reference to extensibility library
Dim objMyProj As VBProject
Dim objVBComp As VBComponent
Set objMyProj = Application.VBE.ActiveVBProject
For Each objVBComp In objMyProj.VBComponents
        If objVBComp.Type = vbext_ct_StdModule Then
                
                
                xname = ActiveWorkbook.Name
                xname = Replace(xname, ".xlsm", "")
                xprefix = "V:\Data2017\VBA\VBAExcel\cal01_" & xname
                Debug.Print "Exporting " & xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
                
                objVBComp.Export xprefix & objVBComp.Name & ".bas"
                '  objVBComp.Export xprefix & objVBComp.Name & ".txt"
                
                '  xprefix = ActiveWorkbook.Path & "\vba_excel_"
                ' objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".bas"
                ' objVBComp.Export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
        End If
        Next
        
        Shell ("explorer.exe " & "V:\Data2017\VBA\VBAExcel\")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function halfdays(x)
halfdays = Int(x)
If x > Int(x) + 0.49 Then halfdays = Int(x) + 0.5
        
End Function
Attribute VB_Name = "reportx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub report()
For r = 2 To 500
        If InStr(1, Range("e" & r).Value, "Tania") Then
                xc = xc + 1
                xtext = xtext & vbCrLf & xc
                For c = 1 To 100
                        If Len(Cells(1, c).Value) < 1 Then Exit For
                                xtext = xtext & vbCrLf & UCase(Cells(1, c).Value) & ": " & Cells(r, c).Value
                        Next c
                End If
        Next r
        
        fname = ActiveWorkbook.Path & "\TEMP.text"
        Call PRINT_INFO(xtext, fname)
        ReturnValue = Shell("EXPLORER.EXE " & fname, 1)  ' Run Calculator.
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub report01_aquisition_pack_INDEX()
xd = " - "
For r = 2 To 500
        If InStr(1, Range("a" & r).Value, "Sky") Then
                If Range("b" & r).Value <> xprevious Then
                        xtext = xtext & vbCrLf & vbCrLf & UCase(Range("b" & r).Value)
                        xc = 0
                        xprevious = Range("b" & r).Value
                End If
                
                
                
                xc = xc + 1
                
                xtext = xtext & vbCrLf & xc & " " & Range("c" & r).Value & xd & UCase(Range("f" & r).Value)
        End If
        
Next r
fname = ActiveWorkbook.Path & "\TEMP.text"
Call PRINT_INFO(xtext, fname)
ReturnValue = Shell("EXPLORER.EXE " & fname, 1)  ' Run Calculator.
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub report01_aquisition_pack_WEEK1()
xd = " - "
For r = 2 To 500
        If InStr(1, Range("a" & r).Value, "Gree") Then
                If Range("b" & r).Value <> xprevious Then
                        xtext = xtext & vbCrLf & vbCrLf & UCase(Range("b" & r).Value)
                        xc = 0
                        xprevious = Range("b" & r).Value
                End If
                
                
                
                xc = xc + 1
                If InStr(1, "00-01-02", Right(Range("G" & r).Value, 2)) Then ' LAST 2 CHARS ARE 01,02, 03 ETC
                        xtext = xtext & vbCrLf & xc & " " & Range("c" & r).Value & xd & UCase(Range("f" & r).Value)
                End If
                
        End If
        
Next r
fname = ActiveWorkbook.Path & "\TEMP.text"
Call PRINT_INFO(xtext, fname)
ReturnValue = Shell("EXPLORER.EXE " & fname, 1)  ' Run Calculator.
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub report_gsy()
For r = 2 To 500
        If InStr(1, Range("a" & r).Value, "Green") Then
                If Range("b" & r).Value <> xprevious Then
                        xtext = xtext & vbCrLf & vbCrLf & UCase(Range("b" & r).Value)
                        xc = 0
                        xprevious = Range("b" & r).Value
                End If
                
                
                
                xc = xc + 1
                
                xtext = xtext & vbCrLf & xc & " " & Range("c" & r).Value
        End If
        
Next r
fname = ActiveWorkbook.Path & "\TEMP.text"
Call PRINT_INFO(xtext, fname)
ReturnValue = Shell("EXPLORER.EXE " & fname, 1)  ' Run Calculator.
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub report_selection()
xd = vbCrLf
For r = 1 To 14
        x = x & vbCrLf
        For c = 3 To 4
                x = x & Cells(r, c).Value & " "
        Next c
        
        x = x & UCase(Cells(r, 3).Value) & xd & (Cells(r, 4).Value) & xd
Next r
fname = ActiveWorkbook.Path & "\TEMP.text"
Call PRINT_INFO(x, fname)
ReturnValue = Shell("EXPLORER.EXE " & fname, 1)  ' Run Calculator.
End Sub
Attribute VB_Name = "sorting"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sort_bydeliverable()
Attribute sort_bydeliverable.VB_ProcData.VB_Invoke_Func = " \n14"
ws = "Sheet3"
ActiveWorkbook.Worksheets(ws).Sort.SortFields.Clear
ActiveWorkbook.Worksheets(ws).Sort.SortFields.Add Key:=Range("B2:B500") _
, SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
ActiveWorkbook.Worksheets(ws).Sort.SortFields.Add Key:=Range("C2:C500") _
, SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
With ActiveWorkbook.Worksheets(ws).Sort
.SetRange Range("A1:J500")
.Header = xlYes
.MatchCase = False
.Orientation = xlTopToBottom
.SortMethod = xlPinYin
.Apply
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sort_byweek()
ws = 1
ActiveWorkbook.Worksheets(ws).Sort.SortFields.Clear
ActiveWorkbook.Worksheets(ws).Sort.SortFields.Add Key:=Range("B2:B500") _
, SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
ActiveWorkbook.Worksheets(ws).Sort.SortFields.Add Key:=Range("g2:g500") _
, SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
ActiveWorkbook.Worksheets(ws).Sort.SortFields.Add Key:=Range("C2:C500") _
, SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
With ActiveWorkbook.Worksheets(ws).Sort
.SetRange Range("A1:J500")
.Header = xlYes
.MatchCase = False
.Orientation = xlTopToBottom
.SortMethod = xlPinYin
.Apply
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sort_forpmo()
Attribute sort_forpmo.VB_ProcData.VB_Invoke_Func = " \n14"
w = ActiveSheet.Name
ActiveWorkbook.Worksheets(w).Sort.SortFields.Clear
ActiveWorkbook.Worksheets(w).Sort.SortFields.Add Key:=Range("A2:A430") _
, SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
ActiveWorkbook.Worksheets(w).Sort.SortFields.Add Key:=Range("B2:B430") _
, SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
ActiveWorkbook.Worksheets(w).Sort.SortFields.Add Key:=Range("g2:g430") _
, SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
With ActiveWorkbook.Worksheets(w).Sort
.SetRange Range("A1:J430")
.Header = xlYes
.MatchCase = False
.Orientation = xlTopToBottom
.SortMethod = xlPinYin
.Apply
End With
End Sub
Attribute VB_Name = "xlayoutc"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub layout_REPORT()
Columns("a:z").ColumnWidth = 11
Columns("c:d").ColumnWidth = 45
Columns("j:j").ColumnWidth = 40
Columns("f:f").ColumnWidth = 0
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub layout_DETAIL()
Columns("a:z").ColumnWidth = 12
Columns("c:d").ColumnWidth = 40
Columns("j:j").ColumnWidth = 40
Columns("f:f").ColumnWidth = 10
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub highlight_color_date()
For r = 2 To 1000
        
        If Range("a" & r).Value < Now Then
                Range("a" & r).Interior.ColorIndex = 37
                Rows(r).Hidden = True
        End If
        
        If Range("a" & r).Value > DateAdd("d", 20, Now) Then
                Range("a" & r).Interior.ColorIndex = 36
                Rows(r).Hidden = False
        End If
        
        
        
Next r
End Sub
Attribute VB_Name = "CONDITIONALFORMATTING"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub setcond02()
xrange = "a2:a999"
xsheet = 1
Worksheets(xsheet).Range(xrange).FormatConditions.Delete
Call cond(xsheet, xrange, "Greenhouse", 1, 36)
Call cond(xsheet, xrange, "Sky", 2, 37)
Call cond(xsheet, xrange, "Logan", 3, 38)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub setcond_epid()
xrange = "c2:c999"
xsheet = 2
Worksheets(xsheet).Range(xrange).FormatConditions.Delete
Call cond(xsheet, xrange, "#GREEN", 1, 43)
Call cond(xsheet, xrange, "#LOW", 2, 43)
Call cond(xsheet, xrange, "#RED", 3, 3)
Call cond(xsheet, xrange, "#HIGH", 4, 3)
Call cond(xsheet, xrange, "#AMBER", 5, 44)
Call cond(xsheet, xrange, "#MEDIUM", 6, 44)
Call cond(xsheet, xrange, "#BLUE", 7, 37)
Call cond(xsheet, xrange, "#GREY", 8, 15)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub setcond()
xrange = "i2:i999"
xsheet = 1
Worksheets(xsheet).Range(xrange).FormatConditions.Delete
Call cond(xsheet, xrange, "#GREEN", 1, 43)
Call cond(xsheet, xrange, "#RED", 2, 3)
Call cond(xsheet, xrange, "#AMBER", 3, 44)
Call cond(xsheet, xrange, "#BLUE", 4, 37)
Call cond(xsheet, xrange, "#GREY", 5, 15)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function cond(xsheet, xrange, xstring, cond_no, cond_color)
 Worksheets(3).Range("A:z").FormatConditions.Delete
With Worksheets(xsheet).Range(xrange)
.FormatConditions.Add Type:=UCase(xlTextString), String:=xstring, TextOperator:=xlContains
.FormatConditions(cond_no).Interior.ColorIndex = cond_color
End With
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RAINBOW()
For r = 1 To 100
        Cells(r, 1).Interior.ColorIndex = r
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub setvalidation()
Cells.Validation.Delete
Xlist = UCase("email,newsletter,one-to-one,team-briefing,town-hall,phone,other")
Call xvalidation("D5:D999", Xlist)
Xlist = UCase("D-dominat driven (results), I-influence (enthusiasm), C-cautious careful (accuracy), S-steady stable (support) ")
Call xvalidation("e5:e999", Xlist)
Xlist = x
Xlist = UCase("1.Delighted, 2.Happy, 3.Neutral, 4.Sad, 5.Angry")
Call xvalidation("g5:g999", Xlist)
Xlist = UCase("1.Evangelical, 2.For, 3.Neutral, 4.Against, 5.Anti")
Call xvalidation("h5:h999", Xlist)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function xvalidation(Xcol, Xlist)
With Range(Xcol).Validation
.Delete
.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
xlBetween, Formula1:=Xlist
.IgnoreBlank = True
.InCellDropdown = True
.InputTitle = ""
.ErrorTitle = ""
.InputMessage = ""
.ErrorMessage = ""
.ShowInput = True
.ShowError = True
End With
End Function
Attribute VB_Name = "email1"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Mail_Sheet_Outlook_Body()
For Tips see: http://www.rondebruin.nl/win/winmail/Outlook/tips.htm
        Don't forget to copy the function RangetoHTML in the module.
        Working in Excel 2000-2016
        Dim rng As Range
        Dim OutApp As Object
        Dim OutMail As Object
        
        With Application
        .EnableEvents = False
        .ScreenUpdating = False
        End With
        
        Set rng = Nothing
        Set rng = ActiveSheet.UsedRange
        'You can also use a sheet name
        'Set rng = Sheets("YourSheet").UsedRange
        
        Set OutApp = CreateObject("Outlook.Application")
        Set OutMail = OutApp.CreateItem(0)
        
        
        xtext = ""
        NEWLINE = vbCrLf & "<br/>"
        xtext = xtext & NEWLINE & "Hello"
        xtext = xtext & NEWLINE & ""
        xtext = xtext & NEWLINE & "I have updated the week by week calendar following recent meeting/discussion"
        xtext = xtext & NEWLINE & "Please let me know if there is anything I need to add, amend, or delete notably as regards holidays or projects that impact people's availability"
        xtext = xtext & NEWLINE & ""
        
        
        
        
        xtext = xtext & NEWLINE & ""
        xtext = xtext & NEWLINE & "XZXZXZXZXZXZ"
        xtext = xtext & NEWLINE & "PROJECT MANAGER"
        xtext = xtext & NEWLINE & "+44 XZXZXZXZXZXZ051"
        xtext = xtext & NEWLINE & ""
        xtext = xtext & NEWLINE & ""
        
        
        
        
        On Error Resume Next
        With OutMail
        .To = ""
        .CC = ""
        .BCC = "tim.XZXZXZ@XZXZXZ.cloud"
        .Subject = "#ACQUISITION PROJECT - "
        .HTMLBody = xtext & "<br/> " & RangetoHTML(rng)
        .Display
        End With
        On Error GoTo 0
        
        With Application
        .EnableEvents = True
        .ScreenUpdating = True
        End With
        
        Set OutMail = Nothing
        Set OutApp = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Mail_line()
For Tips see: http://www.rondebruin.nl/win/winmail/Outlook/tips.htm
        Don't forget to copy the function RangetoHTML in the module.
        Working in Excel 2000-2016
        Dim rng As Range
        Dim OutApp As Object
        Dim OutMail As Object
        
        With Application
        .EnableEvents = False
        .ScreenUpdating = False
        End With
        
        Set rng = Nothing
        Set rng = ActiveSheet.UsedRange
        'You can also use a sheet name
        'Set rng = Sheets("YourSheet").UsedRange
        
        Set OutApp = CreateObject("Outlook.Application")
        Set OutMail = OutApp.CreateItem(0)
        
        
        xtext = ""
        xtext = xtext & vbCrLf & "Hello"
        xtext = xtext & vbCrLf & ""
        
        
        
        
        xtext = xtext & NEWLINE & ""
        xtext = xtext & NEWLINE & "I am reviewing the task list for the acquisitions (see details below)"
        xtext = xtext & NEWLINE & "I wanted to check that -----------------."
        xtext = xtext & NEWLINE & "If there are any issues suggest a brief 10minute meeting to clarify."
        xtext = xtext & NEWLINE & ""
        
        xtext = xtext & vbCrLf & ""
        
        
        
        xtext = xtext & vbCrLf & ""
        xtext = xtext & vbCrLf & "XZXZXZXZXZXZ"
        xtext = xtext & vbCrLf & "PROJECT MANAGER"
        xtext = xtext & vbCrLf & "+44 XZXZXZXZXZXZ051"
        xtext = xtext & vbCrLf & ""
        
        NEWLINE = "; " 'vbCrLf
        x = x & "Legend"
        x = x & "#GREY- not due" & NEWLINE
        x = x & "#BLUE - in progress" & NEWLINE
        x = x & "#GREEN - done, ok" & NEWLINE
        x = x & "#RED - major issue" & NEWLINE
        x = x & "#AMBER - minor issue" & NEWLINE
        
        
        xtext = xtext & vbCrLf & x
        
        xtext = xtext & vbCrLf & ""
        r = ActiveCell.row
        XPROJECT = Range("A" & r).Value & "/" & Range("B" & r).Value & "/" & Range("C" & r).Value
        For c = 1 To 10
                xtext = xtext & vbCrLf & UCase(Cells(1, c).Value) & ": " & Cells(r, c).Value
        Next c
        
        On Error Resume Next
        With OutMail
        .To = ""
        .CC = ""
        .BCC = "tim.XZXZXZ@XZXZXZ.cloud"
        .Subject = "#Acquisition " & XPROJECT
        '.HTMLBody = xtext
        .Body = xtext
        .Display
        End With
        On Error GoTo 0
        
        With Application
        .EnableEvents = True
        .ScreenUpdating = True
        End With
        
        Set OutMail = Nothing
        Set OutApp = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Mail_risk()
For Tips see: http://www.rondebruin.nl/win/winmail/Outlook/tips.htm
        Don't forget to copy the function RangetoHTML in the module.
        Working in Excel 2000-2016
        Dim rng As Range
        Dim OutApp As Object
        Dim OutMail As Object
        
        With Application
        .EnableEvents = False
        .ScreenUpdating = False
        End With
        
        Set rng = Nothing
        Set rng = ActiveSheet.UsedRange
        'You can also use a sheet name
        'Set rng = Sheets("YourSheet").UsedRange
        
        Set OutApp = CreateObject("Outlook.Application")
        Set OutMail = OutApp.CreateItem(0)
        
        
        xtext = ""
        xtext = xtext & vbCrLf & "Hello"
        xtext = xtext & vbCrLf & ""
        
        
        
        
        xtext = xtext & NEWLINE & ""
        xtext = xtext & NEWLINE & "I am reviewing the task list for the acquisitions (see details below) and I wanted to check that the key messages, FAQs and Press Release Info all now approved and OK."
        xtext = xtext & NEWLINE & "Can you just confirm, 'all ok' and I can update the project plan accordingly."
        xtext = xtext & NEWLINE & "Probably need to check Logan, Sky and Greenhouse all together."
        xtext = xtext & NEWLINE & "If there are any issues suggest a brief 10minute meeting to clarify."
        xtext = xtext & NEWLINE & ""
        
        xtext = xtext & vbCrLf & ""
        
        
        
        xtext = xtext & vbCrLf & ""
        xtext = xtext & vbCrLf & "XZXZXZXZXZXZ"
        xtext = xtext & vbCrLf & "PROJECT MANAGER"
        xtext = xtext & vbCrLf & "+44 XZXZXZXZXZXZ051"
        xtext = xtext & vbCrLf & ""
        
        
        
        
        xtext = xtext & vbCrLf & x
        
        xtext = xtext & vbCrLf & ""
        r = ActiveCell.row
        XPROJECT = Range("A" & r).Value & "/" & Range("B" & r).Value & "/" & Range("C" & r).Value
        For c = 1 To 19
                xtext = xtext & vbCrLf & UCase(Cells(1, c).Value) & ":    " & Cells(r, c).Value
        Next c
        
        On Error Resume Next
        With OutMail
        .To = ""
        .CC = ""
        .BCC = "tim.XZXZXZ@XZXZXZ.cloud"
        .Subject = "#Acquisition " & XPROJECT
        '.HTMLBody = xtext
        .Body = xtext
        .Display
        End With
        On Error GoTo 0
        
        With Application
        .EnableEvents = True
        .ScreenUpdating = True
        End With
        
        Set OutMail = Nothing
        Set OutApp = Nothing
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function RangetoHTML(rng As Range)
Changed by Ron de Bruin 28-Oct-2006
Working in Office 2000-2016
Dim fso As Object
Dim ts As Object
Dim TempFile As String
Dim TempWB As Workbook
TempFile = Environ$("temp") & "\" & Format(Now, "dd-mm-yy h-mm-ss") & ".htm"
Copy the range and create a new workbook to past the data in
rng.Copy
Set TempWB = Workbooks.Add(1)
With TempWB.Sheets(1)
.Cells(1).PasteSpecial Paste:=8
.Cells(1).PasteSpecial xlPasteValues, , False, False
.Cells(1).PasteSpecial xlPasteFormats, , False, False
.Cells(1).Select
Application.CutCopyMode = False
On Error Resume Next
.DrawingObjects.Visible = True
.DrawingObjects.Delete
On Error GoTo 0
End With
Publish the sheet to a htm file
With TempWB.PublishObjects.Add( _
SourceType:=xlSourceRange, _
Filename:=TempFile, _
Sheet:=TempWB.Sheets(1).Name, _
Source:=TempWB.Sheets(1).UsedRange.Address, _
HtmlType:=xlHtmlStatic)
.Publish (True)
End With
Read all data from the htm file into RangetoHTML
Set fso = CreateObject("Scripting.FileSystemObject")
Set ts = fso.GetFile(TempFile).OpenAsTextStream(1, -2)
RangetoHTML = ts.readall
ts.Close
RangetoHTML = Replace(RangetoHTML, "align=center x:publishsource=", _
"align=left x:publishsource=")
Close TempWB
TempWB.Close savechanges:=False
Delete the htm file we used in this function
Kill TempFile
Set ts = Nothing
Set fso = Nothing
Set TempWB = Nothing
End Function
Attribute VB_Name = "pmo1"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub pmo()
Call sort_forpmo
x = x & vbCrLf & "<html><head><style>"
x = x & vbCrLf & "BODY {  color: black;  text-align: left; font-size: 9pt; font-family: verdana; arial; position: absolute; z-index: -1; }"
x = x & vbCrLf & "H1 { color: blue;  text-align: left; font-size: 13pt; font-family: verdana; arial;  }"
x = x & vbCrLf & "H2 { color: blue;  text-align: left; font-size: 12pt; font-family: verdana; arial;  }"
x = x & vbCrLf & "H3 { background-color: cyan;  color: cyan; width=100% text-align: left; font-size: 11pt; font-family: verdana; arial;  }"
x = x & vbCrLf & "TD {   z-index: 0; text-align: left; font-size: 7pt; font-family: verdana; arial;  }"
x = x & vbCrLf & "H4 { background-color: red; color: blue;  text-align: left; font-size: 9pt; font-family: verdana; arial;  }"
x = x & vbCrLf & "table { z-index: 0; border-collapse: collapse; border: 1px solid black;}"
x = x & vbCrLf & "table.timclass td {  width: 350;  }"
X = X & vbCrLf & ".newbutton:link { background-color: black; color: white;  text-decoration: none; font-size: 8pt; }"
x = x & vbCrLf & "a.newbutton { background-color: red; color: white;  text-decoration: none; font-size: 8pt; }"
x = x & vbCrLf & ".banner { background-color: red; color: white;  text-decoration: none; font-size: 8pt; }"
x = x & vbCrLf & vbCrLf & hover_postit()
x = x & vbCrLf & "</style></head>"
x = x & "<a name=TOC>TOP</a>"
x = x & vbCrLf & "<p/>"
NEWLINE = ";" & vbCrLf
x = x & "<b>Legend</b>"
x = x & "#GREY- not due" & NEWLINE
x = x & "#BLUE - in progress" & NEWLINE
x = x & "#GREEN - done, ok" & NEWLINE
x = x & "#RED - major issue" & NEWLINE
x = x & "#AMBER - minor issue" & NEWLINE
x = x & vbCrLf & "<p/>"
########## DATA LOOP ######################################################
Dim xarray(200, 200)
rows are created by sort by project + work-stream, then for each change in add another row1,2,3,4,5
columns are 1 to 12, or more for each period
data is the composite of all the fields, or elements of them
r = 1
c = 1
xdata = ""
xfieldstoshow = ",3,4,5,6,"
xfieldstoshow = ",4,"
For z = 2 To 430
        If Len(Cells(z, 1).Value & Cells(z, 2).Value) < 2 Then Exit For
                
                
                
                
                'determine row
                If Cells(z, 1).Value & Cells(z, 2).Value <> xprevious Then
                        r = r + 1
                        xprevious = Cells(z, 1).Value & Cells(z, 2).Value
                        
                End If
                
                'determine column
                c = extractnumbers(Cells(z, 6).Value) + 1 ' get the week no and remember that tis starts with weekno0 so colyumn should be +1 to put in colum 1
                
                'determine data
                
                
                '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                xshorttext = "<li>" & Cells(z, 3).Value
                hovertext = "<B>" & Range("C" & z).Value & "</B><P/>" ' TITLE BAR FOR POST-IT NOTE
                tarr = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
                For t = LBound(tarr) To UBound(tarr)
                        Xcol = Val(tarr(t))
                        hovertext = hovertext & "<br/><b>" & UCase(Cells(1, Xcol).Value) & ":</b>" & Cells(z, Xcol).Value & "; "
                        Next
                        xdata = hover_data(xshorttext, hovertext)
                        xdata = hover_data_color(xshorttext, hovertext, Range("i" & z).Value)
                        '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                        
                        xarray(r, 0) = Cells(z, 1).Value & " " & (Cells(z, 2).Value) ' this data is in col 0 and is the project/workstream
                        xarray(r, c) = xarray(r, c) & "" & xdata ' this is the data,one line per item in the box
                        
                        
                        
                        Next
                        
                        
                        
                        
                        ######### PLACE DATA #####################################################################
                        start_of_periods = 1
                        xnumber_of_periods = 15
                        xmaxrows = r
                        
                        x = x & "<TABLE BORDER>"
                        ---- headings at top -------------
                        x = x & "<tr style='background-color: black; color: white;'>"
                        For q = 1 To xnumber_of_periods + 1
                                x = x & "<td width=250> Period" & q - 2 & "</td>"
                        Next q
                        x = x & "</tr>"
                        
                        ---- headings at top -------------
                        
                        For r = 1 To xmaxrows
                                
                                If InStr(1, xarray(r, 0), "Sky") Then
                                        x = x & "<tr style='background-color: #E6DBFF;'>" ' color rows according to project
                                        ElseIf InStr(1, xarray(r, 0), "Logan") Then
                                        x = x & "<tr style='background-color: #DBEADC;'>" ' color rows according to project
                                        ElseIf InStr(1, xarray(r, 0), "Green") Then
                                        x = x & "<tr style='background-color: #CAFFD8;'>" ' color rows according to project
                                        Else
                                        x = x & "<tr>"
                                End If
                                For c = 0 To xnumber_of_periods
                                        
                                        xdata = xarray(r, c)
                                        x = x & "<td valign=top>" & xdata & "</td>"
                                Next c
                                x = x & "</tr>"
                        Next r
                        
                        
                        x = x & "</TABLE>"
                        
                        
                        
                        x = x & xfooternotes
                        ############  END AND WRITE #############################################################################
                        fname = ActiveWorkbook.Path & "\ACQUISITIONS_PROJECTS.HTML"
                        Call PRINT_INFO(x, fname)
                        ReturnValue = Shell("EXPLORER.EXE " & fname, 1)  ' Run Calculator.
                        
                        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function ASCII2HTML(x)
If Not IsNull(x) Then
        x = Replace(x, vbCrLf, "<BR>")
        Else
        x = " "
End If
ASCII2HTML = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function hover_postit()
x = x & vbCrLf & "#DivForHoverItem {"
x = x & vbCrLf & "    /*just so we can see it*/"
x = x & vbCrLf & "    height: 1px;"
x = x & vbCrLf & "    width: 1px;"
x = x & vbCrLf & "    background-color: red;"
x = x & vbCrLf & "}"
x = x & vbCrLf & ""
x = x & vbCrLf & "#HiddenText {"
x = x & vbCrLf & "    display: none;"
x = x & vbCrLf & "    z-index: 1;"
x = x & vbCrLf & "    position: absolute;"
x = x & vbCrLf & "    width: 100%;"
x = x & vbCrLf & "}"
x = x & vbCrLf & ""
x = x & vbCrLf & "#DivForHoverItem:hover #HiddenText {"
x = x & vbCrLf & "    display:block;"
x = x & vbCrLf & "    display:inline;"
x = x & vbCrLf & "    background-color: yellow;"
x = x & vbCrLf & "    background-color: black;"
x = x & vbCrLf & "    color: black;"
x = x & vbCrLf & "    position: absolute;"
x = x & vbCrLf & "    position: relative;"
x = x & vbCrLf & "    width: 250;"
x = x & vbCrLf & "    margin: 20;"
x = x & vbCrLf & "    height: 250;"
x = x & vbCrLf & "    z-index: 100;"
x = x & vbCrLf & "}"
hover_postit = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function hover_data(xshorttext, hovertext)
x = "<div id='DivForHoverItem'>" & xshorttext & "</span>" & "<div id='HiddenText'>" & hovertext & "</div></div>"
hover_data = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function hover_data_color(xshorttext, hovertext, xcolor)
x = "<div id='DivForHoverItem'>" & xshorttext & "</span>" & "<div id='HiddenText'>" & hovertext & "</div></div>"
XSUBJECT = xshorttext
XSUBJECT = Replace(XSUBJECT, " ", "")
XSUBJECT = Replace(XSUBJECT, "<li>", "")
XSUBJECT = Replace(XSUBJECT, ">", "_")
CLICKTEXT = "<A HREF=MAILTO:TIM.XZXZXZ@XZXZXZ.CLOUD?SUBJECT=" & XSUBJECT & ">[Feedback]</A>"
If InStr(1, UCase(xcolor), "#AMBER") Then x = "<div id='DivForHoverItem' style='background-color: orange;'>" & xshorttext & "</span>" & "<div id='HiddenText'>" & hovertext & "</div>" & CLICKTEXT & "</div>"
        If InStr(1, UCase(xcolor), "#BLUE") Then x = "<div id='DivForHoverItem' style='background-color: CYAN;'>" & xshorttext & "</span>" & "<div id='HiddenText'>" & hovertext & "</div>" & CLICKTEXT & "</div>"
                If InStr(1, UCase(xcolor), "#RED") Then x = "<div id='DivForHoverItem' style='background-color: RED;'>" & xshorttext & "</span>" & "<div id='HiddenText'>" & hovertext & "</div>" & CLICKTEXT & "</div>"
                        If InStr(1, UCase(xcolor), "#GREY") Then x = "<div id='DivForHoverItem' style='background-color: SILVER;'>" & xshorttext & "</span>" & "<div id='HiddenText'>" & hovertext & "</div>" & CLICKTEXT & "</div>"
                                If InStr(1, UCase(xcolor), "#GREEN") Then x = "<div id='DivForHoverItem' style='background-color: GREEN;'>" & xshorttext & "</span>" & "<div id='HiddenText'>" & hovertext & "</div>" & CLICKTEXT & "</div>"
                                        'If InStr(1, UCase(xcolor), "#AMBER") Then x = "<div id='DivForHoverItem' style='background-color: orange;'>" & xshorttext & "</span>" & "<div id='HiddenText'>" & hovertext & "</div></div>"
                                        
                                        
                                        'ADD A CLICKABLE
                                        
                                        
                                        
                                        hover_data_color = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function extracttext(x)
For q = 0 To 9
        x = Replace(x, q, "")
Next q
extracttext = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function extractnumbers(x)
For l = 1 To Len(x)
        char = Mid(x, l, 1)
        If InStr(1, "0123456789", char) Then
                ans = ans & char
        End If
        
Next l
extractnumbers = ans
End Function
Attribute VB_Name = "update_fornext_peiod"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub temp01()
For r = 2 To 500
        If Range("b" & r).Value = "1Theme" Then
                
                If Range("a" & r).Value = "Greenhouse" Then
                        
                        Range("e" & r).Value = "Ian Goddard"
                End If
                '###############################
                
                If Range("a" & r).Value = "Logan" Then
                        
                        Range("e" & r).Value = "Ian Clarke/Julian Box"
                End If
                
        End If
        
        
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xxx2()
For r = 2 To 500
        If Range("b" & r).Value = "Theme" Then
                Range("b" & r).Value = "1Theme"
                
        End If
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub update_period()
For r = 2 To 500
        
        If Range("a" & r).Value = "Sky" Then
                Range("f" & r).Value = "Period" & Format(extractnumbers(Range("g" & r).Value) + 3, "00")
        End If
        
        If Range("a" & r).Value = "Greenhouse" Then
                Range("f" & r).Value = "Period" & Format(extractnumbers(Range("g" & r).Value) + 3, "00")
        End If
        
        If Range("a" & r).Value = "Logan" Then
                Range("f" & r).Value = "Period" & Format(extractnumbers(Range("g" & r).Value) + 2, "00")
        End If
        
        
        If Range("g" & r).Value = "WeekNo0" Then Range("f" & r).Value = "Period00"
                If Range("g" & r).Value = "WeekNo00" Then Range("f" & r).Value = "Period00"
                Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub later_tasks_note()
For r = 2 To 500
        
        If extractnumbers(Range("g" & r).Value) > 1 Then
                Range("I" & r).Value = "#GREY"
        End If
        
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub update_weekno()
For r = 2 To 500
        
        If InStr(1, Range("c" & r).Value, "hand-over") Then
                Range("g" & r).Value = "WeekNo12"
        End If
        
        
        
        
Next r
End Sub
Attribute VB_Name = "functions"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function whatrowami()
r = "TaskID" & Mid(Application.Caller.Address, 4, 999)
whatrowami = r
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function hipchat(x)
x = Trim(x)
x = Replace(x, ";", "")
x = Replace(x, " ", "")
x = Replace(x, "-", "")
hipchat = " @" & x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub highligt_ig()
Range("a2:z999").Interior.ColorIndex = xlNone
For r = 2 To 100
        
        If InStr(1, Cells(r, 3).Value, "IG") Then
                Rows(r).Interior.ColorIndex = 36
        End If
        
        If InStr(1, Cells(r, 3).Value, "SL") Then
                Rows(r).Interior.ColorIndex = 35
        End If
        Debug.Print Cells(r, 4).Value
        
        
        If InStr(1, "_done_duplicate_", "_" & Cells(r, 4).Value & "_") Then
                Rows(r).Interior.ColorIndex = 15
        End If
        
        
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub A1_picklisthip()
For r = 1 To 99
        If UCase(Cells(r, 1).Value) = "X" Then x = x & Cells(r, 4).Value & " "
        Next r
        
        For r = 1 To 3
                z = z & Cells(r, 5).Value & " "
        Next r
        
        x = z & x
        
        x = InputBox(x, x, x)
        fname = ActiveWorkbook.Path & "\5768.txt"
        Call PRINT_INFO(x, fname)
End Sub
Attribute VB_Name = "comments"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comment_add()
On Error Resume Next
For r = 1 To 500
        xtext = Worksheets(1).Range("j" & r).Value
        If Len(xtext) < 1 Then xtext = "...."
                Worksheets(1).Range("j" & r).AddComment xtext
                
        Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comment_append()
On Error Resume Next
https://www.excelforum.com/excel-programming-vba-macros/482060-how-to-add-text-to-a-comment-in-vba.html
xline = "================================"
xdate = Format(Now, "ddd dd/mmm")
For r = 2 To 500
        xtext = Worksheets(1).Range("j" & r).Value
        oldtext = Worksheets(1).Range("j" & r).Comment.Text
        If InStr(1, oldtext, xtext) Then
                skip - already got this text
                Else
                Worksheets(1).Range("j" & r).Comment.Text Text:=xdate & vbCrLf & xtext & vbCrLf & xline & vbCrLf & oldtext
                
                
        End If
        
        
        Debug.Print oldtext
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub these_comment_append()
On Error Resume Next
https://www.excelforum.com/excel-programming-vba-macros/482060-how-to-add-text-to-a-comment-in-vba.html
xline = "==="
xdate = Format(Now, "ddd dd/mmm")
For Each xcell In Selection
        r = Mid(xcell.Address, 4, 999) ' rowno
        Debug.Print r
        xtext = Worksheets(1).Range("j" & r).Value
        oldtext = Worksheets(1).Range("j" & r).Comment.Text
        If InStr(1, oldtext, xtext) Then
                skip - already got this text
                Else
                Worksheets(1).Range("j" & r).Comment.Text Text:=xdate & vbCrLf & xtext & vbCrLf & xline & vbCrLf & oldtext
                
                
        End If
        
        
        Debug.Print oldtext
Next xcell
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub comment_zap()
On Error Resume Next
For r = 1 To 500
        
        Worksheets(1).Range("j" & r).Comment.Delete
        
Next r
End Sub
Attribute VB_Name = "validationx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub validation01()
For r = 1 To 500
        
        
        x = Range("b" & r).Value
        If InStr(1, xtext, x) Then
                skip
                Else
                xtext = xtext & ",#" & x
        End If
        
        
Next r
Debug.Print xtext
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub test3()
Call validation03(2, "d")
Call validation03(2, "b")
Call validation03(2, "h")
Call validation03(2, "i")
Call validation03(2, "k")
Call validation03(2, "l")
Call validation03(2, "n")
Call validation03(2, "q")
Call validation03(2, "r")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Test()
Call validation02("a:a", "a")
Call validation02("g:g", "g")
Call validation02("i:i", "i")
Call validation02("e:e", "e")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub valid_zap()
Columns("e").Validation.Delete
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub validation03(ws, xcolumn_letter)
xrange = "g:g"
char = "g"
xtext = ""
For r = 2 To 500
        
        
        x = Range(xcolumn_letter & r).Value
        If InStr(1, xtext, x) Then
                skip
                Else
                xtext = xtext & "," & x
        End If
        
        
Next r
Debug.Print xtext
Columns(xcolumn_letter).Validation.Delete
xtext = Worksheets("validation").Range("a1:a999")
With Worksheets(ws).Columns(xcolumn_letter).Validation
.Delete
.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=xtext
.IgnoreBlank = True
.InCellDropdown = True
.InputTitle = ""
.ErrorTitle = ""
.InputMessage = ""
.ErrorMessage = ""
.ShowInput = True
.ShowError = True
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xvalid()
Macro1 Macro
Worksheets("time").Columns("E:E").Select
With Selection.Validation
.Delete
.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
xlBetween, Formula1:="=validation!$A:$A"
.IgnoreBlank = True
.InCellDropdown = True
.InputTitle = ""
.ErrorTitle = ""
.InputMessage = ""
.ErrorMessage = ""
.ShowInput = True
.ShowError = True
End With
End Sub
Attribute VB_Name = "Sheet_SaveAs"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Sheet_SaveAs()
Dim wb As Workbook
x = ActiveSheet.Name
Sheets(x).Copy
Set wb = ActiveWorkbook
x = ThisWorkbook.Path & "\temp2"
With wb
.SaveAs x 'ThisWorkbook.Path & "\temp" & Format(Date, "yyyymmdd")
.Close False
End With
x = x & ".xlsx"
x = InputBox(x, x, x)
End Sub
Attribute VB_Name = "Module1"
Attribute VB_Name = "killerxx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub killer_copy()
Set ws1 = ThisWorkbook.Worksheets("dates_list")
ws1.Copy ThisWorkbook.Worksheets("dates_list")
Sheets("dates_list").Select
Range("A1:z999").Select
Range("A1:z999").Copy
Sheets("killer").Select
Find the last row of data
Range("A1:z999").Select
ActiveSheet.Paste
Sheets("killer").Select
For r = 1000 To 2 Step -1
        If Cells(r, 1).Value < Now Then
                Rows(r).Delete
        End If
        
        
        If Cells(r, 1).Value > DateAdd("d", 28, Now) Then
                Rows(r).Delete
        End If
        
        
Next r
End Sub
Attribute VB_Name = "set_periodxx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub set_period()
For r = 2 To 500
        If Len(Range("a" & r).Value) < 1 Then Exit For
                xx = extractnumbers(Range("g" & r).Value)
                xstart = #8/24/2017#
                
                If InStr(1, Range("a" & r).Value, "Green") Then xstart = #8/24/2017#
                        
                        If InStr(1, Range("a" & r).Value, "Log") Then xstart = #9/1/2017#
                                If InStr(1, Range("a" & r).Value, "Sk") Then xstart = #9/1/2017#
                                        
                                        
                                        Range("f" & r).Value = DateAdd("d", 7 * xx, xstart)
                                        
                                        Debug.Print xx
                                Next r
End Sub
Attribute VB_Name = "save_sheet_4milex"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub save_sheet_toemail()
fname = ActiveWorkbook.Path & "\Latest_" & ActiveSheet.Name
fname2 = "C:\Users\Tim\ownCloud\Documents\XZXZXZPMO" & "\Latest_" & ActiveSheet.Name
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sb_Copy_Save_ActiveSheet_As_Workbook()
Set wb = Workbooks.Add
ThisWorkbook.Activate
ActiveSheet.Copy Before:=wb.Sheets(1)
wb.Activate
wb.SaveAs fname
wb.SaveAs fname2
End Sub
Attribute VB_Name = "Module2"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Button1_Click()
ws = "meetings and tasks"
xrange = ("A1:E99")
sort1 = "D2:D29"
sort2 = "A2:A29"
Cells.Select
ActiveWorkbook.Worksheets(ws).Sort.SortFields.Clear
ActiveWorkbook.Worksheets(ws).Sort.SortFields.Add Key:= _
Range(sort1), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
xlSortNormal
ActiveWorkbook.Worksheets(ws).Sort.SortFields.Add Key:= _
Range(sort2), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
xlSortNormal
With ActiveWorkbook.Worksheets(ws).Sort
.SetRange Range(xrange)
.Header = xlYes
.MatchCase = False
.Orientation = xlTopToBottom
.SortMethod = xlPinYin
.Apply
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Button2_Click()
ws = "meetings and tasks"
xrange = ("A1:E99")
sort1 = "D2:D29"
sort2 = "A2:A29"
sort2 = "D2:D29"
sort1 = "A2:A29"
Cells.Select
ActiveWorkbook.Worksheets(ws).Sort.SortFields.Clear
ActiveWorkbook.Worksheets(ws).Sort.SortFields.Add Key:= _
Range(sort1), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
xlSortNormal
ActiveWorkbook.Worksheets(ws).Sort.SortFields.Add Key:= _
Range(sort2), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
xlSortNormal
With ActiveWorkbook.Worksheets(ws).Sort
.SetRange Range(xrange)
.Header = xlYes
.MatchCase = False
.Orientation = xlTopToBottom
.SortMethod = xlPinYin
.Apply
End With
End Sub
Attribute VB_Name = "Module1"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub d()
End Sub
Attribute VB_Name = "import_wrd_exl"
Option Explicit
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ImportWordTable()
Dim wdDoc As Object
Dim wdFileName As Variant
Dim tableNo As Integer 'table number in Word
Dim iRow As Long 'row index in Excel
Dim iCol As Integer 'column index in Excel
Dim resultRow As Long
Dim tableStart As Integer
Dim tableTot As Integer
On Error Resume Next
ActiveSheet.Range("A:AZ").ClearContents
wdFileName = Application.GetOpenFilename("Word files (*.doc),*.doc", , _
"Browse for file containing table to be imported")
If wdFileName = False Then Exit Sub '(user cancelled import file browser)
        
        Set wdDoc = GetObject(wdFileName) 'open Word file
        
        With wdDoc
        tableNo = wdDoc.tables.Count
        tableTot = wdDoc.tables.Count
        If tableNo = 0 Then
                MsgBox "This document contains no tables", _
                vbExclamation, "Import Word Table"
                ElseIf tableNo > 1 Then
                tableNo = InputBox("This Word document contains " & tableNo & " tables." & vbCrLf & _
                "Enter the table to start from", "Import Word Table", "1")
        End If
        
        resultRow = 4 ' start results from row 4
        
        For tableStart = 1 To tableTot
                With .tables(tableStart)
                'copy cell contents from Word table cells to Excel cells
                For iRow = 1 To .Rows.Count
                        For iCol = 1 To .Columns.Count
                                Cells(resultRow, iCol) = WorksheetFunction.Clean(.cell(iRow, iCol).Range.Text)
                        Next iCol
                        resultRow = resultRow + 1
                Next iRow
                End With
                resultRow = resultRow + 1
        Next tableStart
        End With
        
End Sub
Attribute VB_Name = "MAKEWEB"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub MAKEWEB()
ws = ActiveSheet.Name
x = getimage(ws)
ws = Replace(ws, " ", "")
fname = ActiveWorkbook.Path & "\zzhtml" & ws & ".html"
Call PRINT_INFO(x, fname)
Shell ("explorer.exe " & fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub MAKEWEB_form()
ws = ActiveSheet.Name
ws = "FORM"
x = getimage("html")
x = x & getimage("script")
x = x & getimage("svg")
x = x & getimage("toppage")
x = x & getimage(ws)
x = x & getimage("footer")
pagename = ws
pagename = Replace(pagename, " ", "")
pagename = Replace(pagename, "/", "")
pagename = Replace(pagename, "\", "")
fname = LCase(ActiveWorkbook.Path & "\" & pagename & ".html")
Call PRINT_INFO(x, fname)
Shell ("explorer.exe " & fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub MAKEWEB_multi()
For Z = 1 To Worksheets.Count
        Worksheets(Z).Activate
        
        ws = ActiveSheet.Name
        If ws = "Admin" Then Exit For
                
                x = getimage("html")
                'x = x & getimage("svg")
                x = x & getimage("menu")
                x = x & getimage(ws)
                x = x & getimage("footer")
                
                pagename = ws
                pagename = Replace(pagename, " ", "")
                pagename = Replace(pagename, "/", "")
                pagename = Replace(pagename, "\", "")
                
                fname = LCase(ActiveWorkbook.Path & "\" & pagename & ".html")
                Call PRINT_INFO(x, fname)
                'Shell ("explorer.exe " & fname)
                
                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function getimage(ws)
For r = 1 To 900
        For c = 1 To 20
                x = x & " " & (Worksheets(ws).Cells(r, c).Value)
                Worksheets(ws).Cells(r, c).Interior.ColorIndex = 15
        Next c
Next r
getimage = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
ReturnValue = Shell("C:\Program Files\Mozilla Firefox\firefox.exe " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
Attribute VB_Name = "xlayoutx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xlayout()
Attribute xlayout.VB_ProcData.VB_Invoke_Func = " \n14"
Macro1 Macro
For w = 1 To Worksheets.Count
        Worksheets(w).Activate
        
        
        Cells.Select
        With Selection.Font
        .Name = "Calibri"
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
        End With
        With Selection.Font
        .Name = "Calibri"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
        End With
        Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
        End With
        With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
        End With
        With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
        End With
        With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
        End With
        With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
        End With
        With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
        End With
        Cells.Select
        Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        Selection.Borders(xlEdgeLeft).LineStyle = xlNone
        Selection.Borders(xlEdgeTop).LineStyle = xlNone
        Selection.Borders(xlEdgeBottom).LineStyle = xlNone
        Selection.Borders(xlEdgeRight).LineStyle = xlNone
        Selection.Borders(xlInsideVertical).LineStyle = xlNone
        Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
        With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
        End With
        
Next w
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ascii()
For a = 1 To 255
        Debug.Print Chr(a)
Next a
End Sub
Attribute VB_Name = "email"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xemail()
xbody = ActiveCell.Value
Set myOlApp = CreateObject("Outlook.Application")
Set newitem = myOlApp.CreateItem(MailItem)
newitem.To = xto
newitem.CC = xcc
newitem.BCC = "tim@tedxsthelier.com"
newitem.ReplyRecipients.Add "tim@tedxsthelier.com"
newitem.SenderName = "tim@tedxsthelier.com"
newitem.Subject = xsubject
newitem.SentOnBehalfOfName = "tim@tedxsthelier.com"
newitem.BodyFormat = olFormatRichText
newitem.Body = xbody
.BodyFormat = olFormatHTML
.HTMLBody = "<HTML><H2>The body of this message will appear in HTML.</H2><BODY>Type the message text here. </BODY></HTML>"
newitem.BillingInformation = "t.XZXZXZ@gov.je"
newitem.Attachments.Add = xattachment
newitem.Display
newitem.Send
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub email_send_mail()
r = ActiveCell.row
xto = Range("b" & r).Value
xcc = "XZXZXZ@XZXZXZ.com"
xsubject = Range("a" & r).Value & " - " & Range("d" & r).Value
Call excel_email2(xto, xcc, xsubject, xbody, xattachment)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function excel_email2(xto, xcc, xsubject, xbody, xattachment)
Set myOlApp = CreateObject("Outlook.Application")
Set newitem = myOlApp.CreateItem(MailItem)
newitem.To = xto
newitem.CC = xcc
newitem.BCC = "tim@tedxsthelier.com"
newitem.ReplyRecipients.Add "tim@tedxsthelier.com"
newitem.SenderName = "tim@tedxsthelier.com"
newitem.Subject = xsubject
newitem.SentOnBehalfOfName = "XZXZXZ@XZXZXZ.com"
newitem.BodyFormat = olFormatRichText
newitem.BodyFormat = olFormatPlain
newitem.Body = xbody
.BodyFormat = olFormatHTML
.HTMLBody = "<HTML><H2>The body of this message will appear in HTML.</H2><BODY>Type the message text here. </BODY></HTML>"
newitem.BillingInformation = "t.XZXZXZ@gov.je"
##################################
If Len(xattachment) > 1 Then
        newitem.Attachments.Add = xattachment
        Set myAttachments = newitem.Attachments
        myAttachments.Add xattachment, olByValue, 1, "Test"
        array_attachements = Split(xattachment, ",")
        For q = LBound(array_attachements) To UBound(array_attachements)
                fname = Trim(array_attachements(q))
                fname = Replace(fname, Chr(10), "")
                Debug.Print fname,
                For char = 1 To Len(fname)
                        Debug.Print Mid(fname, char, 1), Asc(Mid(fname, char, 1))
                        Next
                        myAttachments.Add fname, olByValue, 1, "Attachment" & q
                Next q
        End If
        ##################################
        
        newitem.Display
        newitem.Send
        
        
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function get_info_fileio(ByVal xfilename As String) As String
vba fileio text2html dirr
http://www.eggheadcafe.com/articles/20030627b.asp
Debug.Print vbCrLf & xfilename
Const ForReading = 1
Const ForWriting = 2
Const ForAppending = 8
Const TristateUseDefault = -2
Const TristateTrue = -1
Const TristateFalse = 0
Dim oFS
Dim oFile
Dim oStream
Dim xtext As String
Set oFS = Server.CreateObject("Scripting.FileSystemObject")
Set oFS = CreateObject("Scripting.FileSystemObject")
Set oFile = oFS.GetFile(xfilename)
Set oStream = oFile.OpenAsTextStream(ForReading, TristateUseDefault)
Do While Not oStream.AtEndOfStream
        srecord = oStream.ReadLine
        xtext = xtext & vbCrLf & srecord
        'Response.Write sRecord
        Loop
        oStream.Close
        get_info_fileio = xtext
End Function
Attribute VB_Name = "normal"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_saveas()
xpath = ActiveWorkbook.Path & "\"
xdate = Format(Now, "yyyymmdd hhmm")
xname = xpath & ActiveWorkbook.Name
xname2 = Replace(xname, ".xls", "_" & xdate & ".xls")
ActiveWorkbook.SaveAs Filename:= _
xname2, FileFormat:= _
xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
ActiveWorkbook.SaveAs Filename:= _
xname, FileFormat:= _
xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
x = xpath
Debug.Print x
x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub export_modules()
Dim objMyProj As VBProject
Dim objVBComp As VBComponent
Set objMyProj = Application.VBE.ActiveVBProject
For Each objVBComp In objMyProj.VBComponents
        If objVBComp.Type = vbext_ct_StdModule Then
                
                
                xprefix = ActiveWorkbook.Path & "\vba_source"
                objVBComp.Export xprefix & objVBComp.Name & ".bas"
                xprefix = "V:\Data2017\VBA\VBAExcel\vba_src_"
                objVBComp.Export xprefix & objVBComp.Name & ".bas"
                
        End If
        Next
        Shell ("explorer.exe " & ActiveWorkbook.Path & "\")
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, I
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
Attribute VB_Name = "PDFemailer"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub makepdf()
For Z = 1 To 4
        
        Worksheets(Z).Activate
        Range("a:z").Columns.ColumnWidth = 15
        Range("b:b").Columns.ColumnWidth = 53
        ActiveSheet.PageSetup.PrintArea = ""
        ActiveSheet.PageSetup.PrintArea = "a1:D44"
        
        If Len(Range("b49").Value) > 1 Then
                if there is text that justifies a continuation page then do it
                        ActiveSheet.PageSetup.PrintArea = "a1:D88"
                End If
                
                xdate = Format(Now, "yyyy-mmm-dd")
                xpath = ActiveWorkbook.Path & "\"
                tabname = ActiveSheet.Name
                fullpathname = xpath & "INVOICE_" & tabname & ".pdf"
                ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, Filename:= _
                fullpathname, Quality:=xlQualityStandard, _
                IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:= _
                False
                
                
        Next Z
        ReturnValue = Shell("explorer.EXE " & xpath, 1)  ' Run Calculator.
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub makepdf_and_send_it()
For Z = 1 To 4 ' for each tab (or record if using access)
        
        
        
        
        Worksheets(Z).Activate
        Range("a:z").Columns.ColumnWidth = 15
        Range("b:b").Columns.ColumnWidth = 53
        
        If Len(Range("b49").Value) > 1 Then
                if there is text that justifies a continuation page then do it
                        ActiveSheet.PageSetup.PrintArea = "a1:D44"
                        Else
                        if there is NOT text that justifies a continuation DONT
                                ActiveSheet.PageSetup.PrintArea = "a1:D88"
                        End If
                        
                        
                        xdate = Format(Now, "yyyy-mmm-dd")
                        xpath = ActiveWorkbook.Path & "\"
                        tabname = ActiveSheet.Name
                        fullpathname = xpath & "INVOICE " & tabname & ".pdf"
                        ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, Filename:= _
                        fullpathname, Quality:=xlQualityStandard, _
                        IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:= _
                        False
                        
                        ''#########################################
                        
                        
                        xto = Range("b2").Value
                        xcc = "julianhjXZXZXZ@XZXZXZ.com"
                        xsubject = "Invoice for " & Range("b1").Value & " " & Date
                        xbody = "Invoice for " & Range("b1").Value & " " & Date
                        xattachment = fullpathname '& ".pdf" '' add the suffix!
                        Call excel_email(xto, xcc, xsubject, xbody, xattachment)
                        
                        
                        
                        
                        
                Next Z
                
                
End Sub
Attribute VB_Name = "CONDITIONALFORMATTING"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub setcond01()
xrange = "C5:AG999"
xsheet = "DATAMAPPING"
Worksheets(xsheet).Range(xrange).FormatConditions.Delete
Call cond(xsheet, xrange, "Y", 1, 43)
Call cond(xsheet, xrange, "N", 2, 3)
Call cond(xsheet, xrange, "A", 3, 44)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub setcond_epid()
xrange = "c2:c999"
xsheet = 2
Worksheets(xsheet).Range(xrange).FormatConditions.Delete
Call cond(xsheet, xrange, "#GREEN", 1, 43)
Call cond(xsheet, xrange, "#LOW", 2, 43)
Call cond(xsheet, xrange, "#RED", 3, 3)
Call cond(xsheet, xrange, "#HIGH", 4, 3)
Call cond(xsheet, xrange, "#AMBER", 5, 44)
Call cond(xsheet, xrange, "#MEDIUM", 6, 44)
Call cond(xsheet, xrange, "#BLUE", 7, 37)
Call cond(xsheet, xrange, "#GREY", 8, 15)
Call cond(xsheet, xrange, "Greenhouse", 1, 36)
Call cond(xsheet, xrange, "Sky", 2, 37)
Call cond(xsheet, xrange, "Logan", 3, 38)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub setcond()
xrange = "i2:i999"
xsheet = 1
Worksheets(xsheet).Range(xrange).FormatConditions.Delete
Call cond(xsheet, xrange, "#GREEN", 1, 43)
Call cond(xsheet, xrange, "#RED", 2, 3)
Call cond(xsheet, xrange, "#AMBER", 3, 44)
Call cond(xsheet, xrange, "#BLUE", 4, 37)
Call cond(xsheet, xrange, "#GREY", 5, 15)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function cond(xsheet, xrange, xstring, cond_no, cond_color)
 Worksheets(3).Range("A:z").FormatConditions.Delete
With Worksheets(xsheet).Range(xrange)
.FormatConditions.Add Type:=UCase(xlTextString), String:=xstring, TextOperator:=xlContains
.FormatConditions(cond_no).Interior.ColorIndex = cond_color
End With
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub RAINBOW()
For r = 1 To 100
        Cells(r, 1).Interior.ColorIndex = r
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub setvalidation()
Cells.Validation.Delete
Xlist = UCase("email,newsletter,one-to-one,team-briefing,town-hall,phone,other")
Call xvalidation("D5:D999", Xlist)
Xlist = UCase("D-dominat driven (results), I-influence (enthusiasm), C-cautious careful (accuracy), S-steady stable (support) ")
Call xvalidation("e5:e999", Xlist)
Xlist = x
Xlist = UCase("1.Delighted, 2.Happy, 3.Neutral, 4.Sad, 5.Angry")
Call xvalidation("g5:g999", Xlist)
Xlist = UCase("1.Evangelical, 2.For, 3.Neutral, 4.Against, 5.Anti")
Call xvalidation("h5:h999", Xlist)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function xvalidation(Xcol, Xlist)
With Range(Xcol).Validation
.Delete
.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
xlBetween, Formula1:=Xlist
.IgnoreBlank = True
.InCellDropdown = True
.InputTitle = ""
.ErrorTitle = ""
.InputMessage = ""
.ErrorMessage = ""
.ShowInput = True
.ShowError = True
End With
End Function
Attribute VB_Name = "data_mappex"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub data_mapper()
Z = 5
For r = 2 To 199
        s1 = Worksheets(1).Cells(r, 1).Value
        If Len(s1) < 1 Then Exit For
                
                For q = 2 To 199
                        s2 = Worksheets(2).Cells(q, 1).Value
                        If Len(s2) < 1 Then Exit For
                                
                                t = 3
                                Z = Z + 1
                                Worksheets(t).Cells(Z, 1).Value = s1
                                Worksheets(t).Cells(Z, 2).Value = s2
                                
                        Next q
                        
                        
                        
                Next r
                
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub rotate()
S = "data"
Worksheets(S).Activate
For r = 1 To 100
        For c = 1 To 100
                Cells(r + 100, c).Value = "[" & Cells(c, r).Value & "]"
        Next c
Next r
End Sub
Attribute VB_Name = "excel_emailer"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function excel_email(xto, xcc, xsubject, xbody, xattachment)
Set myOlApp = CreateObject("Outlook.Application")
Set newItem = myOlApp.CreateItem(MailItem)
newItem.To = xto
newItem.CC = xcc
newItem.Subject = xsubject
newitem.SentOnBehalfOfName = "???????????"
newitem.BodyFormat = olFormatRichText
newitem.BodyFormat = olFormatPlain
newItem.Body = xbody
.BodyFormat = olFormatHTML
.HTMLBody = "<HTML><H2>The body of this message will appear in HTML.</H2><BODY>Type the message text here. </BODY></HTML>"
If Len(xattachment) > 1 Then
        
        newItem.Attachments.Add xattachment, olByValue, 1, xattachment
        
        
        ''#########################################
        '' this part creates the pdf
        ''#########################################
        'Set myAttachments = newItem.Attachments
        'myAttachments.Add xattachment, olByValue, 1, "Test"
        'array_attachements = Split(xattachment, ",")
        'For q = LBound(array_attachements) To UBound(array_attachements)
        'fname = Trim(array_attachements(q))
        'fname = Replace(fname, Chr(10), "")
        'myAttachments.Add fname, olByValue, 1, "Attachment" & q
        'Next q
        
End If
newItem.Display
newitem.Send
End Function
Attribute VB_Name = "BIGfile_GIT_export"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub step1_getfilelist()
Worksheets(1).Cells.Clear
Dim MyObj As Object, MySource As Object, file As Variant
xpath = ActiveWorkbook.Path & "\"
file = Dir("H:\XZXZXZD_ReOrg\VBA\Word\")
file = Dir(xpath)
While (file <> "")
        If InStr(file, ".bas") > 0 Then
                '   MsgBox "found " & file
                '   Exit Sub
                r = r + 1
                Worksheets(1).Cells(r, 1).Value = file
        End If
        
        file = Dir
        Wend
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub step2_readin_each_oneBIG_file()
Worksheets(2).Cells.Clear
Dim fileName As String, textData As String, textRow As String, fileNo As Integer
xpath = ActiveWorkbook.Path & "\"
fileName = "H:\XZXZXZD_ReOrg\VBA\Word\XZXZXZd_word_tr_newstylex20160316-.txt"
For r = 1 To 1000
        
        fileName = Worksheets(1).Cells(r, 1).Value
        If Len(fileName) < 1 Then Exit For
                
                fileNo = FreeFile 'Get first free file number
                Open xpath & fileName For Input As #fileNo
                Do While Not EOF(fileNo)
                        Line Input #fileNo, textRow
                        textData = textData & textRow
                        q = q + 1
                        Worksheets(2).Cells(q, 1).Value = textRow
                        Loop
                        Close #fileNo
                        
                        
                Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub step3_santiize_for_public()
Worksheets(3).Cells.Clear
xyourvariablex = "XZXZXZ"
For r = 1 To 30000
        x = Worksheets(2).Cells(r, 1).Value
        
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        
        If Left(x, 1) = "'" Then x = "" 'BLANK OUT LINE BEGINING '=======
                If Left(x, 1) = "=" Then x = "" 'BLANK OUT LINE BEGINING '=======
                        If InStr(1, x, xyourvariablex) Then
                                Worksheets(3).Rows(r).Interior.ColorIndex = 6
                                Worksheets(3).Cells(r, 2).Value = "x"
                        End If
                        
                        Worksheets(3).Cells(r, 1).Value = x
                        
                Next r
                MsgBox "done"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub step3b_beautify()
xindent = 0
previndex = 0
Worksheets(3).Activate
xindent_value = 8
For r = 1 To 30000
        x = Trim(Cells(r, 1).Value)
        
        
        
        If UCase(Left(x, 6)) = UCase("end if") Then xindent = xindent - xindent_value
                If UCase(Left(x, 5)) = UCase("wend ") Then xindent = xindent - xindent_value
                        If UCase(Left(x, 5)) = UCase("loop ") Then xindent = xindent - xindent_value
                                If UCase(Left(x, 5)) = UCase("next ") Then xindent = xindent - xindent_value
                                        
                                        ALWAYS default to zero at begining and end of sub and function
                                        If UCase(Left(x, 5)) = UCase("function ") Then xindent = 0
                                                If UCase(Left(x, 5)) = UCase("end f") Then xindent = 0
                                                        If UCase(Left(x, 4)) = UCase("sub ") Then xindent = 0
                                                                If UCase(Left(x, 5)) = UCase("end s") Then xindent = 0
                                                                        everything that removed a space happens BEFORE we print the line
                                                                        If xindent < 0 Then xindent = 0
                                                                                Cells(r, 1).Value = Space(xindent) & x
                                                                                everything adds a space happens AFTER we print the line
                                                                                
                                                                                If UCase(Left(x, 3)) = UCase("if ") Then xindent = xindent + xindent_value
                                                                                        If UCase(Left(x, 6)) = UCase("while ") Then xindent = xindent + xindent_value
                                                                                                If UCase(Left(x, 3)) = UCase("do ") Then xindent = xindent + xindent_value
                                                                                                        If UCase(Left(x, 4)) = UCase("for ") Then xindent = xindent + xindent_value
                                                                                                                
                                                                                                        Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub step4_ouptut_for_public()
xfilename = ActiveWorkbook.Path & "\vba_github_source.txt"
create the file
Dim FILENUMBER1 As Integer
FILENUMBER1 = FreeFile
Open xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, ""
Close #FILENUMBER1
append to file
Dim FILENUMBER2 As Integer
FILENUMBER2 = FreeFile
Open xfilename For Append As #FILENUMBER2 '
Worksheets(3).Activate
For r = 1 To 30000
        xline2append = Cells(r, 1).Value
        If Len(xline2append) > 0 Then
                Print #FILENUMBER2, xline2append
        End If
        
Next r
Close #FILENUMBER2
MsgBox "done"
Call open_file(xfilename)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(ByVal xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
ReturnValue = Shell("C:\Program Files\Mozilla Firefox\firefox.exe " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
Attribute VB_Name = "Module2"
Attribute VB_Name = "normal"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_saveas()
fname = ActiveWorkbook.Path & "\" & ActiveWorkbook.Name
xdate = Format(Now, "yyyymmdd")
bname = Replace(fname, ".xl", xdate & ".xl")
ActiveWorkbook.SaveAs fileName:= _
bname, FileFormat:= _
xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
ActiveWorkbook.SaveAs fileName:= _
fname, FileFormat:= _
xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_saveas_HMS()
fname = ActiveWorkbook.Path & "\" & ActiveWorkbook.Name
xdate = Format(Now, "yyyymmddHHMMSS")
bname = Replace(fname, ".xl", xdate & ".xl")
ActiveWorkbook.SaveAs fileName:= _
bname, FileFormat:= _
xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
ActiveWorkbook.SaveAs fileName:= _
fname, FileFormat:= _
xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_doit()
step1_getfilelist
MsgBox "s1"
step2_readin_each_oneBIG_file
MsgBox "s2"
step3_santiize_for_public
MsgBox "s3"
step4_ouptut_for_public
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub a1_forms()
CommentFrm1.Show
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub stripe()
For r = 700 To 2000
        Rows(r).Interior.ColorIndex = 43
        If r / 2 = Int(r / 2) Then
                Rows(r).Interior.ColorIndex = 0
        End If
        
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Make_html()
For r = 1 To 1000
        x = Range("b" & r).Value
        If Len(x) > 1 Then
                Application.CutCopyMode = False
                ActiveSheet.Hyperlinks.Add Anchor:=Range("b" & r), Address:=x, TextToDisplay:=x
                
        End If
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_val(x)
x = Replace(x, ",", "")
x = Replace(x, "m", "")
x = Val(x)
tr_val = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub A1_TEMP()
For r = 100 To 1 Step -1
        
        
        If Len(Cells(r, 1).Value) < 2 Then
                Rows(r).Delete
        End If
        
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function ExtractEmailAddress(ByVal s As String) As String
Dim AtSignLocation As Long
Dim i As Long
Dim TempStr As String
Const CharList As String = "[A-Za-z0-9._-]"
Get location of the @
AtSignLocation = InStr(s, "@")
If AtSignLocation = 0 Then
        ExtractEmailAddress = "" 'not found
        Else
        TempStr = ""
        'Get 1st half of email address
        For i = AtSignLocation - 1 To 1 Step -1
                If Mid(s, i, 1) Like CharList Then
                        TempStr = Mid(s, i, 1) & TempStr
                        Else
                        Exit For
                End If
        Next i
        If TempStr = "" Then Exit Function
                'get 2nd half
                TempStr = TempStr & "@"
                For i = AtSignLocation + 1 To Len(s)
                        If Mid(s, i, 1) Like CharList Then
                                TempStr = TempStr & Mid(s, i, 1)
                                Else
                                Exit For
                        End If
                Next i
        End If
        'Remove trailing period if it exists
        If Right(TempStr, 1) = "." Then TempStr = _
                Left(TempStr, Len(TempStr) - 1)
                ExtractEmailAddress = TempStr
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub GetEmailaddress()
#### not tested!
Dim lastrow As Long, i As Long
Dim ncol As Integer, spos As Integer
Dim n As Integer, n1 As Integer, n2 As Integer
Dim searchtxt As String
Dim email As String
With Worksheets("club")
lastrow = .Cells(Rows.Count, "A").End(xlUp).row
For i = 1 To lastrow
        searchtxt = .Range("A" & i)
        ncol = 2
        spos = 1
        Do
        n = InStr(spos, searchtxt, "@", vbTextCompare)
        If n <> 0 Then
                n1 = InStrRev(searchtxt, " ", n, vbTextCompare)
                n2 = InStr(n, searchtxt, " ", vbTextCompare)
                If n2 = 0 Then n2 = Len(searchtxt) + 1
                        email = Trim(Mid(searchtxt, n1, n2 - n1))
                        Cells(i, ncol) = email
                        ncol = ncol + 1
                        spos = n2
                End If
        Loop Until n = 0
Next i
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub select2line()
For Each xcell In Selection
        x = x & xcell.Value & "; "
        Next
        x = InputBox(x, x, x)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function tr_conc(xfrange)
For Each xc In xfrange
        xvalue = xc.Value
        If IsNumeric(xvalue) Then xvalue = Int(xvalue * 10) / 10
                If IsDate(xvalue) Then xvalue = Format(xvalue, "dd mmm ")
                        x = x & " " & xvalue
                        Next
                        tr_conc = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function twitter_conc(xfrange)
For Each xc In xfrange
        xvalue = xc.Value
        x = x & " " & xvalue
        Next
        twitter_conc = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub tr_con2notepad()
r = ActiveCell.row
c = ActiveCell.Column
For col = 1 To c
        x = x & Cells(r, col).Value & vbCrLf
        Next
        x = InputBox(x, x, x)
End Sub
Attribute VB_Name = "makewebx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub MAKEWEB()
ws = ActiveSheet.Name
x = getimage(ws)
ws = Replace(ws, " ", "")
fname = ActiveWorkbook.Path & "\zzhtml" & ws & ".html"
Call PRINT_INFO(x, fname)
Shell ("explorer.exe " & fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub MAKEWEB_TABLE()
Worksheets(1).Activate
ws = ActiveSheet.Name
xrows = 7
xcols = 6
x = getimage("html")
x = x & getimage("TOPPAGE")
x = x & gettable(ws, xrows, xcols)
ws = Replace(ws, " ", "")
fname = ActiveWorkbook.Path & "\zzhtml" & ws & ".html"
Call PRINT_INFO(x, fname)
Shell ("explorer.exe " & fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub MAKEWEB_form()
ws = ActiveSheet.Name
ws = "FORM"
x = getimage("html")
x = x & getimage("script")
x = x & getimage("svg")
x = x & getimage("toppage")
x = x & getimage(ws)
x = x & getimage("footer")
pagename = ws
pagename = Replace(pagename, " ", "")
pagename = Replace(pagename, "/", "")
pagename = Replace(pagename, "\", "")
fname = LCase(ActiveWorkbook.Path & "\" & pagename & ".html")
Call PRINT_INFO(x, fname)
Shell ("explorer.exe " & fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub MAKEWEB_multi()
For Z = 1 To Worksheets.Count
        Worksheets(Z).Activate
        
        ws = ActiveSheet.Name
        If ws = "Admin" Then Exit For
                
                x = getimage("html")
                x = x & getimage("svg")
                x = x & getimage("menu")
                x = x & getimage(ws)
                x = x & getimage("footer")
                
                pagename = ws
                pagename = Replace(pagename, " ", "")
                pagename = Replace(pagename, "/", "")
                pagename = Replace(pagename, "\", "")
                
                fname = LCase(ActiveWorkbook.Path & "\" & pagename & ".html")
                Call PRINT_INFO(x, fname)
                'Shell ("explorer.exe " & fname)
                
                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function getimage(ws)
For r = 1 To 900
        For c = 1 To 20
                x = x & " " & (Worksheets(ws).Cells(r, c).Value)
                Worksheets(ws).Cells(r, c).Interior.ColorIndex = 15
        Next c
Next r
getimage = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function gettable(ws, xrows, xcols)
x = "<table   border-collapse: collapse;   border-color: #008080;>"
x = "<table>"
For r = 1 To xrows
        
        If r < 2 Then
                x = x & "<tr STYLE='color: #008080; font-weight: bold;'><B>"
                Else
                x = x & "<tr>"
        End If
        
        For c = 1 To xcols
                x = x & "<td valign=top>"
                x = x & " " & weblink(Worksheets(ws).Cells(r, c).Value)
                Worksheets(ws).Cells(r, c).Interior.ColorIndex = 15
                x = x & "</td>"
        Next c
        
        
        If r < 2 Then
                x = x & "</B></tr>"
                Else
                x = x & "</tr>"
        End If
        
        
Next r
x = x & "</table>"
gettable = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function weblink(x)
If InStr(1, x, "http") Then
        Z = "<a href=" & x & ">" & x & "</a>"
        Z = "Watch video here: <a href=" & x & " target=_blank>" & x & "</a>"
        Else
        Z = x
        Z = Replace(Z, ".", ".<p/>")
End If
weblink = Z
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
ReturnValue = Shell("C:\Program Files\Mozilla Firefox\firefox.exe " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
Attribute VB_Name = "MAKEWEB"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub MAKEWEB()
ws = ActiveSheet.Name
x = getimage(ws)
ws = Replace(ws, " ", "")
fname = ActiveWorkbook.Path & "\zzhtml" & ws & ".html"
Call PRINT_INFO(x, fname)
Shell ("explorer.exe " & fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub MAKEWEB_form()
ws = ActiveSheet.Name
ws = "FORM"
x = getimage("html")
x = x & getimage("script")
x = x & getimage("svg")
x = x & getimage("toppage")
x = x & getimage(ws)
x = x & getimage("footer")
pagename = ws
pagename = Replace(pagename, " ", "")
pagename = Replace(pagename, "/", "")
pagename = Replace(pagename, "\", "")
fname = LCase(ActiveWorkbook.Path & "\" & pagename & ".html")
Call PRINT_INFO(x, fname)
Shell ("explorer.exe " & fname)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub MAKEWEB_multi()
For Z = 1 To Worksheets.Count
        Worksheets(Z).Activate
        
        ws = ActiveSheet.Name
        If ws = "Admin" Then Exit For
                
                x = getimage("html")
                'x = x & getimage("svg")
                x = x & getimage("menu")
                x = x & getimage(ws)
                x = x & getimage("footer")
                
                pagename = ws
                pagename = Replace(pagename, " ", "")
                pagename = Replace(pagename, "/", "")
                pagename = Replace(pagename, "\", "")
                
                fname = LCase(ActiveWorkbook.Path & "\" & pagename & ".html")
                Call PRINT_INFO(x, fname)
                'Shell ("explorer.exe " & fname)
                
                Next
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function getimage(ws)
For r = 1 To 900
        For c = 1 To 20
                x = x & " " & (Worksheets(ws).Cells(r, c).Value)
                Worksheets(ws).Cells(r, c).Interior.ColorIndex = 15
        Next c
Next r
getimage = x
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function PRINT_INFO(ByVal PARAM_TEXT As String, ByVal xoutput As String) 'vba_excel report cells, create file, print file, notepad
Dim FILENUMBER1 As Integer
Dim xpath As String
Dim xfilename As String
xpath = ActiveWorkbook.Path & "\"
xfilename = "TEMP" & Format(Now(), "yymmdd") & "-" & Format(Now(), "HHMM") & ".txt"
xfilename = xoutput
FILENUMBER1 = FreeFile
Open xpath & xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, PARAM_TEXT
Close #FILENUMBER1
Call open_file(xpath & xfilename)
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
ReturnValue = Shell("C:\Program Files\Mozilla Firefox\firefox.exe " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
Attribute VB_Name = "import_wrd_exl"
Option Explicit
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ImportWordTable()
Dim wdDoc As Object
Dim wdFileName As Variant
Dim tableNo As Integer 'table number in Word
Dim iRow As Long 'row index in Excel
Dim iCol As Integer 'column index in Excel
Dim resultRow As Long
Dim tableStart As Integer
Dim tableTot As Integer
On Error Resume Next
ActiveSheet.Range("A:AZ").ClearContents
wdFileName = Application.GetOpenFilename("Word files (*.doc),*.doc", , _
"Browse for file containing table to be imported")
If wdFileName = False Then Exit Sub '(user cancelled import file browser)
        
        Set wdDoc = GetObject(wdFileName) 'open Word file
        
        With wdDoc
        tableNo = wdDoc.tables.Count
        tableTot = wdDoc.tables.Count
        If tableNo = 0 Then
                MsgBox "This document contains no tables", _
                vbExclamation, "Import Word Table"
                ElseIf tableNo > 1 Then
                tableNo = InputBox("This Word document contains " & tableNo & " tables." & vbCrLf & _
                "Enter the table to start from", "Import Word Table", "1")
        End If
        
        resultRow = 4 ' start results from row 4
        
        For tableStart = 1 To tableTot
                With .tables(tableStart)
                'copy cell contents from Word table cells to Excel cells
                For iRow = 1 To .Rows.Count
                        For iCol = 1 To .Columns.Count
                                Cells(resultRow, iCol) = WorksheetFunction.Clean(.cell(iRow, iCol).Range.Text)
                        Next iCol
                        resultRow = resultRow + 1
                Next iRow
                End With
                resultRow = resultRow + 1
        Next tableStart
        End With
        
End Sub
Attribute VB_Name = "export"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub vba_export_modules_local()
xprefix = ActiveWorkbook.Path & "\vba_excel_"
Dim objMyProj As VBProject
Dim objVBComp As VBComponent
Set objMyProj = Application.VBE.ActiveVBProject
For Each objVBComp In objMyProj.VBComponents
        If objVBComp.Type = vbext_ct_StdModule Then
                Debug.Print "Exporting " & xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
                objVBComp.export xprefix & objVBComp.Name & ".bas"
                'objVBComp.export xprefix & objVBComp.Name & ".txt"
                
                'objVBComp.export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".bas"
                'objVBComp.export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
        End If
        Next
        
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub vba_export_modules_central()
xprefix = "V:\Data2017\VBA\VBAExcel\normal01_"
Dim objMyProj As VBProject
Dim objVBComp As VBComponent
Set objMyProj = Application.VBE.ActiveVBProject
For Each objVBComp In objMyProj.VBComponents
        If objVBComp.Type = vbext_ct_StdModule Then
                Debug.Print "Exporting " & xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
                objVBComp.export xprefix & objVBComp.Name & ".bas"
                'objVBComp.export xprefix & objVBComp.Name & ".txt"
                
                'objVBComp.export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".bas"
                'objVBComp.export xprefix & objVBComp.Name & Format(Date, "yyyymmdd-") & ".txt"
                
        End If
        Next
        
        Shell ("explorer.exe " & "V:\Data2017\VBA\VBAExcel\")
        
End Sub
Attribute VB_Name = "email"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xemail()
xbody = ActiveCell.Value
Set myOlApp = CreateObject("Outlook.Application")
Set newitem = myOlApp.CreateItem(MailItem)
newitem.To = xto
newitem.CC = xcc
newitem.BCC = "tim@tedxsthelier.com"
newitem.ReplyRecipients.Add "tim@tedxsthelier.com"
newitem.SenderName = "tim@tedxsthelier.com"
newitem.Subject = xsubject
newitem.SentOnBehalfOfName = "tim@tedxsthelier.com"
newitem.BodyFormat = olFormatRichText
newitem.Body = xbody
.BodyFormat = olFormatHTML
.HTMLBody = "<HTML><H2>The body of this message will appear in HTML.</H2><BODY>Type the message text here. </BODY></HTML>"
newitem.BillingInformation = "t.XZXZXZ@gov.je"
newitem.Attachments.Add = xattachment
newitem.Display
newitem.Send
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub email_send_mail()
r = ActiveCell.row
xto = Range("b" & r).Value
xcc = "XZXZXZ@XZXZXZ.com"
xsubject = Range("a" & r).Value & " - " & Range("d" & r).Value
Call excel_email2(xto, xcc, xsubject, xbody, xattachment)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function excel_email2(xto, xcc, xsubject, xbody, xattachment)
Set myOlApp = CreateObject("Outlook.Application")
Set newitem = myOlApp.CreateItem(MailItem)
newitem.To = xto
newitem.CC = xcc
newitem.BCC = "tim@tedxsthelier.com"
newitem.ReplyRecipients.Add "tim@tedxsthelier.com"
newitem.SenderName = "tim@tedxsthelier.com"
newitem.Subject = xsubject
newitem.SentOnBehalfOfName = "XZXZXZ@XZXZXZ.com"
newitem.BodyFormat = olFormatRichText
newitem.BodyFormat = olFormatPlain
newitem.Body = xbody
.BodyFormat = olFormatHTML
.HTMLBody = "<HTML><H2>The body of this message will appear in HTML.</H2><BODY>Type the message text here. </BODY></HTML>"
newitem.BillingInformation = "t.XZXZXZ@gov.je"
##################################
If Len(xattachment) > 1 Then
        newitem.Attachments.Add = xattachment
        Set myAttachments = newitem.Attachments
        myAttachments.Add xattachment, olByValue, 1, "Test"
        array_attachements = Split(xattachment, ",")
        For q = LBound(array_attachements) To UBound(array_attachements)
                fname = Trim(array_attachements(q))
                fname = Replace(fname, Chr(10), "")
                Debug.Print fname,
                For char = 1 To Len(fname)
                        Debug.Print Mid(fname, char, 1), Asc(Mid(fname, char, 1))
                        Next
                        myAttachments.Add fname, olByValue, 1, "Attachment" & q
                Next q
        End If
        ##################################
        
        newitem.Display
        newitem.Send
        
        
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function get_info_fileio(ByVal xfilename As String) As String
vba fileio text2html dirr
http://www.eggheadcafe.com/articles/20030627b.asp
Debug.Print vbCrLf & xfilename
Const ForReading = 1
Const ForWriting = 2
Const ForAppending = 8
Const TristateUseDefault = -2
Const TristateTrue = -1
Const TristateFalse = 0
Dim oFS
Dim oFile
Dim oStream
Dim xtext As String
Set oFS = Server.CreateObject("Scripting.FileSystemObject")
Set oFS = CreateObject("Scripting.FileSystemObject")
Set oFile = oFS.GetFile(xfilename)
Set oStream = oFile.OpenAsTextStream(ForReading, TristateUseDefault)
Do While Not oStream.AtEndOfStream
        srecord = oStream.ReadLine
        xtext = xtext & vbCrLf & srecord
        'Response.Write sRecord
        Loop
        oStream.Close
        get_info_fileio = xtext
End Function
Attribute VB_Name = "CONDITIONALFORMATTING"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub setcond()
xrange = "F4:F999"
xsheet = 1
Worksheets(xsheet).Range(xrange).FormatConditions.Delete
Call cond(xsheet, xrange, "1-1", 1, 36)
Call cond(xsheet, xrange, "1-2", 2, 37)
Call cond(xsheet, xrange, "1-3", 3, 38)
Call cond(xsheet, xrange, "1-4", 4, 39)
Call cond(xsheet, xrange, "2-1", 5, 40)
Call cond(xsheet, xrange, "3-1", 6, 41)
Call cond(xsheet, xrange, "4-1", 7, 42)
Call cond(xsheet, xrange, "1-1", 1, 36)
Call cond(xsheet, xrange, "r", 2, 44)
Call cond(xsheet, xrange, "c", 3, 43)
Call cond(xsheet, xrange, "i", 4, 36)
Call cond(xhseet, xrange, "#g", 4, 31)
Call cond(xhseet, xrange, "#a", 5, 5)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function cond(xsheet, xrange, xstring, cond_no, cond_color)
 Worksheets(3).Range("A:z").FormatConditions.Delete
With Worksheets(xsheet).Range(xrange)
.FormatConditions.Add Type:=xlTextString, String:=xstring, TextOperator:=xlContains
.FormatConditions(cond_no).Interior.ColorIndex = cond_color
End With
End Function
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub rainbow()
For r = 1 To 100
        Cells(r, 1).Interior.ColorIndex = r
Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub setvalidation()
Cells.Validation.Delete
Xlist = UCase("email,newsletter,one-to-one,team-briefing,town-hall,phone,other")
Call xvalidation("D5:D999", Xlist)
Xlist = UCase("D-dominat driven (results), I-influence (enthusiasm), C-cautious careful (accuracy), S-steady stable (support) ")
Call xvalidation("e5:e999", Xlist)
Xlist = x
Xlist = UCase("1.Delighted, 2.Happy, 3.Neutral, 4.Sad, 5.Angry")
Call xvalidation("g5:g999", Xlist)
Xlist = UCase("1.Evangelical, 2.For, 3.Neutral, 4.Against, 5.Anti")
Call xvalidation("h5:h999", Xlist)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function xvalidation(Xcol, Xlist)
With Range(Xcol).Validation
.Delete
.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
xlBetween, Formula1:=Xlist
.IgnoreBlank = True
.InCellDropdown = True
.InputTitle = ""
.ErrorTitle = ""
.InputMessage = ""
.ErrorMessage = ""
.ShowInput = True
.ShowError = True
End With
End Function
Attribute VB_Name = "buttonsx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Button1_Click()
s = "tasks"
rng = "A1:G99"
sort1 = "E2:E99"
sort2 = "A2:A99"
sort3 = "B2:B99"
Cells.Select
ActiveWorkbook.Worksheets(s).Sort.SortFields.Clear
ActiveWorkbook.Worksheets(s).Sort.SortFields.Add Key:=Range(sort1), _
SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
ActiveWorkbook.Worksheets(s).Sort.SortFields.Add Key:=Range(sort2), _
SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
ActiveWorkbook.Worksheets(s).Sort.SortFields.Add Key:=Range(sort3), _
SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
With ActiveWorkbook.Worksheets(s).Sort
.SetRange Range(rng)
.Header = xlYes
.MatchCase = False
.Orientation = xlTopToBottom
.SortMethod = xlPinYin
.Apply
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub sort01()
Attribute sort01.VB_ProcData.VB_Invoke_Func = " \n14"
s = "tasks"
rng = "A1:G99"
sort1 = "E2:E99"
sort2 = "A2:A99"
sort3 = "B2:B99"
Cells.Select
ActiveWorkbook.Worksheets(s).Sort.SortFields.Clear
ActiveWorkbook.Worksheets(s).Sort.SortFields.Add Key:=Range(sort1), _
SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
ActiveWorkbook.Worksheets(s).Sort.SortFields.Add Key:=Range(sort2), _
SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
ActiveWorkbook.Worksheets(s).Sort.SortFields.Add Key:=Range(sort3), _
SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
With ActiveWorkbook.Worksheets(s).Sort
.SetRange Range(rng)
.Header = xlYes
.MatchCase = False
.Orientation = xlTopToBottom
.SortMethod = xlPinYin
.Apply
End With
End Sub
Attribute VB_Name = "xvalidationx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xvalidation()
Range("f2:f999").Validation.Delete
xtext = "Risk,Issue, Assumption, Dependancy"
xtext = "01-Approval, 02-Initiation, 03-Execution, 04-Close, 05-Review"
xtext = "xRed,xAmber,xGreen"
xtext = Worksheets("validation").Range("a1:a999")
With Worksheets("time").Range("e2:e999").Validation
.Delete
.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
xlBetween, Formula1:=xtext
.IgnoreBlank = True
.InCellDropdown = True
.InputTitle = ""
.ErrorTitle = ""
.InputMessage = ""
.ErrorMessage = ""
.ShowInput = True
.ShowError = True
End With
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xvalid()
Macro1 Macro
Worksheets("time").Columns("E:E").Select
With Selection.Validation
.Delete
.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
xlBetween, Formula1:="=validation!$A:$A"
.IgnoreBlank = True
.InCellDropdown = True
.InputTitle = ""
.ErrorTitle = ""
.InputMessage = ""
.ErrorMessage = ""
.ShowInput = True
.ShowError = True
End With
End Sub
Attribute VB_Name = "xlayoutx"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub xlayout()
Attribute xlayout.VB_ProcData.VB_Invoke_Func = " \n14"
Macro1 Macro
For w = 1 To Worksheets.Count
        Worksheets(w).Activate
        
        
        Cells.Select
        With Selection.Font
        .Name = "Calibri"
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
        End With
        With Selection.Font
        .Name = "Calibri"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
        End With
        Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
        End With
        With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
        End With
        With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
        End With
        With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
        End With
        With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
        End With
        With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
        End With
        Cells.Select
        Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        Selection.Borders(xlEdgeLeft).LineStyle = xlNone
        Selection.Borders(xlEdgeTop).LineStyle = xlNone
        Selection.Borders(xlEdgeBottom).LineStyle = xlNone
        Selection.Borders(xlEdgeRight).LineStyle = xlNone
        Selection.Borders(xlInsideVertical).LineStyle = xlNone
        Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
        With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
        End With
        
Next w
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub ascii()
For a = 1 To 255
        Debug.Print Chr(a)
Next a
End Sub
Attribute VB_Name = "selection_loop"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub Selection_loop()
Dim rng As Range
Dim row As Range
Dim cell As Range
delim = vbCrLf
Set rng = Selection
For Each row In rng.Rows
        xc = xc + 1
        x = x & vbCrLf & xc & "."
        For Each cell In row.Cells
                'Do Something
                x = x & cell & delim
        Next cell
Next row
Debug.Print x
x = InputBox(x, x, x)
End Sub
Attribute VB_Name = "outlook"
Option Explicit
Public Sub CreateOutlookAppointments()
Sheets("Sheet1").Select
On Error GoTo Err_Execute
Dim olApp As outlook.Application
Dim olAppt As outlook.AppointmentItem
Dim blnCreated As Boolean
 Dim olNs As outlook.Namespace
Dim CalFolder As outlook.MAPIFolder
Dim i As Long
On Error Resume Next
 Set olApp = outlook.Application
If olApp Is Nothing Then
        Set olApp = outlook.Application
        blnCreated = True
        Err.Clear
        Else
        blnCreated = False
End If
On Error GoTo 0
Set olNs = olApp.GetNamespace("MAPI")
Set CalFolder = olNs.GetDefaultFolder(olFolderCalendar)
i = 2
Do Until Trim(Cells(i, 1).Value) = ""
        
        Set olAppt = CalFolder.Items.Add(olAppointmentItem)
        With olAppt
        .MeetingStatus = olMeeting
        'Define calendar item properties
        .Subject = Cells(i, 1)
        
        ' doni use location if using a resource
        ' .Location = Cells(i, 2)
        .Body = Cells(i, 3)
        .Categories = Cells(i, 4)
        .Start = Cells(i, 5) + Cells(i, 6)     '+ TimeValue("9:00:00")
        .End = Cells(i, 7) + Cells(i, 8)       '+TimeValue("10:00:00")
        .BusyStatus = olBusy
        .ReminderMinutesBeforeStart = Cells(i, 9)
        .ReminderSet = True
        
        get the recipients
        Dim RequiredAttendee, OptionalAttendee, ResourceAttendee As outlook.Recipient
        Set RequiredAttendee = .Recipients.Add(Cells(i, 10).Value)
        RequiredAttendee.Type = olRequired
        Set OptionalAttendee = .Recipients.Add(Cells(i, 11).Value)
        OptionalAttendee.Type = olOptional
        Set ResourceAttendee = .Recipients.Add(Cells(i, 12).Value)
        ResourceAttendee.Type = olResource
        For meetings or XZXZXZ Calendars
                .Display
                
                End With
                
                i = i + 1
                Loop
                Set olAppt = Nothing
                Set olApp = Nothing
                
                Exit Sub
                
                Err_Execute:
                MsgBox "An error occurred - Exporting items to Calendar."
                
End Sub
Option Explicit
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function funcAppointments()
Sheets("Sheet1").Select
On Error GoTo Err_Execute
Dim olApp As outlook.Application
Dim olAppt As outlook.AppointmentItem
Dim blnCreated As Boolean
Dim olNs As outlook.Namespace
Dim CalFolder As outlook.MAPIFolder
Dim i As Long
On Error Resume Next
Set olApp = outlook.Application
If olApp Is Nothing Then
        Set olApp = outlook.Application
        blnCreated = True
        Err.Clear
        Else
        blnCreated = False
End If
On Error GoTo 0
Set olNs = olApp.GetNamespace("MAPI")
Set CalFolder = olNs.GetDefaultFolder(olFolderCalendar)
i = 2
Do Until Trim(Cells(i, 1).Value) = ""
        
        Set olAppt = CalFolder.Items.Add(olAppointmentItem)
        With olAppt
        .MeetingStatus = olMeeting
        'Define calendar item properties
        .Subject = Cells(i, 1)
        
        ' doni use location if using a resource
        ' .Location = Cells(i, 2)
        .Body = Cells(i, 3)
        .Categories = Cells(i, 4)
        .Start = Cells(i, 5) + Cells(i, 6)     '+ TimeValue("9:00:00")
        .End = Cells(i, 7) + Cells(i, 8)       '+TimeValue("10:00:00")
        .BusyStatus = olBusy
        .ReminderMinutesBeforeStart = Cells(i, 9)
        .ReminderSet = True
        
        get the recipients
        Dim RequiredAttendee, OptionalAttendee, ResourceAttendee As outlook.Recipient
        Set RequiredAttendee = .Recipients.Add(Cells(i, 10).Value)
        RequiredAttendee.Type = olRequired
        Set OptionalAttendee = .Recipients.Add(Cells(i, 11).Value)
        OptionalAttendee.Type = olOptional
        Set ResourceAttendee = .Recipients.Add(Cells(i, 12).Value)
        ResourceAttendee.Type = olResource
        For meetings or XZXZXZ Calendars
                .Display
                
                End With
                
                i = i + 1
                Loop
                Set olAppt = Nothing
                Set olApp = Nothing
                
                Exit Function
                
                Err_Execute:
                MsgBox "An error occurred - Exporting items to Calendar."
                
End Function
Attribute VB_Name = "BIGfile_GIT_export"
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub step1_getfilelist()
Worksheets(1).Cells.Clear
Dim MyObj As Object, MySource As Object, file As Variant
xpath = ActiveWorkbook.Path & "\"
file = Dir("H:\XZXZXZD_ReOrg\VBA\Word\")
file = Dir(xpath)
While (file <> "")
        If InStr(file, ".bas") > 0 Then
                '   MsgBox "found " & file
                '   Exit Sub
                r = r + 1
                Worksheets(1).Cells(r, 1).Value = file
        End If
        
        file = Dir
        Wend
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub step2_readin_each_oneBIG_file()
Worksheets(2).Cells.Clear
Dim fileName As String, textData As String, textRow As String, fileNo As Integer
xpath = ActiveWorkbook.Path & "\"
fileName = "H:\XZXZXZD_ReOrg\VBA\Word\XZXZXZd_word_tr_newstylex20160316-.txt"
For r = 1 To 1000
        
        fileName = Worksheets(1).Cells(r, 1).Value
        If Len(fileName) < 1 Then Exit For
                
                fileNo = FreeFile 'Get first free file number
                Open xpath & fileName For Input As #fileNo
                Do While Not EOF(fileNo)
                        Line Input #fileNo, textRow
                        textData = textData & textRow
                        q = q + 1
                        Worksheets(2).Cells(q, 1).Value = textRow
                        Loop
                        Close #fileNo
                        
                        
                Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub step3_santiize_for_public()
Worksheets(3).Cells.Clear
xyourvariablex = "XZXZXZ"
For r = 1 To 30000
        x = Worksheets(2).Cells(r, 1).Value
        
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        x = Replace((x), ("XZXZXZ"), xyourvariablex, , , vbTextCompare)
        
        If Left(x, 1) = "'" Then x = "" 'BLANK OUT LINE BEGINING '=======
                If Left(x, 1) = "=" Then x = "" 'BLANK OUT LINE BEGINING '=======
                        If InStr(1, x, xyourvariablex) Then
                                Worksheets(3).Rows(r).Interior.ColorIndex = 6
                                Worksheets(3).Cells(r, 2).Value = "x"
                        End If
                        
                        Worksheets(3).Cells(r, 1).Value = x
                        
                Next r
                MsgBox "done"
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub step3b_beautify()
xindent = 0
previndex = 0
Worksheets(3).Activate
xindent_value = 8
For r = 1 To 30000
        x = Trim(Cells(r, 1).Value)
        
        
        
        If UCase(Left(x, 6)) = UCase("end if") Then xindent = xindent - xindent_value
                If UCase(Left(x, 5)) = UCase("wend ") Then xindent = xindent - xindent_value
                        If UCase(Left(x, 5)) = UCase("loop ") Then xindent = xindent - xindent_value
                                If UCase(Left(x, 5)) = UCase("next ") Then xindent = xindent - xindent_value
                                        
                                        ALWAYS default to zero at begining and end of sub and function
                                        If UCase(Left(x, 5)) = UCase("function ") Then xindent = 0
                                                If UCase(Left(x, 5)) = UCase("end f") Then xindent = 0
                                                        If UCase(Left(x, 4)) = UCase("sub ") Then xindent = 0
                                                                If UCase(Left(x, 5)) = UCase("end s") Then xindent = 0
                                                                        everything that removed a space happens BEFORE we print the line
                                                                        If xindent < 0 Then xindent = 0
                                                                                Cells(r, 1).Value = Space(xindent) & x
                                                                                everything adds a space happens AFTER we print the line
                                                                                
                                                                                If UCase(Left(x, 3)) = UCase("if ") Then xindent = xindent + xindent_value
                                                                                        If UCase(Left(x, 6)) = UCase("while ") Then xindent = xindent + xindent_value
                                                                                                If UCase(Left(x, 3)) = UCase("do ") Then xindent = xindent + xindent_value
                                                                                                        If UCase(Left(x, 4)) = UCase("for ") Then xindent = xindent + xindent_value
                                                                                                                
                                                                                                        Next r
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Sub step4_ouptut_for_public()
xfilename = ActiveWorkbook.Path & "\vba_github_source.txt"
create the file
Dim FILENUMBER1 As Integer
FILENUMBER1 = FreeFile
Open xfilename For Output As #FILENUMBER1 '
Print #FILENUMBER1, ""
Close #FILENUMBER1
append to file
Dim FILENUMBER2 As Integer
FILENUMBER2 = FreeFile
Open xfilename For Append As #FILENUMBER2 '
Worksheets(3).Activate
For r = 1 To 30000
        xline2append = Cells(r, 1).Value
        If Len(xline2append) > 0 Then
                Print #FILENUMBER2, xline2append
        End If
        
Next r
Close #FILENUMBER2
MsgBox "done"
Call open_file(xfilename)
End Sub
 
 
########################################
The code is provided "as is", without warranty of any kind, express or implied, 
In no event shall the author be responsible for loss or damages arising from the installation or use of the code.
The entire risk as to the quality and performance of the code is borne by you.
You are obliged to review, test and generally assert that the code is OK.
########################################
Function open_file(ByVal xfilename As String)
vba_excel report cells, create file, print file, notepad
Dim ReturnValue, i
ReturnValue = Shell("notepad.EXE " & xfilename, 1)  ' Run Calculator.
ReturnValue = Shell("C:\Program Files\Mozilla Firefox\firefox.exe " & xfilename, 1)  ' Run Calculator.
AppActivate ReturnValue
End Function
Attribute VB_Name = "Module2"
